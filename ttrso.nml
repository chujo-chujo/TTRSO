grf {
 grfid: "CH\0B\01";
 name: string(STR_GRF_NAME);
 desc: string(STR_GRF_DESCRIPTION);
 url:  string(STR_GRF_URL);
 version: 1;
 min_compatible_version: 1;
 param 1 {
    param_scenario_editor {
        name:       string(STR_PAR_scenario_editor_NAME);
        desc:       string(STR_PAR_scenario_editor_DESC);
        type:       bool;
        def_value:  0;
        }
    }
 param 2 {
    param_irremovable {
        name:       string(STR_PAR_irremovable_NAME);
        desc:       string(STR_PAR_irremovable_DESC);
        type:       bool;
        def_value:  0;
        }
    }
 param 3 {
    param_no_airport {
        name:       string(STR_PAR_no_airport_NAME);
        desc:       string(STR_PAR_no_airport_DESC);
        type:       bool;
        def_value:  0;
        }
    } 
 param 4 {
    param_no_infrastructure {
        name:       string(STR_PAR_no_infrastructure_NAME);
        desc:       string(STR_PAR_no_infrastructure_DESC);
        type:       bool;
        def_value:  0;
        }
    } 
 param 5 {
    param_only_cc_recolour {
        name:       string(STR_PAR_only_cc_recolour_NAME);
        desc:       string(STR_PAR_only_cc_recolour_DESC);
        type:       bool;
        def_value:  0;
        }
    }
 param 6 {
    param_only_default_recolour {
        name:       string(STR_PAR_only_default_recolour_NAME);
        desc:       string(STR_PAR_only_default_recolour_DESC);
        type:       bool;
        def_value:  0;
        }
    }
 param 7 {
    param_heliport {
        name:       string(STR_PAR_heliport_NAME);
        desc:       string(STR_PAR_heliport_DESC);
        type:       int;
        min_value:  0;
        max_value:  3;
        def_value:  0;
        names: {
                0: string(STR_PAR_heliport_NONE);
                1: string(STR_PAR_heliport_TYPE1);
                2: string(STR_PAR_heliport_TYPE2);
                3: string(STR_PAR_heliport_TYPE3);
              };
        }
    }
 param 8 {
    param_truck_stations {
        name:       string(STR_PAR_truck_stations_NAME);
        desc:       string(STR_PAR_truck_stations_DESC);
        type:       bool;
        def_value:  0;
        }
    }
 param 9 {
    param_bus_stations {
        name:       string(STR_PAR_bus_stations_NAME);
        desc:       string(STR_PAR_bus_stations_DESC);
        type:       bool;
        def_value:  0;
        }
    }
 }

//check OpenTTD version - parameterized spritelayout is only supported since OpenTTD 1.2.0 r22723
if (version_openttd(1,2,0,22723) > openttd_version) {
    error(FATAL, REQUIRES_OPENTTD, string(STR_OPENTTD_VERSION));
}

// [(left_x, upper_y, width, height, )offset_x, offset_y(, flags)(, filename)(, mask)]
template template_standard(x, y)    { [x, y, 64, 256,  -31, -225] }

template template_2x2_menu_high(x, y, w, h)   { [x,    y,  128, h,    -64, 0-192] }
template template_2x2_menu_low (x, y, w, h)   { [x,    y,  128, h,    -64, 0-208] }
template template_2x2_menu_lowest(x, y, w, h) { [x,    y,  128, h,    -64, 0-220] }
template template_2x2_T1(x, y, w, h)          { [x,    y, w+32, h-16, -31, 47-h] }
template template_2x2_T2(x, y, w, h)          { [x+32, y, w+64, h,    -31, 31-h] }
template template_2x2_T3(x, y, w, h)          { [x+96, y, w+32, h-16,   1, 47-h] }
template template_2x2_T2_overlap(x, y, w, h)  { [x,    y,  128, h,    -63, -225] }

template template_1x1_menu_high(x, y, w, h)    { [x, y, w+64,   h, -31, 0-192] }
template template_1x1_menu_low(x, y, w, h)     { [x, y, w+64,   h, -31, 0-208] }
template template_1x1_menu_lowest (x, y, w, h) { [x, y, w+64,   h, -31,  -220] }
template template_1x1(x, y, w, h)              { [x, y, w+64, 256, -31,  -225] }

template template_68pix(x, y, w, h)          { [x, y, 68,   h, -33,  -225] }
template template_76pix(x, y, w, h)          { [x, y, 76,   h, -37,  -225] }
template template_74pix(x, y, w, h)          { [x, y, 74,   h, -36,  -225] }
template template_70pix(x, y, w, h)          { [x, y, 70,   h, -34,  -225] }
template template_96pix(x, y, w, h)          { [x, y, 96,   h, -47,  -225] }

template template_1x2_menu_high(x, y, w, h)   { [x,    y, 96,   h,    -47, 0-192] }
template template_1x2_menu_low (x, y, w, h)   { [x,    y, 96,   h,    -47, 0-208] }
template template_1x2_menu_lowest(x, y, w, h) { [x,    y, 96,   h,    -47, -220] }
template template_1x2_T1(x, y, w, h)          { [x,    y, w+32, h-16, -31, 47-h] }
template template_1x2_T2(x, y, w, h)          { [x+32, y, w+64, h,    -31, 31-h] }
template template_1x2_T2_overlap(x, y, w, h)  { [x,    y, 96,   h,    -63, -225] }

template template_2x1_menu_high(x, y, w, h)    { [x,    y, 96,   h,    -47, 0-192] }
template template_2x1_menu_low (x, y, w, h)    { [x,    y, 96,   h,    -47, 0-208] }
template template_2x1_menu_lowest (x, y, w, h) { [x,    y, 96,   h,    -47, -220] }
template template_2x1_T1(x, y, w, h)           { [x,    y, w+64, h,    -31, 31-h] }
template template_2x1_T2(x, y, w, h)           { [x+32, y, w+64, h-16, -31, 47-h] }
template template_2x1_T1_overlap(x, y, w, h)   { [x,    y, 96,   h,    -31, -225] }

template template_3x1_menu(x, y, w, h)        { [x,    y,  128, h,    -64, -224] }
template template_3x1_T1(x, y, w, h)          { [x,    y, w+64, h,    -31, 31-h] }
template template_3x1_T2(x, y, w, h)          { [x+32, y, w+64, h-16, -31, 47-h] }
template template_3x1_T3(x, y, w, h)          { [x+64, y, w+64, h-32, -31, 63-h] }

template template_4x3_menu_high(x, y, w, h) { [x,     y, 224 , h, -112, 0-(2*h/3)] }
template template_4x3_menu_low(x, y, w, h)  { [x,     y, 224 , h, -112, -200] }
template template_4x3_T1(x, y, w, h)        { [x,     y, w+64, h, -31, 63-h] }
template template_4x3_T2(x, y, w, h)        { [x+32,  y, w+64, h, -31, 47-h] }
template template_4x3_T3(x, y, w, h)        { [x+64,  y, w+64, h, -31, 31-h] }
template template_4x3_T4(x, y, w, h)        { [x+96,  y, w+64, h, -31, 47-h] }
template template_4x3_T5(x, y, w, h)        { [x+128, y, w+64, h, -31, 63-h] }
template template_4x3_T6(x, y, w, h)        { [x+160, y, w+64, h, -31, 79-h] }

template template_6x6_menu_low(x, y, w, h)  { [x,     y, 384 , h, -191, -180] }
template template_6x6_T1 (x, y, w, h)       { [x,     y, w+64, h, -31, 111-h] }
template template_6x6_T2 (x, y, w, h)       { [x+32 , y, w+64, h, -31,  95-h] }
template template_6x6_T3 (x, y, w, h)       { [x+64 , y, w+64, h, -31,  79-h] }
template template_6x6_T4 (x, y, w, h)       { [x+96 , y, w+64, h, -31,  63-h] }
template template_6x6_T5 (x, y, w, h)       { [x+128, y, w+64, h, -31,  47-h] }
template template_6x6_T6 (x, y, w, h)       { [x+160, y, w+64, h, -31,  31-h] }
template template_6x6_T7 (x, y, w, h)       { [x+192, y, w+64, h, -31,  47-h] }
template template_6x6_T8 (x, y, w, h)       { [x+224, y, w+64, h, -31,  63-h] }
template template_6x6_T9 (x, y, w, h)       { [x+256, y, w+64, h, -31,  79-h] }
template template_6x6_T10(x, y, w, h)       { [x+288, y, w+64, h, -31,  95-h] }
template template_6x6_T11(x, y, w, h)       { [x+320, y, w+64, h, -31, 111-h] }

template template_roads_menu (x, y)          { [x, y, 64,   256, -31,       -233] }
template template_stations_menu (x, y, w, h) { [x, y, w+64, h,   -31-(w/2), -229] }

template template_north_slope(x, y)  { [x, y, 64, 256, -31, -232] }
template template_east_slope (x, y)  { [x, y, 64, 256, -31, -232] }
template template_west_slope (x, y)  { [x, y, 64, 256, -31, -232] }
template template_steep_s    (x, y)  { [x, y, 64, 256, -31, -232] }
template template_steep_w    (x, y)  { [x, y, 64, 256, -31, -232] }
template template_steep_e    (x, y)  { [x, y, 64, 256, -31, -232] }
template template_steep_n    (x, y)  { [x, y, 64, 256, -31, -233] }
template template_ne_slope   (x, y)  { [x, y, 64, 256, -31, -225] }
template template_sw_slope   (x, y)  { [x, y, 64, 256, -31, -233] }
template template_se_slope   (x, y)  { [x, y, 64, 256, -31, -233] }
template template_nw_slope   (x, y)  { [x, y, 64, 256, -31, -225] }
template template_enw_slope  (x, y)  { [x, y, 64, 256, -31, -229] }
template template_ns_slope   (x, y)  { [x, y, 64, 256, -31, -226] }







/////////////////////////////////////////////////////////////////////
// Heliports
/////////////////////////////////////////////////////////////////////

if (param_heliport == 1) {
    replace heliport1(2633, "gfx/CAT02_OBJ18.png") {
        template_1x1  (0,0,0,256)
    }
}
if (param_heliport == 2) {
    replace heliport2(2633, "gfx/CAT02_OBJ18.png") {
        template_1x1  (74,0,0,256)
    }
}
if (param_heliport == 3) {
    replace heliport3(2633, "gfx/CAT02_OBJ18.png") {
        template_76pix(0,266,0,256)
    }
}



/////////////////////////////////////////////////////////////////////
// Truck stations
/////////////////////////////////////////////////////////////////////

if (param_truck_stations == 1) {
    replace truck_stop1a(2719, "gfx/CAT03_truck_stop.png") { [148,  0, 64, 256, -57, -238] }
    replace truck_stop1b(2723, "gfx/CAT03_truck_stop.png") { template_1x1  (222,  0,   0, 256) }
    replace truck_stop1c(2715, "gfx/CAT03_truck_stop.png") { template_1x1  (222,  0,   0, 256) }
    
    replace truck_stop2a(2712, "gfx/CAT03_truck_stop.png") { [296,  0, 64, 256, -61, -240] }
    replace truck_stop2b(2716, "gfx/CAT03_truck_stop.png") { template_1x1  (370,  0,   0, 256) }
    replace truck_stop2c(2720, "gfx/CAT03_truck_stop.png") { template_1x1  (370,  0,   0, 256) }
    
    replace truck_stop3a(2722, "gfx/CAT03_truck_stop.png") { [148, 266, 64, 256, -55, -243] }
    replace truck_stop3b(2714, "gfx/CAT03_truck_stop.png") { template_1x1  (222, 0, 0, 256) }
    replace truck_stop3c(2718, "gfx/CAT03_truck_stop.png") { [222, 266, 64, 256, -31, -225] }
    
    replace truck_stop4a(2713, "gfx/CAT03_truck_stop.png") { [294, 266, 68, 256, -9, -243] }
    replace truck_stop4b(2721, "gfx/CAT03_truck_stop.png") { template_1x1  (370, 0, 0, 256) }
    replace truck_stop4c(2717, "gfx/CAT03_truck_stop.png") { [370, 266, 64, 256, -31, -225] }
    
    // drive-through
    replace truck_stop5a(5983, "gfx/CAT03_truck_stop.png") { template_1x1  (0,0,0,256) }
    replace truck_stop5b(5984, "gfx/CAT03_truck_stop.png") { [74, 0,   64, 256, -57, -238] }
    replace truck_stop6a(5981, "gfx/CAT03_truck_stop.png") { [74, 266, 64, 256, -5, -238] }
    replace truck_stop6b(5982, "gfx/CAT03_truck_stop.png") { template_1x1  (0,266,0,256) }
}



/////////////////////////////////////////////////////////////////////
// Bus stations
/////////////////////////////////////////////////////////////////////

if (param_bus_stations == 1) {
    replace bus_stop1a(2703, "gfx/CAT03_bus_stop.png") { [74,  0,   64, 256, -46, -240] }
    replace bus_stop1b(2707, "gfx/CAT03_bus_stop.png") { [0,   0,   64, 256, -26, -249] }
    replace bus_stop2a(2700, "gfx/CAT03_bus_stop.png") { [222, 0,   64, 256, -20, -240] }
    replace bus_stop2b(2704, "gfx/CAT03_bus_stop.png") { [148, 0,   64, 256, -33, -249] }
    replace bus_stop3a(2702, "gfx/CAT03_bus_stop.png") { [74,  266, 64, 256, -17, -241] }
    replace bus_stop3b(2706, "gfx/CAT03_bus_stop.png") { [0,   266, 64, 256, -54, -239] }
    replace bus_stop4a(2701, "gfx/CAT03_bus_stop.png") { [222, 266, 64, 256, -42, -241] }
    replace bus_stop4b(2705, "gfx/CAT03_bus_stop.png") { [148, 266, 64, 256, -12, -239] }
    
    // drive-through
    replace bus_stop5a(5979, "gfx/CAT03_bus_stop.png") { [222, 266, 64, 256, -42, -241] }
    replace bus_stop5b(5980, "gfx/CAT03_bus_stop.png") { [296, 266, 64, 256, -42, -241] }
    replace bus_stop6a(5977, "gfx/CAT03_bus_stop.png") { [296, 0,   64, 256, -16, -241] }
    replace bus_stop6b(5978, "gfx/CAT03_bus_stop.png") { [74,  266, 64, 256, -16, -241] }
}




/////////////////////////////////////////////////////////////////////
// CAT01_OBJ01
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ01_VAR01_menu,"gfx/CAT01_OBJ01.png") { template_2x2_menu_low(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ01_VAR01_T2,  "gfx/CAT01_OBJ01.png") { template_2x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ01_VAR01_T2_S,"gfx/CAT01_OBJ01.png") { template_2x2_T2_overlap  (138,0,0,256) }

spriteset(spriteset_CAT01_OBJ01_VAR02_menu,"gfx/CAT01_OBJ01.png") { template_2x2_menu_low(276,0,0,256) }
spriteset(spriteset_CAT01_OBJ01_VAR02_T2,  "gfx/CAT01_OBJ01.png") { template_2x2_T2_overlap  (276,0,0,256) }
spriteset(spriteset_CAT01_OBJ01_VAR02_T2_S,"gfx/CAT01_OBJ01.png") { template_2x2_T2_overlap  (414,0,0,256) }

spriteset(spriteset_CAT01_OBJ01_VAR03_menu,"gfx/CAT01_OBJ01.png") { template_2x2_menu_low(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ01_VAR03_T2,  "gfx/CAT01_OBJ01.png") { template_2x2_T2_overlap  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ01_VAR03_T2_S,"gfx/CAT01_OBJ01.png") { template_2x2_T2_overlap  (138,266,0,256) }

spriteset(spriteset_CAT01_OBJ01_VAR04_menu,"gfx/CAT01_OBJ01.png") { template_2x2_menu_low(276,266,0,256) }
spriteset(spriteset_CAT01_OBJ01_VAR04_T2,  "gfx/CAT01_OBJ01.png") { template_2x2_T2_overlap  (276,266,0,256) }
spriteset(spriteset_CAT01_OBJ01_VAR04_T2_S,"gfx/CAT01_OBJ01.png") { template_2x2_T2_overlap  (414,266,0,256) }

spritelayout layout_CAT01_OBJ01_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ01_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ01_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ01_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ01_VAR01_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ01_VAR01_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ01_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ01_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ01_VAR02_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ01_VAR02_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ01_VAR02_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ01_VAR02_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ01_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ01_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ01_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ01_VAR03_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ01_VAR03_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ01_VAR03_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ01_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ01_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ01_VAR04_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ01_VAR04_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ01_VAR04_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ01_VAR04_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ01_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ01_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ01_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ01_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ01_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ01_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ01_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ01_VAR04_menu; }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ01_VAR01, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ01_VAR01_T1;
    relative_coord(1, 1): layout_CAT01_OBJ01_VAR01_T2;
    relative_coord(0, 1): layout_CAT01_OBJ01_VAR01_T3;
    relative_coord(0, 0): layout_CAT01_OBJ01_VAR01_T4;
    layout_CAT01_OBJ01_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ01_VAR02, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ01_VAR02_T1;
    relative_coord(1, 1): layout_CAT01_OBJ01_VAR02_T2;
    relative_coord(0, 1): layout_CAT01_OBJ01_VAR02_T3;
    relative_coord(0, 0): layout_CAT01_OBJ01_VAR02_T4;
    layout_CAT01_OBJ01_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ01_VAR03, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ01_VAR03_T1;
    relative_coord(1, 1): layout_CAT01_OBJ01_VAR03_T2;
    relative_coord(0, 1): layout_CAT01_OBJ01_VAR03_T3;
    relative_coord(0, 0): layout_CAT01_OBJ01_VAR03_T4;
    layout_CAT01_OBJ01_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ01_VAR04, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ01_VAR04_T1;
    relative_coord(1, 1): layout_CAT01_OBJ01_VAR04_T2;
    relative_coord(0, 1): layout_CAT01_OBJ01_VAR04_T3;
    relative_coord(0, 0): layout_CAT01_OBJ01_VAR04_T4;
    layout_CAT01_OBJ01_VAR04_T1;
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ01_VAR_view, view) {
    0: switch_CAT01_OBJ01_VAR01;
    1: switch_CAT01_OBJ01_VAR02;
    2: switch_CAT01_OBJ01_VAR03;
    3: switch_CAT01_OBJ01_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ01_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ01_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ01_VAR_menu, view) {
    0:  layout_CAT01_OBJ01_VAR01_menu;
    1:  layout_CAT01_OBJ01_VAR02_menu;
    2:  layout_CAT01_OBJ01_VAR03_menu;
    3:  layout_CAT01_OBJ01_VAR04_menu;
}


item (FEAT_OBJECTS, CAT01_OBJ01) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ01);
        climates_available:     ALL_CLIMATES;
        size:                   [2,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ01_VAR;
        purchase:               switch_CAT01_OBJ01_VAR_menu;
        // additional_text:        switch_CAT01_OBJ01_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ02
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ02_VAR01_menu,"gfx/CAT01_OBJ02.png") { template_2x2_menu_low(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ02_VAR01_T2,  "gfx/CAT01_OBJ02.png") { template_2x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ02_VAR01_T2_S,"gfx/CAT01_OBJ02.png") { template_2x2_T2_overlap  (138,0,0,256) }

spriteset(spriteset_CAT01_OBJ02_VAR02_menu,"gfx/CAT01_OBJ02.png") { template_2x2_menu_low(276,0,0,256) }
spriteset(spriteset_CAT01_OBJ02_VAR02_T2,  "gfx/CAT01_OBJ02.png") { template_2x2_T2_overlap  (276,0,0,256) }
spriteset(spriteset_CAT01_OBJ02_VAR02_T2_S,"gfx/CAT01_OBJ02.png") { template_2x2_T2_overlap  (414,0,0,256) }

spriteset(spriteset_CAT01_OBJ02_VAR03_menu,"gfx/CAT01_OBJ02.png") { template_2x2_menu_low(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ02_VAR03_T2,  "gfx/CAT01_OBJ02.png") { template_2x2_T2_overlap  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ02_VAR03_T2_S,"gfx/CAT01_OBJ02.png") { template_2x2_T2_overlap  (138,266,0,256) }

spriteset(spriteset_CAT01_OBJ02_VAR04_menu,"gfx/CAT01_OBJ02.png") { template_2x2_menu_low(276,266,0,256) }
spriteset(spriteset_CAT01_OBJ02_VAR04_T2,  "gfx/CAT01_OBJ02.png") { template_2x2_T2_overlap  (276,266,0,256) }
spriteset(spriteset_CAT01_OBJ02_VAR04_T2_S,"gfx/CAT01_OBJ02.png") { template_2x2_T2_overlap  (414,266,0,256) }

spritelayout layout_CAT01_OBJ02_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ02_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ02_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ02_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ02_VAR01_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ02_VAR01_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ02_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ02_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ02_VAR02_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ02_VAR02_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ02_VAR02_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ02_VAR02_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ02_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ02_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ02_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ02_VAR03_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ02_VAR03_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ02_VAR03_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ02_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ02_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ02_VAR04_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ02_VAR04_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ02_VAR04_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ02_VAR04_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ02_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ02_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ02_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ02_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ02_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ02_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ02_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ02_VAR04_menu; }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ02_VAR01, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ02_VAR01_T1;
    relative_coord(1, 1): layout_CAT01_OBJ02_VAR01_T2;
    relative_coord(0, 1): layout_CAT01_OBJ02_VAR01_T3;
    relative_coord(0, 0): layout_CAT01_OBJ02_VAR01_T4;
    layout_CAT01_OBJ02_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ02_VAR02, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ02_VAR02_T1;
    relative_coord(1, 1): layout_CAT01_OBJ02_VAR02_T2;
    relative_coord(0, 1): layout_CAT01_OBJ02_VAR02_T3;
    relative_coord(0, 0): layout_CAT01_OBJ02_VAR02_T4;
    layout_CAT01_OBJ02_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ02_VAR03, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ02_VAR03_T1;
    relative_coord(1, 1): layout_CAT01_OBJ02_VAR03_T2;
    relative_coord(0, 1): layout_CAT01_OBJ02_VAR03_T3;
    relative_coord(0, 0): layout_CAT01_OBJ02_VAR03_T4;
    layout_CAT01_OBJ02_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ02_VAR04, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ02_VAR04_T1;
    relative_coord(1, 1): layout_CAT01_OBJ02_VAR04_T2;
    relative_coord(0, 1): layout_CAT01_OBJ02_VAR04_T3;
    relative_coord(0, 0): layout_CAT01_OBJ02_VAR04_T4;
    layout_CAT01_OBJ02_VAR04_T1;
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ02_VAR_view, view) {
    0: switch_CAT01_OBJ02_VAR01;
    1: switch_CAT01_OBJ02_VAR02;
    2: switch_CAT01_OBJ02_VAR03;
    3: switch_CAT01_OBJ02_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ02_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ02_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ02_VAR_menu, view) {
    0:  layout_CAT01_OBJ02_VAR01_menu;
    1:  layout_CAT01_OBJ02_VAR02_menu;
    2:  layout_CAT01_OBJ02_VAR03_menu;
    3:  layout_CAT01_OBJ02_VAR04_menu;
}


item (FEAT_OBJECTS, CAT01_OBJ02) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ02);
        climates_available:     ALL_CLIMATES;
        size:                   [2,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ02_VAR;
        purchase:               switch_CAT01_OBJ02_VAR_menu;
        // additional_text:        switch_CAT01_OBJ02_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ03
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ03_VAR01_menu,"gfx/CAT01_OBJ03.png") { template_1x1_menu_low(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ03_VAR01,  "gfx/CAT01_OBJ03.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ03_VAR01_S,"gfx/CAT01_OBJ03.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ03_VAR02_menu,"gfx/CAT01_OBJ03.png") { template_1x1_menu_low(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ03_VAR02,  "gfx/CAT01_OBJ03.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ03_VAR02_S,"gfx/CAT01_OBJ03.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ03_VAR03_menu,"gfx/CAT01_OBJ03.png") { template_1x1_menu_low(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ03_VAR03,  "gfx/CAT01_OBJ03.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ03_VAR03_S,"gfx/CAT01_OBJ03.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ03_VAR04_menu,"gfx/CAT01_OBJ03.png") { template_1x1_menu_low(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ03_VAR04,  "gfx/CAT01_OBJ03.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ03_VAR04_S,"gfx/CAT01_OBJ03.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ03_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ03_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ03_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ03_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ03_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_CONCRETE : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ03_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_CONCRETE : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ03_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ03_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ03_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ03_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ03_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ03_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ03_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ03_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ03_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ03_VAR02_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_CONCRETE; }
}
spritelayout layout_CAT01_OBJ03_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ03_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_BLUE; }
}
spritelayout layout_CAT01_OBJ03_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ03_VAR04_menu; }
}

// store recolour palette number to memory 3
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR02_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ03_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR02_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ03_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR02_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ03_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR02_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ03_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR02_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ03_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR02_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ03_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR02_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ03_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ03_VAR02) {
      // 1: CAT01_OBJ03_VAR02_1;            // blue
      1: CAT01_OBJ03_VAR02_2;           // brown
      1: CAT01_OBJ03_VAR02_3;           // white
      // 1: CAT01_OBJ03_VAR02_4;            // red
      1: CAT01_OBJ03_VAR02_5;           // green
      1: CAT01_OBJ03_VAR02_6;           // concrete
      // 1: CAT01_OBJ03_VAR02_7;            // yellow
        }

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ03_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ03_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ03_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ03_VAR03) {
      1: CAT01_OBJ03_VAR03_1;           // dark blue
      1: CAT01_OBJ03_VAR03_2;           // pale green
      1: CAT01_OBJ03_VAR03_3;           // pink
      1: CAT01_OBJ03_VAR03_4;           // yellow
      1: CAT01_OBJ03_VAR03_5;           // red
      1: CAT01_OBJ03_VAR03_6;           // light blue
      1: CAT01_OBJ03_VAR03_7;           // green
      1: CAT01_OBJ03_VAR03_8;           // dark green
      1: CAT01_OBJ03_VAR03_9;           // blue
      1: CAT01_OBJ03_VAR03_10;          // cream
      1: CAT01_OBJ03_VAR03_11;          // mauve
      1: CAT01_OBJ03_VAR03_12;          // purple
      1: CAT01_OBJ03_VAR03_13;          // orange
      1: CAT01_OBJ03_VAR03_14;          // brown
      1: CAT01_OBJ03_VAR03_15;          // grey
      1: CAT01_OBJ03_VAR03_16;  }           // white


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ03_VAR_view, view) {
    0: layout_CAT01_OBJ03_VAR01;
    1: colour_CAT01_OBJ03_VAR02;
    2: colour_CAT01_OBJ03_VAR03;
    3: layout_CAT01_OBJ03_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ03_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ03_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ03_VAR_menu, view) {
    0:  layout_CAT01_OBJ03_VAR01_menu;
    1:  layout_CAT01_OBJ03_VAR02_menu;
    2:  layout_CAT01_OBJ03_VAR03_menu;
    3:  layout_CAT01_OBJ03_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ03_TXT, view) {
    // 0:  string(STR_MULTI_COLOURED);
    1:  string(STR_MULTI_COLOURED);
    2:  string(STR_CC);
    // 3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ03) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ03);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ03_VAR;
        purchase:               switch_CAT01_OBJ03_VAR_menu;
        additional_text:        switch_CAT01_OBJ03_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ04
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ04_VAR01_menu,"gfx/CAT01_OBJ04.png") { template_1x1_menu_low(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ04_VAR01,  "gfx/CAT01_OBJ04.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ04_VAR01_S,"gfx/CAT01_OBJ04.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ04_VAR02_menu,"gfx/CAT01_OBJ04.png") { template_1x1_menu_low(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ04_VAR02,  "gfx/CAT01_OBJ04.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ04_VAR02_S,"gfx/CAT01_OBJ04.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ04_VAR03_menu,"gfx/CAT01_OBJ04.png") { template_1x1_menu_low(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ04_VAR03,  "gfx/CAT01_OBJ04.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ04_VAR03_S,"gfx/CAT01_OBJ04.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ04_VAR04_menu,"gfx/CAT01_OBJ04.png") { template_1x1_menu_low(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ04_VAR04,  "gfx/CAT01_OBJ04.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ04_VAR04_S,"gfx/CAT01_OBJ04.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ04_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ04_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ04_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ04_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ04_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ04_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ04_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ04_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ04_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ04_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ04_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ04_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ04_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ04_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_BROWN; }
}
spritelayout layout_CAT01_OBJ04_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ04_VAR02_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_GREEN; } 
}
spritelayout layout_CAT01_OBJ04_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ04_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ04_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ04_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_RED; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ04_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ04_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ04_VAR01) {
      1: CAT01_OBJ04_VAR01_1;           // dark blue
      1: CAT01_OBJ04_VAR01_2;           // pale green
      1: CAT01_OBJ04_VAR01_3;           // pink
      1: CAT01_OBJ04_VAR01_4;           // yellow
      1: CAT01_OBJ04_VAR01_5;           // red
      1: CAT01_OBJ04_VAR01_6;           // light blue
      1: CAT01_OBJ04_VAR01_7;           // green
      1: CAT01_OBJ04_VAR01_8;           // dark green
      1: CAT01_OBJ04_VAR01_9;           // blue
      1: CAT01_OBJ04_VAR01_10;          // cream
      1: CAT01_OBJ04_VAR01_11;          // mauve
      1: CAT01_OBJ04_VAR01_12;          // purple
      1: CAT01_OBJ04_VAR01_13;          // orange
      1: CAT01_OBJ04_VAR01_14;          // brown
      1: CAT01_OBJ04_VAR01_15;          // grey
      1: CAT01_OBJ04_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ04_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR02_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ04_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ04_VAR02) {
      1: CAT01_OBJ04_VAR02_1;           // dark blue
      1: CAT01_OBJ04_VAR02_2;           // pale green
      1: CAT01_OBJ04_VAR02_3;           // pink
      1: CAT01_OBJ04_VAR02_4;           // yellow
      1: CAT01_OBJ04_VAR02_5;           // red
      1: CAT01_OBJ04_VAR02_6;           // light blue
      1: CAT01_OBJ04_VAR02_7;           // green
      1: CAT01_OBJ04_VAR02_8;           // dark green
      1: CAT01_OBJ04_VAR02_9;           // blue
      1: CAT01_OBJ04_VAR02_10;          // cream
      1: CAT01_OBJ04_VAR02_11;          // mauve
      1: CAT01_OBJ04_VAR02_12;          // purple
      1: CAT01_OBJ04_VAR02_13;          // orange
      1: CAT01_OBJ04_VAR02_14;          // brown
      1: CAT01_OBJ04_VAR02_15;          // grey
      1: CAT01_OBJ04_VAR02_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ04_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ04_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ04_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ04_VAR04) {
      1: CAT01_OBJ04_VAR04_1;           // dark blue
      1: CAT01_OBJ04_VAR04_2;           // pale green
      1: CAT01_OBJ04_VAR04_3;           // pink
      1: CAT01_OBJ04_VAR04_4;           // yellow
      1: CAT01_OBJ04_VAR04_5;           // red
      1: CAT01_OBJ04_VAR04_6;           // light blue
      1: CAT01_OBJ04_VAR04_7;           // green
      1: CAT01_OBJ04_VAR04_8;           // dark green
      1: CAT01_OBJ04_VAR04_9;           // blue
      1: CAT01_OBJ04_VAR04_10;          // cream
      1: CAT01_OBJ04_VAR04_11;          // mauve
      1: CAT01_OBJ04_VAR04_12;          // purple
      1: CAT01_OBJ04_VAR04_13;          // orange
      1: CAT01_OBJ04_VAR04_14;          // brown
      1: CAT01_OBJ04_VAR04_15;          // grey
      1: CAT01_OBJ04_VAR04_16;  }           // white


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ04_VAR_view, view) {
    0: colour_CAT01_OBJ04_VAR01;
    1: colour_CAT01_OBJ04_VAR02;
    2: layout_CAT01_OBJ04_VAR03;
    3: colour_CAT01_OBJ04_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ04_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ04_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ04_VAR_menu, view) {
    0:  layout_CAT01_OBJ04_VAR01_menu;
    1:  layout_CAT01_OBJ04_VAR02_menu;
    2:  layout_CAT01_OBJ04_VAR03_menu;
    3:  layout_CAT01_OBJ04_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ04_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    // 2:  string(STR_CC);
    3:  string(STR_CC);
}


item (FEAT_OBJECTS, CAT01_OBJ04) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ04);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ04_VAR;
        purchase:               switch_CAT01_OBJ04_VAR_menu;
        additional_text:        switch_CAT01_OBJ04_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ05
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ05_VAR01_menu,"gfx/CAT01_OBJ05.png") { template_2x2_menu_low(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ05_VAR01_T2,  "gfx/CAT01_OBJ05.png") { template_2x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ05_VAR01_T2_S,"gfx/CAT01_OBJ05.png") { template_2x2_T2_overlap  (138,0,0,256) }

spriteset(spriteset_CAT01_OBJ05_VAR02_menu,"gfx/CAT01_OBJ05.png") { template_2x2_menu_low(276,0,0,256) }
spriteset(spriteset_CAT01_OBJ05_VAR02_T2,  "gfx/CAT01_OBJ05.png") { template_2x2_T2_overlap  (276,0,0,256) }
spriteset(spriteset_CAT01_OBJ05_VAR02_T2_S,"gfx/CAT01_OBJ05.png") { template_2x2_T2_overlap  (414,0,0,256) }

spriteset(spriteset_CAT01_OBJ05_VAR03_menu,"gfx/CAT01_OBJ05.png") { template_2x2_menu_low(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ05_VAR03_T2,  "gfx/CAT01_OBJ05.png") { template_2x2_T2_overlap  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ05_VAR03_T2_S,"gfx/CAT01_OBJ05.png") { template_2x2_T2_overlap  (138,266,0,256) }

spriteset(spriteset_CAT01_OBJ05_VAR04_menu,"gfx/CAT01_OBJ05.png") { template_2x2_menu_low(276,266,0,256) }
spriteset(spriteset_CAT01_OBJ05_VAR04_T2,  "gfx/CAT01_OBJ05.png") { template_2x2_T2_overlap  (276,266,0,256) }
spriteset(spriteset_CAT01_OBJ05_VAR04_T2_S,"gfx/CAT01_OBJ05.png") { template_2x2_T2_overlap  (414,266,0,256) }


spritelayout layout_CAT01_OBJ05_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ05_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ05_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ05_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ05_VAR01_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ05_VAR01_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ05_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ05_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ05_VAR02_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ05_VAR02_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ05_VAR02_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ05_VAR02_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ05_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ05_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ05_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ05_VAR03_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ05_VAR03_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ05_VAR03_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ05_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ05_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ05_VAR04_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ05_VAR04_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ05_VAR04_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ05_VAR04_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ05_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ05_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_PINK; }
}
spritelayout layout_CAT01_OBJ05_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ05_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ05_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ05_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_RED; }
}
spritelayout layout_CAT01_OBJ05_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ05_VAR04_menu; }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ05_VAR01, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ05_VAR01_T1;
    relative_coord(1, 1): layout_CAT01_OBJ05_VAR01_T2;
    relative_coord(0, 1): layout_CAT01_OBJ05_VAR01_T3;
    relative_coord(0, 0): layout_CAT01_OBJ05_VAR01_T4;
    layout_CAT01_OBJ05_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ05_VAR02, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ05_VAR02_T1;
    relative_coord(1, 1): layout_CAT01_OBJ05_VAR02_T2;
    relative_coord(0, 1): layout_CAT01_OBJ05_VAR02_T3;
    relative_coord(0, 0): layout_CAT01_OBJ05_VAR02_T4;
    layout_CAT01_OBJ05_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ05_VAR03, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ05_VAR03_T1;
    relative_coord(1, 1): layout_CAT01_OBJ05_VAR03_T2;
    relative_coord(0, 1): layout_CAT01_OBJ05_VAR03_T3;
    relative_coord(0, 0): layout_CAT01_OBJ05_VAR03_T4;
    layout_CAT01_OBJ05_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ05_VAR04, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ05_VAR04_T1;
    relative_coord(1, 1): layout_CAT01_OBJ05_VAR04_T2;
    relative_coord(0, 1): layout_CAT01_OBJ05_VAR04_T3;
    relative_coord(0, 0): layout_CAT01_OBJ05_VAR04_T4;
    layout_CAT01_OBJ05_VAR04_T1;
}


// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ05_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ05_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ05_VAR01) {
      1: CAT01_OBJ05_VAR01_1;           // dark blue
      1: CAT01_OBJ05_VAR01_2;           // pale green
      1: CAT01_OBJ05_VAR01_3;           // pink
      1: CAT01_OBJ05_VAR01_4;           // yellow
      1: CAT01_OBJ05_VAR01_5;           // red
      1: CAT01_OBJ05_VAR01_6;           // light blue
      1: CAT01_OBJ05_VAR01_7;           // green
      1: CAT01_OBJ05_VAR01_8;           // dark green
      1: CAT01_OBJ05_VAR01_9;           // blue
      1: CAT01_OBJ05_VAR01_10;          // cream
      1: CAT01_OBJ05_VAR01_11;          // mauve
      1: CAT01_OBJ05_VAR01_12;          // purple
      1: CAT01_OBJ05_VAR01_13;          // orange
      1: CAT01_OBJ05_VAR01_14;          // brown
      1: CAT01_OBJ05_VAR01_15;          // grey
      1: CAT01_OBJ05_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ05_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ05_VAR03_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ05_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ05_VAR03) {
      1: CAT01_OBJ05_VAR03_1;           // dark blue
      1: CAT01_OBJ05_VAR03_2;           // pale green
      1: CAT01_OBJ05_VAR03_3;           // pink
      1: CAT01_OBJ05_VAR03_4;           // yellow
      1: CAT01_OBJ05_VAR03_5;           // red
      1: CAT01_OBJ05_VAR03_6;           // light blue
      1: CAT01_OBJ05_VAR03_7;           // green
      1: CAT01_OBJ05_VAR03_8;           // dark green
      1: CAT01_OBJ05_VAR03_9;           // blue
      1: CAT01_OBJ05_VAR03_10;          // cream
      1: CAT01_OBJ05_VAR03_11;          // mauve
      1: CAT01_OBJ05_VAR03_12;          // purple
      1: CAT01_OBJ05_VAR03_13;          // orange
      1: CAT01_OBJ05_VAR03_14;          // brown
      1: CAT01_OBJ05_VAR03_15;          // grey
      1: CAT01_OBJ05_VAR03_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ05_VAR_view, view) {
    0: colour_CAT01_OBJ05_VAR01;
    1: switch_CAT01_OBJ05_VAR02;
    2: colour_CAT01_OBJ05_VAR03;
    3: switch_CAT01_OBJ05_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ05_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ05_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ05_VAR_menu, view) {
    0:  layout_CAT01_OBJ05_VAR01_menu;
    1:  layout_CAT01_OBJ05_VAR02_menu;
    2:  layout_CAT01_OBJ05_VAR03_menu;
    3:  layout_CAT01_OBJ05_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ05_TXT, view) {
    0:  string(STR_CAT01_OBJ05_TXT01);
    1:  string(STR_CAT01_OBJ05_TXT02);
    2:  string(STR_CAT01_OBJ05_TXT03);
    3:  string(STR_CAT01_OBJ05_TXT04);
}


item (FEAT_OBJECTS, CAT01_OBJ05) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ05);
        climates_available:     ALL_CLIMATES;
        size:                   [2,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ05_VAR;
        purchase:               switch_CAT01_OBJ05_VAR_menu;
        additional_text:        switch_CAT01_OBJ05_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ06
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ06_VAR01_menu,"gfx/CAT01_OBJ06.png") { template_2x2_menu_low(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ06_VAR01_T2,  "gfx/CAT01_OBJ06.png") { template_2x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ06_VAR01_T2_S,"gfx/CAT01_OBJ06.png") { template_2x2_T2_overlap  (138,0,0,256) }

spriteset(spriteset_CAT01_OBJ06_VAR02_menu,"gfx/CAT01_OBJ06.png") { template_2x2_menu_low(276,0,0,256) }
spriteset(spriteset_CAT01_OBJ06_VAR02_T2,  "gfx/CAT01_OBJ06.png") { template_2x2_T2_overlap  (276,0,0,256) }
spriteset(spriteset_CAT01_OBJ06_VAR02_T2_S,"gfx/CAT01_OBJ06.png") { template_2x2_T2_overlap  (414,0,0,256) }

spriteset(spriteset_CAT01_OBJ06_VAR03_menu,"gfx/CAT01_OBJ06.png") { template_2x2_menu_low(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ06_VAR03_T2,  "gfx/CAT01_OBJ06.png") { template_2x2_T2_overlap  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ06_VAR03_T2_S,"gfx/CAT01_OBJ06.png") { template_2x2_T2_overlap  (138,266,0,256) }

spritelayout layout_CAT01_OBJ06_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ06_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ06_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ06_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ06_VAR01_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ06_VAR01_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ06_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ06_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ06_VAR02_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ06_VAR02_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ06_VAR02_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ06_VAR02_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ06_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ06_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ06_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ06_VAR03_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ06_VAR03_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT01_OBJ06_VAR03_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ06_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}
spritelayout layout_CAT01_OBJ06_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}
spritelayout layout_CAT01_OBJ06_VAR04_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}
spritelayout layout_CAT01_OBJ06_VAR04_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ06_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ06_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ06_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ06_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ06_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ06_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ06_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ06_VAR01, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ06_VAR01_T1;
    relative_coord(1, 1): layout_CAT01_OBJ06_VAR01_T2;
    relative_coord(0, 1): layout_CAT01_OBJ06_VAR01_T3;
    relative_coord(0, 0): layout_CAT01_OBJ06_VAR01_T4;
    layout_CAT01_OBJ06_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ06_VAR02, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ06_VAR02_T1;
    relative_coord(1, 1): layout_CAT01_OBJ06_VAR02_T2;
    relative_coord(0, 1): layout_CAT01_OBJ06_VAR02_T3;
    relative_coord(0, 0): layout_CAT01_OBJ06_VAR02_T4;
    layout_CAT01_OBJ06_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ06_VAR03, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ06_VAR03_T1;
    relative_coord(1, 1): layout_CAT01_OBJ06_VAR03_T2;
    relative_coord(0, 1): layout_CAT01_OBJ06_VAR03_T3;
    relative_coord(0, 0): layout_CAT01_OBJ06_VAR03_T4;
    layout_CAT01_OBJ06_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ06_VAR04, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ06_VAR04_T1;
    relative_coord(1, 1): layout_CAT01_OBJ06_VAR04_T2;
    relative_coord(0, 1): layout_CAT01_OBJ06_VAR04_T3;
    relative_coord(0, 0): layout_CAT01_OBJ06_VAR04_T4;
    layout_CAT01_OBJ06_VAR04_T1;
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ06_VAR_view, view) {
    0: switch_CAT01_OBJ06_VAR01;
    1: switch_CAT01_OBJ06_VAR02;
    2: switch_CAT01_OBJ06_VAR03;
    3: switch_CAT01_OBJ06_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ06_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ06_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ06_VAR_menu, view) {
    0:  layout_CAT01_OBJ06_VAR01_menu;
    1:  layout_CAT01_OBJ06_VAR02_menu;
    2:  layout_CAT01_OBJ06_VAR03_menu;
    3:  layout_CAT01_OBJ06_VAR04_menu;
}


item (FEAT_OBJECTS, CAT01_OBJ06) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ06);
        climates_available:     ALL_CLIMATES;
        size:                   [2,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ06_VAR;
        purchase:               switch_CAT01_OBJ06_VAR_menu;
        // additional_text:        switch_CAT01_OBJ06_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ07
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ07_VAR01_menu,"gfx/CAT01_OBJ07.png") { template_1x2_menu_high(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ07_VAR01_T2,  "gfx/CAT01_OBJ07.png") { template_1x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ07_VAR01_T2_S,"gfx/CAT01_OBJ07.png") { template_1x2_T2_overlap  (106,0,0,256) }

spriteset(spriteset_CAT01_OBJ07_VAR02_menu,"gfx/CAT01_OBJ07.png") { template_2x1_menu_high(212,0,0,256) }
spriteset(spriteset_CAT01_OBJ07_VAR02_T1,  "gfx/CAT01_OBJ07.png") { template_2x1_T1_overlap  (212,0,0,256) }
spriteset(spriteset_CAT01_OBJ07_VAR02_T1_S,"gfx/CAT01_OBJ07.png") { template_2x1_T1_overlap  (318,0,0,256) }

spriteset(spriteset_CAT01_OBJ07_VAR03_menu,"gfx/CAT01_OBJ07.png") { template_1x2_menu_high(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ07_VAR03_T2,  "gfx/CAT01_OBJ07.png") { template_1x2_T2_overlap (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ07_VAR03_T2_S,"gfx/CAT01_OBJ07.png") { template_1x2_T2_overlap  (106,266,0,256) }

spriteset(spriteset_CAT01_OBJ07_VAR04_menu,"gfx/CAT01_OBJ07.png") { template_2x1_menu_low(212,266,0,256) }
spriteset(spriteset_CAT01_OBJ07_VAR04_T1,  "gfx/CAT01_OBJ07.png") { template_2x1_T1_overlap  (212,266,0,256) }
spriteset(spriteset_CAT01_OBJ07_VAR04_T1_S,"gfx/CAT01_OBJ07.png") { template_2x1_T1_overlap  (318,266,0,256) }

spritelayout layout_CAT01_OBJ07_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: GROUNDSPRITE_CONCRETE;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ07_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CONCRETE; }
    building { sprite: spriteset_CAT01_OBJ07_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ07_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ07_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ07_VAR02_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ07_VAR02_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ07_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ07_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ07_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ07_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ07_VAR03_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ07_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ07_VAR04_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_GREEN : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ07_VAR04_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_GREEN : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ07_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ07_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ07_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_ORANGE;  }
}
spritelayout layout_CAT01_OBJ07_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ07_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ07_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ07_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ07_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ07_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_GREEN; }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ07_VAR01, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ07_VAR01_T1;
    relative_coord(0, 1): layout_CAT01_OBJ07_VAR01_T2;
    layout_CAT01_OBJ07_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ07_VAR02, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ07_VAR02_T1;
    relative_coord(0, 0): layout_CAT01_OBJ07_VAR02_T2;
    layout_CAT01_OBJ07_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ07_VAR03, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ07_VAR03_T1;
    relative_coord(0, 1): layout_CAT01_OBJ07_VAR03_T2;
    layout_CAT01_OBJ07_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ07_VAR04, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ07_VAR04_T1;
    relative_coord(0, 0): layout_CAT01_OBJ07_VAR04_T2;
    // layout_CAT01_OBJ07_VAR04_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ07_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ07_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ07_VAR01) {
      1: CAT01_OBJ07_VAR01_1;           // dark blue
      1: CAT01_OBJ07_VAR01_2;           // pale green
      1: CAT01_OBJ07_VAR01_3;           // pink
      1: CAT01_OBJ07_VAR01_4;           // yellow
      1: CAT01_OBJ07_VAR01_5;           // red
      1: CAT01_OBJ07_VAR01_6;           // light blue
      1: CAT01_OBJ07_VAR01_7;           // green
      1: CAT01_OBJ07_VAR01_8;           // dark green
      1: CAT01_OBJ07_VAR01_9;           // blue
      1: CAT01_OBJ07_VAR01_10;          // cream
      1: CAT01_OBJ07_VAR01_11;          // mauve
      1: CAT01_OBJ07_VAR01_12;          // purple
      1: CAT01_OBJ07_VAR01_13;          // orange
      1: CAT01_OBJ07_VAR01_14;          // brown
      1: CAT01_OBJ07_VAR01_15;          // grey
      1: CAT01_OBJ07_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR04_1, [STORE_TEMP(795, 3)]) { switch_CAT01_OBJ07_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR04_2, [STORE_TEMP(796, 3)]) { switch_CAT01_OBJ07_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR04_3, [STORE_TEMP(797, 3)]) { switch_CAT01_OBJ07_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR04_4, [STORE_TEMP(798, 3)]) { switch_CAT01_OBJ07_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR04_5, [STORE_TEMP(799, 3)]) { switch_CAT01_OBJ07_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR04_6, [STORE_TEMP(800, 3)]) { switch_CAT01_OBJ07_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ07_VAR04_7, [STORE_TEMP(801, 3)]) { switch_CAT01_OBJ07_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ07_VAR04) {
      1: CAT01_OBJ07_VAR04_1;           // blue
      1: CAT01_OBJ07_VAR04_2;           // brown
      1: CAT01_OBJ07_VAR04_3;           // white
      1: CAT01_OBJ07_VAR04_4;           // red
      1: CAT01_OBJ07_VAR04_5;           // green
      1: CAT01_OBJ07_VAR04_6;           // concrete
      1: CAT01_OBJ07_VAR04_7;  }            // yellow

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ07_VAR_view, view) {
    0: colour_CAT01_OBJ07_VAR01;
    1: switch_CAT01_OBJ07_VAR02;
    2: switch_CAT01_OBJ07_VAR03;
    3: colour_CAT01_OBJ07_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ07_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ07_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ07_VAR_menu, view) {
    0:  layout_CAT01_OBJ07_VAR01_menu;
    1:  layout_CAT01_OBJ07_VAR02_menu;
    2:  layout_CAT01_OBJ07_VAR03_menu;
    3:  layout_CAT01_OBJ07_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ07_TXT, view) {
    0:  string(STR_CC);
    // 1:  string(STR_MULTI_COLOURED);
    // 2:  string(STR_MULTI_COLOURED);
    3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ07) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ07);
        climates_available:     ALL_CLIMATES;
        size:                   [1,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ07_VAR;
        purchase:               switch_CAT01_OBJ07_VAR_menu;
        additional_text:        switch_CAT01_OBJ07_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ08
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ08_VAR01_menu,"gfx/CAT01_OBJ08.png") { template_1x2_menu_high(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ08_VAR01_T2,  "gfx/CAT01_OBJ08.png") { template_1x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ08_VAR01_T2_S,"gfx/CAT01_OBJ08.png") { template_1x2_T2_overlap  (106,0,0,256) }

spriteset(spriteset_CAT01_OBJ08_VAR02_menu,"gfx/CAT01_OBJ08.png") { template_2x1_menu_lowest(212,0,0,256) }
spriteset(spriteset_CAT01_OBJ08_VAR02_T1,  "gfx/CAT01_OBJ08.png") { template_2x1_T1_overlap  (212,0,0,256) }
spriteset(spriteset_CAT01_OBJ08_VAR02_T1_S,"gfx/CAT01_OBJ08.png") { template_2x1_T1_overlap  (318,0,0,256) }

spriteset(spriteset_CAT01_OBJ08_VAR03_menu,"gfx/CAT01_OBJ08.png") { template_1x2_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ08_VAR03_T2,  "gfx/CAT01_OBJ08.png") { template_1x2_T2_overlap (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ08_VAR03_T2_S,"gfx/CAT01_OBJ08.png") { template_1x2_T2_overlap  (106,266,0,256) }

spriteset(spriteset_CAT01_OBJ08_VAR04_menu,"gfx/CAT01_OBJ08.png") { template_2x1_menu_lowest(212,266,0,256) }
spriteset(spriteset_CAT01_OBJ08_VAR04_T1,  "gfx/CAT01_OBJ08.png") { template_2x1_T1_overlap  (212,266,0,256) }
spriteset(spriteset_CAT01_OBJ08_VAR04_T1_S,"gfx/CAT01_OBJ08.png") { template_2x1_T1_overlap  (318,266,0,256) }

spritelayout layout_CAT01_OBJ08_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ08_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ08_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ08_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ08_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ08_VAR02_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ08_VAR02_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ08_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ08_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ08_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ08_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ08_VAR03_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ08_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ08_VAR04_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ08_VAR04_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ08_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ08_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ08_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ08_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ08_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ08_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ08_VAR03_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_PALE_GREEN; }
}
spritelayout layout_CAT01_OBJ08_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ08_VAR04_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_MAUVE; }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ08_VAR01, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ08_VAR01_T1;
    relative_coord(0, 1): layout_CAT01_OBJ08_VAR01_T2;
    layout_CAT01_OBJ08_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ08_VAR02, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ08_VAR02_T1;
    relative_coord(0, 0): layout_CAT01_OBJ08_VAR02_T2;
    layout_CAT01_OBJ08_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ08_VAR03, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ08_VAR03_T1;
    relative_coord(0, 1): layout_CAT01_OBJ08_VAR03_T2;
    layout_CAT01_OBJ08_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ08_VAR04, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ08_VAR04_T1;
    relative_coord(0, 0): layout_CAT01_OBJ08_VAR04_T2;
    layout_CAT01_OBJ08_VAR04_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ08_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR03_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ08_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ08_VAR03) {
      1: CAT01_OBJ08_VAR03_1;           // dark blue
      1: CAT01_OBJ08_VAR03_2;           // pale green
      1: CAT01_OBJ08_VAR03_3;           // pink
      1: CAT01_OBJ08_VAR03_4;           // yellow
      1: CAT01_OBJ08_VAR03_5;           // red
      1: CAT01_OBJ08_VAR03_6;           // light blue
      1: CAT01_OBJ08_VAR03_7;           // green
      1: CAT01_OBJ08_VAR03_8;           // dark green
      1: CAT01_OBJ08_VAR03_9;           // blue
      1: CAT01_OBJ08_VAR03_10;          // cream
      1: CAT01_OBJ08_VAR03_11;          // mauve
      1: CAT01_OBJ08_VAR03_12;          // purple
      1: CAT01_OBJ08_VAR03_13;          // orange
      1: CAT01_OBJ08_VAR03_14;          // brown
      1: CAT01_OBJ08_VAR03_15;          // grey
      1: CAT01_OBJ08_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ08_VAR04; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ08_VAR04; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ08_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ08_VAR04_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ08_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ08_VAR04) {
      1: CAT01_OBJ08_VAR04_1;           // dark blue
      1: CAT01_OBJ08_VAR04_2;           // pale green
      1: CAT01_OBJ08_VAR04_3;           // pink
      1: CAT01_OBJ08_VAR04_4;           // yellow
      // 1: CAT01_OBJ08_VAR04_5;            // red
      1: CAT01_OBJ08_VAR04_6;           // light blue
      1: CAT01_OBJ08_VAR04_7;           // green
      1: CAT01_OBJ08_VAR04_8;           // dark green
      1: CAT01_OBJ08_VAR04_9;           // blue
      1: CAT01_OBJ08_VAR04_10;          // cream
      1: CAT01_OBJ08_VAR04_11;          // mauve
      1: CAT01_OBJ08_VAR04_12;          // purple
      // 1: CAT01_OBJ08_VAR04_13;           // orange
      1: CAT01_OBJ08_VAR04_14;          // brown
      1: CAT01_OBJ08_VAR04_15;          // grey
      1: CAT01_OBJ08_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ08_VAR_view, view) {
    0: switch_CAT01_OBJ08_VAR01;
    1: switch_CAT01_OBJ08_VAR02;
    2: colour_CAT01_OBJ08_VAR03;
    3: colour_CAT01_OBJ08_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ08_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ08_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ08_VAR_menu, view) {
    0:  layout_CAT01_OBJ08_VAR01_menu;
    1:  layout_CAT01_OBJ08_VAR02_menu;
    2:  layout_CAT01_OBJ08_VAR03_menu;
    3:  layout_CAT01_OBJ08_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ08_TXT, view) {
    // 0:  string(STR_MULTI_COLOURED);
    // 1:  string(STR_MULTI_COLOURED);
    2:  string(STR_CC);
    3:  string(STR_CC);
}


item (FEAT_OBJECTS, CAT01_OBJ08) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ08);
        climates_available:     ALL_CLIMATES;
        size:                   [1,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ08_VAR;
        purchase:               switch_CAT01_OBJ08_VAR_menu;
        additional_text:        switch_CAT01_OBJ08_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ09
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ09_VAR01_menu,"gfx/CAT01_OBJ09.png") { template_1x2_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ09_VAR01_T2,  "gfx/CAT01_OBJ09.png") { template_1x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ09_VAR01_T2_S,"gfx/CAT01_OBJ09.png") { template_1x2_T2_overlap  (106,0,0,256) }

spriteset(spriteset_CAT01_OBJ09_VAR02_menu,"gfx/CAT01_OBJ09.png") { template_2x1_menu_lowest(212,0,0,256) }
spriteset(spriteset_CAT01_OBJ09_VAR02_T1,  "gfx/CAT01_OBJ09.png") { template_2x1_T1_overlap  (212,0,0,256) }
spriteset(spriteset_CAT01_OBJ09_VAR02_T1_S,"gfx/CAT01_OBJ09.png") { template_2x1_T1_overlap  (318,0,0,256) }

spriteset(spriteset_CAT01_OBJ09_VAR03_menu,"gfx/CAT01_OBJ09.png") { template_1x2_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ09_VAR03_T2,  "gfx/CAT01_OBJ09.png") { template_1x2_T2_overlap (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ09_VAR03_T2_S,"gfx/CAT01_OBJ09.png") { template_1x2_T2_overlap  (106,266,0,256) }

spriteset(spriteset_CAT01_OBJ09_VAR04_menu,"gfx/CAT01_OBJ09.png") { template_2x1_menu_lowest(212,266,0,256) }
spriteset(spriteset_CAT01_OBJ09_VAR04_T1,  "gfx/CAT01_OBJ09.png") { template_2x1_T1_overlap  (212,266,0,256) }
spriteset(spriteset_CAT01_OBJ09_VAR04_T1_S,"gfx/CAT01_OBJ09.png") { template_2x1_T1_overlap  (318,266,0,256) }

spritelayout layout_CAT01_OBJ09_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ09_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ09_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ09_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ09_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ09_VAR02_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ09_VAR02_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ09_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ09_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ09_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ09_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ09_VAR03_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ09_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ09_VAR04_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ09_VAR04_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ09_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ09_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ09_VAR01_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_CREAM; }
}
spritelayout layout_CAT01_OBJ09_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ09_VAR02_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_BLUE; }
}
spritelayout layout_CAT01_OBJ09_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ09_VAR03_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN; }
}
spritelayout layout_CAT01_OBJ09_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ09_VAR04_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_MAUVE; }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ09_VAR01, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ09_VAR01_T1;
    relative_coord(0, 1): layout_CAT01_OBJ09_VAR01_T2;
    layout_CAT01_OBJ09_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ09_VAR02, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ09_VAR02_T1;
    relative_coord(0, 0): layout_CAT01_OBJ09_VAR02_T2;
    layout_CAT01_OBJ09_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ09_VAR03, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ09_VAR03_T1;
    relative_coord(0, 1): layout_CAT01_OBJ09_VAR03_T2;
    layout_CAT01_OBJ09_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ09_VAR04, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ09_VAR04_T1;
    relative_coord(0, 0): layout_CAT01_OBJ09_VAR04_T2;
    layout_CAT01_OBJ09_VAR04_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ09_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ09_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ09_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ09_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ09_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ09_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ09_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ09_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ09_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ09_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ09_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ09_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ09_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ09_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ09_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ09_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ09_VAR01) {
      1: CAT01_OBJ09_VAR01_1;
      1: CAT01_OBJ09_VAR01_2;
      1: CAT01_OBJ09_VAR01_3;
      1: CAT01_OBJ09_VAR01_4;
      // 1: CAT01_OBJ09_VAR01_5;
      1: CAT01_OBJ09_VAR01_6;
      1: CAT01_OBJ09_VAR01_7;
      1: CAT01_OBJ09_VAR01_8;
      // 1: CAT01_OBJ09_VAR01_9;
      1: CAT01_OBJ09_VAR01_10;
      1: CAT01_OBJ09_VAR01_11;
      // 1: CAT01_OBJ09_VAR01_12;
      // 1: CAT01_OBJ09_VAR01_13;
      1: CAT01_OBJ09_VAR01_14;
      1: CAT01_OBJ09_VAR01_15;
      1: CAT01_OBJ09_VAR01_16;  }

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ09_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ09_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ09_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ09_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR02_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ09_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ09_VAR02) {
      1: CAT01_OBJ09_VAR02_1;           // dark blue
      1: CAT01_OBJ09_VAR02_2;           // pale green
      1: CAT01_OBJ09_VAR02_3;           // pink
      // 1: CAT01_OBJ09_VAR02_4;            // yellow
      // 1: CAT01_OBJ09_VAR02_5;            // red
      1: CAT01_OBJ09_VAR02_6;           // light blue
      1: CAT01_OBJ09_VAR02_7;           // green
      1: CAT01_OBJ09_VAR02_8;           // dark green
      1: CAT01_OBJ09_VAR02_9;           // blue
      1: CAT01_OBJ09_VAR02_10;          // cream
      1: CAT01_OBJ09_VAR02_11;          // mauve
      1: CAT01_OBJ09_VAR02_12;          // purple
      // 1: CAT01_OBJ09_VAR02_13;           // orange
      1: CAT01_OBJ09_VAR02_14;          // brown
      1: CAT01_OBJ09_VAR02_15;          // grey
      1: CAT01_OBJ09_VAR02_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ09_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR03_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ09_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ09_VAR03) {
      1: CAT01_OBJ09_VAR03_1;           // dark blue
      1: CAT01_OBJ09_VAR03_2;           // pale green
      1: CAT01_OBJ09_VAR03_3;           // pink
      1: CAT01_OBJ09_VAR03_4;           // yellow
      1: CAT01_OBJ09_VAR03_5;           // red
      1: CAT01_OBJ09_VAR03_6;           // light blue
      1: CAT01_OBJ09_VAR03_7;           // green
      1: CAT01_OBJ09_VAR03_8;           // dark green
      1: CAT01_OBJ09_VAR03_9;           // blue
      1: CAT01_OBJ09_VAR03_10;          // cream
      1: CAT01_OBJ09_VAR03_11;          // mauve
      1: CAT01_OBJ09_VAR03_12;          // purple
      1: CAT01_OBJ09_VAR03_13;          // orange
      1: CAT01_OBJ09_VAR03_14;          // brown
      1: CAT01_OBJ09_VAR03_15;          // grey
      1: CAT01_OBJ09_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ09_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ09_VAR04_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ09_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ09_VAR04) {
      1: CAT01_OBJ09_VAR04_1;           // dark blue
      1: CAT01_OBJ09_VAR04_2;           // pale green
      1: CAT01_OBJ09_VAR04_3;           // pink
      1: CAT01_OBJ09_VAR04_4;           // yellow
      1: CAT01_OBJ09_VAR04_5;           // red
      1: CAT01_OBJ09_VAR04_6;           // light blue
      1: CAT01_OBJ09_VAR04_7;           // green
      1: CAT01_OBJ09_VAR04_8;           // dark green
      1: CAT01_OBJ09_VAR04_9;           // blue
      1: CAT01_OBJ09_VAR04_10;          // cream
      1: CAT01_OBJ09_VAR04_11;          // mauve
      1: CAT01_OBJ09_VAR04_12;          // purple
      1: CAT01_OBJ09_VAR04_13;          // orange
      1: CAT01_OBJ09_VAR04_14;          // brown
      1: CAT01_OBJ09_VAR04_15;          // grey
      1: CAT01_OBJ09_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ09_VAR_view, view) {
    0: colour_CAT01_OBJ09_VAR01;
    1: colour_CAT01_OBJ09_VAR02;
    2: colour_CAT01_OBJ09_VAR03;
    3: colour_CAT01_OBJ09_VAR04;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ09_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    2:  string(STR_CC);
    3:  string(STR_CC);
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ09_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ09_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ09_VAR_menu, view) {
    0:  layout_CAT01_OBJ09_VAR01_menu;
    1:  layout_CAT01_OBJ09_VAR02_menu;
    2:  layout_CAT01_OBJ09_VAR03_menu;
    3:  layout_CAT01_OBJ09_VAR04_menu;
}


item (FEAT_OBJECTS, CAT01_OBJ09) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ09);
        climates_available:     ALL_CLIMATES;
        size:                   [1,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ09_VAR;
        purchase:               switch_CAT01_OBJ09_VAR_menu;
        additional_text:        switch_CAT01_OBJ09_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ10
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ10_VAR01_menu,"gfx/CAT01_OBJ10.png") { template_2x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ10_VAR01_T1,  "gfx/CAT01_OBJ10.png") { template_2x1_T1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ10_VAR01_T2,  "gfx/CAT01_OBJ10.png") { template_2x1_T2  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ10_VAR01_T1_S,"gfx/CAT01_OBJ10.png") { template_2x1_T1  (106,0,0,256) }
spriteset(spriteset_CAT01_OBJ10_VAR01_T2_S,"gfx/CAT01_OBJ10.png") { template_2x1_T2  (106,0,0,256) }

spriteset(spriteset_CAT01_OBJ10_VAR03_menu,"gfx/CAT01_OBJ10.png") { template_2x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ10_VAR03_T1,  "gfx/CAT01_OBJ10.png") { template_2x1_T1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ10_VAR03_T2,  "gfx/CAT01_OBJ10.png") { template_2x1_T2  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ10_VAR03_T1_S,"gfx/CAT01_OBJ10.png") { template_2x1_T1  (106,266,0,256) }
spriteset(spriteset_CAT01_OBJ10_VAR03_T2_S,"gfx/CAT01_OBJ10.png") { template_2x1_T2  (106,266,0,256) }

spritelayout layout_CAT01_OBJ10_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ10_VAR01_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ10_VAR01_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ10_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ10_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ10_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ10_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ10_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ10_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ10_VAR03_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ10_VAR03_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ10_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ10_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ10_VAR03_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ10_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ10_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ10_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ10_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ10_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}
spritelayout layout_CAT01_OBJ10_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ10_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ10_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ10_VAR01, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ10_VAR01_T1;
    relative_coord(0, 0): layout_CAT01_OBJ10_VAR01_T2;
    layout_CAT01_OBJ10_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ10_VAR02, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ10_VAR02_T1;
    relative_coord(0, 1): layout_CAT01_OBJ10_VAR02_T2;
    layout_CAT01_OBJ10_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ10_VAR03, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ10_VAR03_T1;
    relative_coord(0, 0): layout_CAT01_OBJ10_VAR03_T2;
    layout_CAT01_OBJ10_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ10_VAR04, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ10_VAR04_T1;
    relative_coord(0, 1): layout_CAT01_OBJ10_VAR04_T2;
    layout_CAT01_OBJ10_VAR04_T1;
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ10_VAR_view, view) {
    0: switch_CAT01_OBJ10_VAR01;
    1: switch_CAT01_OBJ10_VAR02;
    2: switch_CAT01_OBJ10_VAR03;
    3: switch_CAT01_OBJ10_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ10_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ10_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ10_VAR_menu, view) {
    0:  layout_CAT01_OBJ10_VAR01_menu;
    1:  layout_CAT01_OBJ10_VAR02_menu;
    2:  layout_CAT01_OBJ10_VAR03_menu;
    3:  layout_CAT01_OBJ10_VAR04_menu;
}


item (FEAT_OBJECTS, CAT01_OBJ10) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ10);
        climates_available:     ALL_CLIMATES;
        size:                   [2,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ10_VAR;
        purchase:               switch_CAT01_OBJ10_VAR_menu;
        // additional_text:        switch_CAT01_OBJ10_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ11
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ11_VAR01_menu,"gfx/CAT01_OBJ11.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ11_VAR01,  "gfx/CAT01_OBJ11.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ11_VAR01_S,"gfx/CAT01_OBJ11.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ11_VAR02_menu,"gfx/CAT01_OBJ11.png") { template_1x1_menu_low(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ11_VAR02,  "gfx/CAT01_OBJ11.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ11_VAR02_S,"gfx/CAT01_OBJ11.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ11_VAR03_menu,"gfx/CAT01_OBJ11.png") { template_1x1_menu_high(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ11_VAR03,  "gfx/CAT01_OBJ11.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ11_VAR03_S,"gfx/CAT01_OBJ11.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ11_VAR04_menu,"gfx/CAT01_OBJ11.png") { template_1x1_menu_high(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ11_VAR04,  "gfx/CAT01_OBJ11.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ11_VAR04_S,"gfx/CAT01_OBJ11.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ11_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ11_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ11_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ11_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ11_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ11_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ11_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ11_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ11_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ11_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ11_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ11_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ11_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ11_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_MAUVE; }
}
spritelayout layout_CAT01_OBJ11_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ11_VAR02_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_BROWN; } 
}
spritelayout layout_CAT01_OBJ11_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ11_VAR03_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_RED; }
}
spritelayout layout_CAT01_OBJ11_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ11_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_GREEN; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ11_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ11_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ11_VAR01) {
      1: CAT01_OBJ11_VAR01_1;           // dark blue
      1: CAT01_OBJ11_VAR01_2;           // pale green
      1: CAT01_OBJ11_VAR01_3;           // pink
      1: CAT01_OBJ11_VAR01_4;           // yellow
      1: CAT01_OBJ11_VAR01_5;           // red
      1: CAT01_OBJ11_VAR01_6;           // light blue
      1: CAT01_OBJ11_VAR01_7;           // green
      1: CAT01_OBJ11_VAR01_8;           // dark green
      1: CAT01_OBJ11_VAR01_9;           // blue
      1: CAT01_OBJ11_VAR01_10;          // cream
      1: CAT01_OBJ11_VAR01_11;          // mauve
      1: CAT01_OBJ11_VAR01_12;          // purple
      // 1: CAT01_OBJ11_VAR01_13;          // orange
      1: CAT01_OBJ11_VAR01_14;          // brown
      1: CAT01_OBJ11_VAR01_15;          // grey
      1: CAT01_OBJ11_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ11_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR02_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ11_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ11_VAR02) {
      1: CAT01_OBJ11_VAR02_1;           // dark blue
      1: CAT01_OBJ11_VAR02_2;           // pale green
      1: CAT01_OBJ11_VAR02_3;           // pink
      1: CAT01_OBJ11_VAR02_4;           // yellow
      // 1: CAT01_OBJ11_VAR02_5;           // red
      1: CAT01_OBJ11_VAR02_6;           // light blue
      1: CAT01_OBJ11_VAR02_7;           // green
      1: CAT01_OBJ11_VAR02_8;           // dark green
      // 1: CAT01_OBJ11_VAR02_9;           // blue
      1: CAT01_OBJ11_VAR02_10;          // cream
      1: CAT01_OBJ11_VAR02_11;          // mauve
      // 1: CAT01_OBJ11_VAR02_12;          // purple
      // 1: CAT01_OBJ11_VAR02_13;          // orange
      1: CAT01_OBJ11_VAR02_14;          // brown
      1: CAT01_OBJ11_VAR02_15;          // grey
      1: CAT01_OBJ11_VAR02_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ11_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ11_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ11_VAR03) {
      1: CAT01_OBJ11_VAR03_1;           // dark blue
      1: CAT01_OBJ11_VAR03_2;           // pale green
      1: CAT01_OBJ11_VAR03_3;           // pink
      1: CAT01_OBJ11_VAR03_4;           // yellow
      1: CAT01_OBJ11_VAR03_5;           // red
      1: CAT01_OBJ11_VAR03_6;           // light blue
      1: CAT01_OBJ11_VAR03_7;           // green
      1: CAT01_OBJ11_VAR03_8;           // dark green
      1: CAT01_OBJ11_VAR03_9;           // blue
      1: CAT01_OBJ11_VAR03_10;          // cream
      1: CAT01_OBJ11_VAR03_11;          // mauve
      1: CAT01_OBJ11_VAR03_12;          // purple
      1: CAT01_OBJ11_VAR03_13;          // orange
      1: CAT01_OBJ11_VAR03_14;          // brown
      1: CAT01_OBJ11_VAR03_15;          // grey
      1: CAT01_OBJ11_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ11_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ11_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ11_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ11_VAR04) {
      1: CAT01_OBJ11_VAR04_1;           // dark blue
      1: CAT01_OBJ11_VAR04_2;           // pale green
      1: CAT01_OBJ11_VAR04_3;           // pink
      1: CAT01_OBJ11_VAR04_4;           // yellow
      // 1: CAT01_OBJ11_VAR04_5;           // red
      1: CAT01_OBJ11_VAR04_6;           // light blue
      // 1: CAT01_OBJ11_VAR04_7;           // green
      1: CAT01_OBJ11_VAR04_8;           // dark green
      // 1: CAT01_OBJ11_VAR04_9;           // blue
      1: CAT01_OBJ11_VAR04_10;          // cream
      1: CAT01_OBJ11_VAR04_11;          // mauve
      // 1: CAT01_OBJ11_VAR04_12;          // purple
      // 1: CAT01_OBJ11_VAR04_13;          // orange
      1: CAT01_OBJ11_VAR04_14;          // brown
      1: CAT01_OBJ11_VAR04_15;          // grey
      1: CAT01_OBJ11_VAR04_16;  }           // white


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ11_VAR_view, view) {
    0: colour_CAT01_OBJ11_VAR01;
    1: colour_CAT01_OBJ11_VAR02;
    2: colour_CAT01_OBJ11_VAR03;
    3: colour_CAT01_OBJ11_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ11_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ11_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ11_VAR_menu, view) {
    0:  layout_CAT01_OBJ11_VAR01_menu;
    1:  layout_CAT01_OBJ11_VAR02_menu;
    2:  layout_CAT01_OBJ11_VAR03_menu;
    3:  layout_CAT01_OBJ11_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ11_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    2:  string(STR_CC);
    3:  string(STR_CC);
}


item (FEAT_OBJECTS, CAT01_OBJ11) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ11);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ11_VAR;
        purchase:               switch_CAT01_OBJ11_VAR_menu;
        additional_text:        switch_CAT01_OBJ11_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ12
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ12_VAR01_menu,"gfx/CAT01_OBJ12.png") { template_1x1_menu_low(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ12_VAR01,  "gfx/CAT01_OBJ12.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ12_VAR01_S,"gfx/CAT01_OBJ12.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ12_VAR02_menu,"gfx/CAT01_OBJ12.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ12_VAR02,  "gfx/CAT01_OBJ12.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ12_VAR02_S,"gfx/CAT01_OBJ12.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ12_VAR03_menu,"gfx/CAT01_OBJ12.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ12_VAR03,  "gfx/CAT01_OBJ12.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ12_VAR03_S,"gfx/CAT01_OBJ12.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ12_VAR04_menu,"gfx/CAT01_OBJ12.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ12_VAR04,  "gfx/CAT01_OBJ12.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ12_VAR04_S,"gfx/CAT01_OBJ12.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ12_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: spriteset_CAT01_OBJ12_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ12_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ12_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ12_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ12_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ12_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ12_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ12_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ12_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ12_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ12_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ12_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ12_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ12_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ12_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ12_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ12_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ12_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ12_VAR04_menu; }
}


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ12_VAR_view, view) {
    0: layout_CAT01_OBJ12_VAR01;
    1: layout_CAT01_OBJ12_VAR02;
    2: layout_CAT01_OBJ12_VAR03;
    3: layout_CAT01_OBJ12_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ12_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ12_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ12_VAR_menu, view) {
    0:  layout_CAT01_OBJ12_VAR01_menu;
    1:  layout_CAT01_OBJ12_VAR02_menu;
    2:  layout_CAT01_OBJ12_VAR03_menu;
    3:  layout_CAT01_OBJ12_VAR04_menu;
}


item (FEAT_OBJECTS, CAT01_OBJ12) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ12);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ12_VAR;
        purchase:               switch_CAT01_OBJ12_VAR_menu;
        // additional_text:        switch_CAT01_OBJ12_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ13
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ13_VAR01_menu,"gfx/CAT01_OBJ13.png") { template_1x1_menu_low(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ13_VAR01,  "gfx/CAT01_OBJ13.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ13_VAR01_S,"gfx/CAT01_OBJ13.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ13_VAR02_menu,"gfx/CAT01_OBJ13.png") { template_1x1_menu_low(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ13_VAR02,  "gfx/CAT01_OBJ13.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ13_VAR02_S,"gfx/CAT01_OBJ13.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ13_VAR03_menu,"gfx/CAT01_OBJ13.png") { template_1x1_menu_low(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ13_VAR03,  "gfx/CAT01_OBJ13.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ13_VAR03_S,"gfx/CAT01_OBJ13.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ13_VAR04_menu,"gfx/CAT01_OBJ13.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ13_VAR04,  "gfx/CAT01_OBJ13.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ13_VAR04_S,"gfx/CAT01_OBJ13.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ13_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ13_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ13_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ13_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ13_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ13_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ13_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ13_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ13_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ13_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ13_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ13_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ13_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ13_VAR01_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_GREEN; }
}
spritelayout layout_CAT01_OBJ13_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ13_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ13_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ13_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ13_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ13_VAR04_menu; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ13_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ13_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ13_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ13_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ13_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ13_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ13_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ13_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ13_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ13_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ13_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ13_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ13_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ13_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ13_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ13_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ13_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ13_VAR01) {
      1: CAT01_OBJ13_VAR01_1;           // dark blue
      1: CAT01_OBJ13_VAR01_2;           // pale green
      1: CAT01_OBJ13_VAR01_3;           // pink
      1: CAT01_OBJ13_VAR01_4;           // yellow
      // 1: CAT01_OBJ13_VAR01_5;           // red
      1: CAT01_OBJ13_VAR01_6;           // light blue
      // 1: CAT01_OBJ13_VAR01_7;           // green
      1: CAT01_OBJ13_VAR01_8;           // dark green
      // 1: CAT01_OBJ13_VAR01_9;           // blue
      1: CAT01_OBJ13_VAR01_10;          // cream
      1: CAT01_OBJ13_VAR01_11;          // mauve
      // 1: CAT01_OBJ13_VAR01_12;          // purple
      // 1: CAT01_OBJ13_VAR01_13;          // orange
      1: CAT01_OBJ13_VAR01_14;          // brown
      1: CAT01_OBJ13_VAR01_15;          // grey
      1: CAT01_OBJ13_VAR01_16;  }           // white


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ13_VAR_view, view) {
    0: colour_CAT01_OBJ13_VAR01;
    1: layout_CAT01_OBJ13_VAR02;
    2: layout_CAT01_OBJ13_VAR03;
    3: layout_CAT01_OBJ13_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ13_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ13_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ13_VAR_menu, view) {
    0:  layout_CAT01_OBJ13_VAR01_menu;
    1:  layout_CAT01_OBJ13_VAR02_menu;
    2:  layout_CAT01_OBJ13_VAR03_menu;
    3:  layout_CAT01_OBJ13_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ13_TXT, view) {
    0:  string(STR_CC);
    // 1:  string(STR_MULTI_COLOURED);
    // 2:  string(STR_MULTI_COLOURED);
    // 3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ13) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ13);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ13_VAR;
        purchase:               switch_CAT01_OBJ13_VAR_menu;
        additional_text:        switch_CAT01_OBJ13_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ14
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ14_VAR01_menu,"gfx/CAT01_OBJ14.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ14_VAR01,  "gfx/CAT01_OBJ14.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ14_VAR01_S,"gfx/CAT01_OBJ14.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ14_VAR02_menu,"gfx/CAT01_OBJ14.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ14_VAR02,  "gfx/CAT01_OBJ14.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ14_VAR02_S,"gfx/CAT01_OBJ14.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ14_VAR03_menu,"gfx/CAT01_OBJ14.png") { template_1x1_menu_low(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ14_VAR03,  "gfx/CAT01_OBJ14.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ14_VAR03_S,"gfx/CAT01_OBJ14.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ14_VAR04_menu,"gfx/CAT01_OBJ14.png") { template_1x1_menu_low(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ14_VAR04,  "gfx/CAT01_OBJ14.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ14_VAR04_S,"gfx/CAT01_OBJ14.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ14_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ14_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_WHITE : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ14_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_WHITE : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ14_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ14_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_GREEN : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ14_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_GREEN : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ14_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ14_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_CONCRETE : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ14_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_CONCRETE : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ14_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ14_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_BROWN : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ14_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_BROWN : LOAD_TEMP(3)); }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ14_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ14_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_WHITE; }
}
spritelayout layout_CAT01_OBJ14_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ14_VAR02_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_GREEN; } 
}
spritelayout layout_CAT01_OBJ14_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ14_VAR03_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_CONCRETE; }
}
spritelayout layout_CAT01_OBJ14_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ14_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_BROWN; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR01_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ14_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR01_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ14_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR01_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ14_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR01_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ14_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR01_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ14_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR01_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ14_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR01_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ14_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ14_VAR01) {
      // 1: CAT01_OBJ14_VAR01_1;           // blue
      1: CAT01_OBJ14_VAR01_2;           // brown
      1: CAT01_OBJ14_VAR01_3;           // white
      1: CAT01_OBJ14_VAR01_4;           // red
      1: CAT01_OBJ14_VAR01_5;           // green
      1: CAT01_OBJ14_VAR01_6;           // concrete
      1: CAT01_OBJ14_VAR01_7;  }            // yellow

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR02_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ14_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR02_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ14_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR02_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ14_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR02_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ14_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR02_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ14_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR02_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ14_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR02_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ14_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ14_VAR02) {
      // 1: CAT01_OBJ14_VAR02_1;           // blue
      1: CAT01_OBJ14_VAR02_2;           // brown
      1: CAT01_OBJ14_VAR02_3;           // white
      1: CAT01_OBJ14_VAR02_4;           // red
      1: CAT01_OBJ14_VAR02_5;           // green
      1: CAT01_OBJ14_VAR02_6;           // concrete
      1: CAT01_OBJ14_VAR02_7;  }            // yellow

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR03_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ14_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR03_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ14_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR03_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ14_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR03_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ14_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR03_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ14_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR03_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ14_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR03_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ14_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ14_VAR03) {
      // 1: CAT01_OBJ14_VAR03_1;           // blue
      1: CAT01_OBJ14_VAR03_2;           // brown
      1: CAT01_OBJ14_VAR03_3;           // white
      // 1: CAT01_OBJ14_VAR03_4;           // red
      1: CAT01_OBJ14_VAR03_5;           // green
      1: CAT01_OBJ14_VAR03_6;           // concrete
      // 1: CAT01_OBJ14_VAR03_7;  }            // yellow
      }

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR04_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ14_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR04_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ14_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR04_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ14_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR04_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ14_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR04_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ14_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR04_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ14_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ14_VAR04_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ14_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ14_VAR04) {
      // 1: CAT01_OBJ14_VAR04_1;           // blue
      1: CAT01_OBJ14_VAR04_2;           // brown
      1: CAT01_OBJ14_VAR04_3;           // white
      // 1: CAT01_OBJ14_VAR04_4;           // red
      1: CAT01_OBJ14_VAR04_5;           // green
      1: CAT01_OBJ14_VAR04_6;           // concrete
      // 1: CAT01_OBJ14_VAR04_7;  }            // yellow
      }

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ14_VAR_view, view) {
    0: colour_CAT01_OBJ14_VAR01;
    1: colour_CAT01_OBJ14_VAR02;
    2: colour_CAT01_OBJ14_VAR03;
    3: colour_CAT01_OBJ14_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ14_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    layout_CAT01_OBJ14_VAR_view;
}

switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ14_VAR_menu, view) {
    0:  layout_CAT01_OBJ14_VAR01_menu;
    1:  layout_CAT01_OBJ14_VAR02_menu;
    2:  layout_CAT01_OBJ14_VAR03_menu;
    3:  layout_CAT01_OBJ14_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ14_TXT, view) {
    0:  string(STR_MULTI_COLOURED);
    1:  string(STR_MULTI_COLOURED);
    2:  string(STR_MULTI_COLOURED);
    3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ14) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ14);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                layout_CAT01_OBJ14_VAR;
        purchase:               layout_CAT01_OBJ14_VAR_menu;
        additional_text:        layout_CAT01_OBJ14_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ15
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ15_VAR01_menu,"gfx/CAT01_OBJ15.png") { template_2x2_menu_low(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ15_VAR01_T2,  "gfx/CAT01_OBJ15.png") { template_2x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ15_VAR01_T2_S,"gfx/CAT01_OBJ15.png") { template_2x2_T2_overlap  (138,0,0,256) }

spriteset(spriteset_CAT01_OBJ15_VAR02_menu,"gfx/CAT01_OBJ15.png") { template_2x2_menu_low(276,0,0,256) }
spriteset(spriteset_CAT01_OBJ15_VAR02_T2,  "gfx/CAT01_OBJ15.png") { template_2x2_T2_overlap  (276,0,0,256) }
spriteset(spriteset_CAT01_OBJ15_VAR02_T2_S,"gfx/CAT01_OBJ15.png") { template_2x2_T2_overlap  (414,0,0,256) }

spriteset(spriteset_CAT01_OBJ15_VAR03_menu,"gfx/CAT01_OBJ15.png") { template_2x2_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ15_VAR03_T2,  "gfx/CAT01_OBJ15.png") { template_2x2_T2_overlap  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ15_VAR03_T2_S,"gfx/CAT01_OBJ15.png") { template_2x2_T2_overlap  (138,266,0,256) }

spritelayout switch_CAT01_OBJ15_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout switch_CAT01_OBJ15_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ15_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ15_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout switch_CAT01_OBJ15_VAR01_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout switch_CAT01_OBJ15_VAR01_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout switch_CAT01_OBJ15_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout switch_CAT01_OBJ15_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ15_VAR02_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ15_VAR02_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout switch_CAT01_OBJ15_VAR02_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout switch_CAT01_OBJ15_VAR02_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout switch_CAT01_OBJ15_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout switch_CAT01_OBJ15_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ15_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ15_VAR03_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout switch_CAT01_OBJ15_VAR03_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout switch_CAT01_OBJ15_VAR03_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout switch_CAT01_OBJ15_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}
spritelayout switch_CAT01_OBJ15_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}
spritelayout switch_CAT01_OBJ15_VAR04_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}
spritelayout switch_CAT01_OBJ15_VAR04_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}

// spritelayouts for the purchase menu
spritelayout switch_CAT01_OBJ15_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ15_VAR01_menu; }
}
spritelayout switch_CAT01_OBJ15_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ15_VAR02_menu; }
}
spritelayout switch_CAT01_OBJ15_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ15_VAR03_menu; }
}
spritelayout switch_CAT01_OBJ15_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    // building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ15_VAR01, relative_pos) {
    relative_coord(1, 0): switch_CAT01_OBJ15_VAR01_T1;
    relative_coord(1, 1): switch_CAT01_OBJ15_VAR01_T2;
    relative_coord(0, 1): switch_CAT01_OBJ15_VAR01_T3;
    relative_coord(0, 0): switch_CAT01_OBJ15_VAR01_T4;
    switch_CAT01_OBJ15_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ15_VAR02, relative_pos) {
    relative_coord(1, 0): switch_CAT01_OBJ15_VAR02_T1;
    relative_coord(1, 1): switch_CAT01_OBJ15_VAR02_T2;
    relative_coord(0, 1): switch_CAT01_OBJ15_VAR02_T3;
    relative_coord(0, 0): switch_CAT01_OBJ15_VAR02_T4;
    switch_CAT01_OBJ15_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ15_VAR03, relative_pos) {
    relative_coord(1, 0): switch_CAT01_OBJ15_VAR03_T1;
    relative_coord(1, 1): switch_CAT01_OBJ15_VAR03_T2;
    relative_coord(0, 1): switch_CAT01_OBJ15_VAR03_T3;
    relative_coord(0, 0): switch_CAT01_OBJ15_VAR03_T4;
    switch_CAT01_OBJ15_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ15_VAR04, relative_pos) {
    relative_coord(1, 0): switch_CAT01_OBJ15_VAR04_T1;
    relative_coord(1, 1): switch_CAT01_OBJ15_VAR04_T2;
    relative_coord(0, 1): switch_CAT01_OBJ15_VAR04_T3;
    relative_coord(0, 0): switch_CAT01_OBJ15_VAR04_T4;
    switch_CAT01_OBJ15_VAR04_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ15_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ15_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ15_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ15_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ15_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ15_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ15_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ15_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ15_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ15_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ15_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ15_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ15_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ15_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ15_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ15_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ15_VAR01) {
      1: CAT01_OBJ15_VAR01_1;           // dark blue
      1: CAT01_OBJ15_VAR01_2;           // pale green
      1: CAT01_OBJ15_VAR01_3;           // pink
      1: CAT01_OBJ15_VAR01_4;           // yellow
      // 1: CAT01_OBJ15_VAR01_5;           // red
      1: CAT01_OBJ15_VAR01_6;           // light blue
      // 1: CAT01_OBJ15_VAR01_7;           // green
      1: CAT01_OBJ15_VAR01_8;           // dark green
      // 1: CAT01_OBJ15_VAR01_9;           // blue
      1: CAT01_OBJ15_VAR01_10;          // cream
      1: CAT01_OBJ15_VAR01_11;          // mauve
      // 1: CAT01_OBJ15_VAR01_12;          // purple
      // 1: CAT01_OBJ15_VAR01_13;          // orange
      1: CAT01_OBJ15_VAR01_14;          // brown
      1: CAT01_OBJ15_VAR01_15;          // grey
      1: CAT01_OBJ15_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR02_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ15_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR02_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ15_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR02_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ15_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR02_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ15_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_V2R01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ15_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR02_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ15_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_V2R01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ15_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR02_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ15_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_V2R01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ15_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR02_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ15_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR02_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ15_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_V2R01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ15_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_V2R01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ15_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR02_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ15_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR02_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ15_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ15_VAR02_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ15_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ15_VAR02) {
      1: CAT01_OBJ15_VAR02_1;           // dark blue
      1: CAT01_OBJ15_VAR02_2;           // pale green
      1: CAT01_OBJ15_VAR02_3;           // pink
      1: CAT01_OBJ15_VAR02_4;           // yellow
      // 1: CAT01_OBJ15_VAR02_5;           // red
      1: CAT01_OBJ15_VAR02_6;           // light blue
      // 1: CAT01_OBJ15_VAR02_7;           // green
      1: CAT01_OBJ15_VAR02_8;           // dark green
      // 1: CAT01_OBJ15_VAR02_9;           // blue
      1: CAT01_OBJ15_VAR02_10;          // cream
      1: CAT01_OBJ15_VAR02_11;          // mauve
      // 1: CAT01_OBJ15_VAR02_12;          // purple
      // 1: CAT01_OBJ15_VAR02_13;          // orange
      1: CAT01_OBJ15_VAR02_14;          // brown
      1: CAT01_OBJ15_VAR02_15;          // grey
      1: CAT01_OBJ15_VAR02_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ15_VAR_view, view) {
    0: colour_CAT01_OBJ15_VAR01;
    1: colour_CAT01_OBJ15_VAR02;
    2: switch_CAT01_OBJ15_VAR03;
    3: switch_CAT01_OBJ15_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ15_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ15_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ15_VAR_menu, view) {
    0:  switch_CAT01_OBJ15_VAR01_menu;
    1:  switch_CAT01_OBJ15_VAR02_menu;
    2:  switch_CAT01_OBJ15_VAR03_menu;
    3:  switch_CAT01_OBJ15_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ15_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    // 2:  string(STR_MULTI_COLOURED);
    // 3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ15) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ15);
        climates_available:     ALL_CLIMATES;
        size:                   [2,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ15_VAR;
        purchase:               switch_CAT01_OBJ15_VAR_menu;
        additional_text:        switch_CAT01_OBJ15_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ16
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ16_VAR01_menu,"gfx/CAT01_OBJ16.png") { template_2x2_menu_low(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ16_VAR01_T2,  "gfx/CAT01_OBJ16.png") { template_2x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ16_VAR01_T2_S,"gfx/CAT01_OBJ16.png") { template_2x2_T2_overlap  (138,0,0,256) }

spriteset(spriteset_CAT01_OBJ16_VAR02_menu,"gfx/CAT01_OBJ16.png") { template_2x2_menu_low(276,0,0,256) }
spriteset(spriteset_CAT01_OBJ16_VAR02_T2,  "gfx/CAT01_OBJ16.png") { template_2x2_T2_overlap  (276,0,0,256) }
spriteset(spriteset_CAT01_OBJ16_VAR02_T2_S,"gfx/CAT01_OBJ16.png") { template_2x2_T2_overlap  (414,0,0,256) }

spriteset(spriteset_CAT01_OBJ16_VAR03_menu,"gfx/CAT01_OBJ16.png") { template_2x2_menu_low(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ16_VAR03_T2,  "gfx/CAT01_OBJ16.png") { template_2x2_T2_overlap  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ16_VAR03_T2_S,"gfx/CAT01_OBJ16.png") { template_2x2_T2_overlap  (138,266,0,256) }

spritelayout switch_CAT01_OBJ16_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout switch_CAT01_OBJ16_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ16_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ16_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout switch_CAT01_OBJ16_VAR01_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout switch_CAT01_OBJ16_VAR01_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout switch_CAT01_OBJ16_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout switch_CAT01_OBJ16_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ16_VAR02_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ16_VAR02_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout switch_CAT01_OBJ16_VAR02_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout switch_CAT01_OBJ16_VAR02_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////

// spritelayouts for the purchase menu
spritelayout switch_CAT01_OBJ16_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ16_VAR01_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_BROWN; }
}
spritelayout switch_CAT01_OBJ16_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ16_VAR02_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_BLUE; }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ16_VAR01, relative_pos) {
    relative_coord(1, 0): switch_CAT01_OBJ16_VAR01_T1;
    relative_coord(1, 1): switch_CAT01_OBJ16_VAR01_T2;
    relative_coord(0, 1): switch_CAT01_OBJ16_VAR01_T3;
    relative_coord(0, 0): switch_CAT01_OBJ16_VAR01_T4;
    switch_CAT01_OBJ16_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ16_VAR02, relative_pos) {
    relative_coord(1, 0): switch_CAT01_OBJ16_VAR02_T1;
    relative_coord(1, 1): switch_CAT01_OBJ16_VAR02_T2;
    relative_coord(0, 1): switch_CAT01_OBJ16_VAR02_T3;
    relative_coord(0, 0): switch_CAT01_OBJ16_VAR02_T4;
    switch_CAT01_OBJ16_VAR02_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ16_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ16_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ16_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ16_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ16_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ16_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ16_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ16_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ16_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ16_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ16_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ16_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ16_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ16_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ16_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ16_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ16_VAR01) {
      1: CAT01_OBJ16_VAR01_1;           // dark blue
      1: CAT01_OBJ16_VAR01_2;           // pale green
      // 1: CAT01_OBJ16_VAR01_3;           // pink
      // 1: CAT01_OBJ16_VAR01_4;           // yellow
      // 1: CAT01_OBJ16_VAR01_5;           // red
      1: CAT01_OBJ16_VAR01_6;           // light blue
      // 1: CAT01_OBJ16_VAR01_7;           // green
      1: CAT01_OBJ16_VAR01_8;           // dark green
      // 1: CAT01_OBJ16_VAR01_9;           // blue
      1: CAT01_OBJ16_VAR01_10;          // cream
      1: CAT01_OBJ16_VAR01_11;          // mauve
      // 1: CAT01_OBJ16_VAR01_12;          // purple
      // 1: CAT01_OBJ16_VAR01_13;          // orange
      1: CAT01_OBJ16_VAR01_14;          // brown
      1: CAT01_OBJ16_VAR01_15;          // grey
      1: CAT01_OBJ16_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR02_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ16_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR02_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ16_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR02_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ16_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR02_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ16_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_V2R01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ16_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR02_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ16_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_V2R01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ16_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR02_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ16_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_V2R01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ16_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR02_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ16_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR02_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ16_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_V2R01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ16_VAR02; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_V2R01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ16_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR02_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ16_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR02_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ16_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ16_VAR02_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ16_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ16_VAR02) {
      1: CAT01_OBJ16_VAR02_1;           // dark blue
      1: CAT01_OBJ16_VAR02_2;           // pale green
      1: CAT01_OBJ16_VAR02_3;           // pink
      1: CAT01_OBJ16_VAR02_4;           // yellow
      // 1: CAT01_OBJ16_VAR02_5;           // red
      1: CAT01_OBJ16_VAR02_6;           // light blue
      // 1: CAT01_OBJ16_VAR02_7;           // green
      1: CAT01_OBJ16_VAR02_8;           // dark green
      // 1: CAT01_OBJ16_VAR02_9;           // blue
      1: CAT01_OBJ16_VAR02_10;          // cream
      1: CAT01_OBJ16_VAR02_11;          // mauve
      // 1: CAT01_OBJ16_VAR02_12;          // purple
      // 1: CAT01_OBJ16_VAR02_13;          // orange
      1: CAT01_OBJ16_VAR02_14;          // brown
      1: CAT01_OBJ16_VAR02_15;          // grey
      1: CAT01_OBJ16_VAR02_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ16_VAR_view, view) {
    0: colour_CAT01_OBJ16_VAR01;
    1: colour_CAT01_OBJ16_VAR02;
    // 2: switch_CAT01_OBJ16_VAR03;
    // 3: switch_CAT01_OBJ16_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ16_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ16_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ16_VAR_menu, view) {
    0:  switch_CAT01_OBJ16_VAR01_menu;
    1:  switch_CAT01_OBJ16_VAR02_menu;
    // 2:  switch_CAT01_OBJ16_VAR03_menu;
    // 3:  switch_CAT01_OBJ16_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ16_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    // 2:  string(STR_MULTI_COLOURED);
    // 3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ16) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ16);
        climates_available:     ALL_CLIMATES;
        size:                   [2,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              2;
    }
    graphics {
        default:                switch_CAT01_OBJ16_VAR;
        purchase:               switch_CAT01_OBJ16_VAR_menu;
        additional_text:        switch_CAT01_OBJ16_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ17
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ17_VAR01_menu,"gfx/CAT01_OBJ17.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ17_VAR01,  "gfx/CAT01_OBJ17.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ17_VAR01_S,"gfx/CAT01_OBJ17.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ17_VAR02_menu,"gfx/CAT01_OBJ17.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ17_VAR02,  "gfx/CAT01_OBJ17.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ17_VAR02_S,"gfx/CAT01_OBJ17.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ17_VAR03_menu,"gfx/CAT01_OBJ17.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ17_VAR03,  "gfx/CAT01_OBJ17.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ17_VAR03_S,"gfx/CAT01_OBJ17.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ17_VAR04_menu,"gfx/CAT01_OBJ17.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ17_VAR04,  "gfx/CAT01_OBJ17.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ17_VAR04_S,"gfx/CAT01_OBJ17.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ17_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ17_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_WHITE : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ17_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_WHITE : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ17_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ17_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_GREEN : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ17_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_GREEN : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ17_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ17_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_BROWN : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ17_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_BROWN : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ17_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ17_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_CONCRETE : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ17_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_CONCRETE : LOAD_TEMP(3)); }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ17_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ17_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_WHITE; }
}
spritelayout layout_CAT01_OBJ17_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ17_VAR02_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_GREEN; } 
}
spritelayout layout_CAT01_OBJ17_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ17_VAR03_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_BROWN; }
}
spritelayout layout_CAT01_OBJ17_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ17_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_CONCRETE; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR01_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR01_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR01_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR01_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR01_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR01_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR01_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ17_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ17_VAR01) {
      1: CAT01_OBJ17_VAR01_1;           // blue
      1: CAT01_OBJ17_VAR01_2;           // brown
      1: CAT01_OBJ17_VAR01_3;           // white
      1: CAT01_OBJ17_VAR01_4;           // red
      1: CAT01_OBJ17_VAR01_5;           // green
      1: CAT01_OBJ17_VAR01_6;           // concrete
      1: CAT01_OBJ17_VAR01_7;  }            // yellow

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR02_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ17_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR02_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ17_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR02_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ17_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR02_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ17_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR02_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ17_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR02_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ17_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR02_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ17_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ17_VAR02) {
      // 1: CAT01_OBJ17_VAR02_1;           // blue
      1: CAT01_OBJ17_VAR02_2;           // brown
      1: CAT01_OBJ17_VAR02_3;           // white
      // 1: CAT01_OBJ17_VAR02_4;           // red
      1: CAT01_OBJ17_VAR02_5;           // green
      1: CAT01_OBJ17_VAR02_6;           // concrete
      1: CAT01_OBJ17_VAR02_7;  }            // yellow

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR03_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ17_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR03_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ17_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR03_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ17_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR03_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ17_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR03_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ17_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR03_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ17_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR03_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ17_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ17_VAR03) {
      // 1: CAT01_OBJ17_VAR03_1;           // blue
      1: CAT01_OBJ17_VAR03_2;           // brown
      1: CAT01_OBJ17_VAR03_3;           // white
      1: CAT01_OBJ17_VAR03_4;           // red
      1: CAT01_OBJ17_VAR03_5;           // green
      1: CAT01_OBJ17_VAR03_6;           // concrete
      1: CAT01_OBJ17_VAR03_7;  }            // yellow

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR04_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ17_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR04_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ17_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR04_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ17_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR04_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ17_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR04_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ17_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR04_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ17_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ17_VAR04_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ17_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ17_VAR04) {
      // 1: CAT01_OBJ17_VAR04_1;           // blue
      1: CAT01_OBJ17_VAR04_2;           // brown
      1: CAT01_OBJ17_VAR04_3;           // white
      1: CAT01_OBJ17_VAR04_4;           // red
      1: CAT01_OBJ17_VAR04_5;           // green
      1: CAT01_OBJ17_VAR04_6;           // concrete
      1: CAT01_OBJ17_VAR04_7;  }            // yellow


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ17_VAR_view, view) {
    0: colour_CAT01_OBJ17_VAR01;
    1: colour_CAT01_OBJ17_VAR02;
    2: colour_CAT01_OBJ17_VAR03;
    3: colour_CAT01_OBJ17_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ17_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    layout_CAT01_OBJ17_VAR_view;
}

switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ17_VAR_menu, view) {
    0:  layout_CAT01_OBJ17_VAR01_menu;
    1:  layout_CAT01_OBJ17_VAR02_menu;
    2:  layout_CAT01_OBJ17_VAR03_menu;
    3:  layout_CAT01_OBJ17_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ17_TXT, view) {
    0:  string(STR_MULTI_COLOURED);
    1:  string(STR_MULTI_COLOURED);
    2:  string(STR_MULTI_COLOURED);
    3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ17) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ17);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                layout_CAT01_OBJ17_VAR;
        purchase:               layout_CAT01_OBJ17_VAR_menu;
        additional_text:        layout_CAT01_OBJ17_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ18
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ18_VAR01_menu,"gfx/CAT01_OBJ18.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ18_VAR01,  "gfx/CAT01_OBJ18.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ18_VAR01_S,"gfx/CAT01_OBJ18.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ18_VAR02_menu,"gfx/CAT01_OBJ18.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ18_VAR02,  "gfx/CAT01_OBJ18.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ18_VAR02_S,"gfx/CAT01_OBJ18.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ18_VAR03_menu,"gfx/CAT01_OBJ18.png") { template_1x1_menu_low(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ18_VAR03,  "gfx/CAT01_OBJ18.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ18_VAR03_S,"gfx/CAT01_OBJ18.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ18_VAR04_menu,"gfx/CAT01_OBJ18.png") { template_1x1_menu_low(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ18_VAR04,  "gfx/CAT01_OBJ18.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ18_VAR04_S,"gfx/CAT01_OBJ18.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ18_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ18_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_GREEN : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ18_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_GREEN : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ18_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ18_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_WHITE : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ18_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_WHITE : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ18_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ18_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_CONCRETE : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ18_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_CONCRETE : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ18_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ18_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_BROWN : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ18_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_BROWN : LOAD_TEMP(3)); }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ18_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ18_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_GREEN; }
}
spritelayout layout_CAT01_OBJ18_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ18_VAR02_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_WHITE; } 
}
spritelayout layout_CAT01_OBJ18_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ18_VAR03_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_CONCRETE; }
}
spritelayout layout_CAT01_OBJ18_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ18_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_BROWN; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR01_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR01_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR01_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR01_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR01_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR01_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR01_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ18_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ18_VAR01) {
      1: CAT01_OBJ18_VAR01_1;           // blue
      1: CAT01_OBJ18_VAR01_2;           // brown
      1: CAT01_OBJ18_VAR01_3;           // white
      1: CAT01_OBJ18_VAR01_4;           // red
      1: CAT01_OBJ18_VAR01_5;           // green
      1: CAT01_OBJ18_VAR01_6;           // concrete
      1: CAT01_OBJ18_VAR01_7;  }            // yellow

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR02_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR02_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR02_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR02_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR02_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR02_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR02_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ18_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ18_VAR02) {
      1: CAT01_OBJ18_VAR02_1;           // blue
      1: CAT01_OBJ18_VAR02_2;           // brown
      1: CAT01_OBJ18_VAR02_3;           // white
      1: CAT01_OBJ18_VAR02_4;           // red
      1: CAT01_OBJ18_VAR02_5;           // green
      1: CAT01_OBJ18_VAR02_6;           // concrete
      1: CAT01_OBJ18_VAR02_7;  }            // yellow

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR03_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR03_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR03_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR03_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR03_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR03_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR03_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ18_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ18_VAR03) {
      1: CAT01_OBJ18_VAR03_1;           // blue
      1: CAT01_OBJ18_VAR03_2;           // brown
      1: CAT01_OBJ18_VAR03_3;           // white
      1: CAT01_OBJ18_VAR03_4;           // red
      1: CAT01_OBJ18_VAR03_5;           // green
      1: CAT01_OBJ18_VAR03_6;           // concrete
      1: CAT01_OBJ18_VAR03_7;  }            // yellow

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR04_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ18_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR04_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ18_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR04_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ18_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR04_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ18_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR04_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ18_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR04_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ18_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ18_VAR04_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ18_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ18_VAR04) {
      1: CAT01_OBJ18_VAR04_1;           // blue
      1: CAT01_OBJ18_VAR04_2;           // brown
      1: CAT01_OBJ18_VAR04_3;           // white
      1: CAT01_OBJ18_VAR04_4;           // red
      1: CAT01_OBJ18_VAR04_5;           // green
      1: CAT01_OBJ18_VAR04_6;           // concrete
      1: CAT01_OBJ18_VAR04_7;  }            // yellow


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ18_VAR_view, view) {
    0: colour_CAT01_OBJ18_VAR01;
    1: colour_CAT01_OBJ18_VAR02;
    2: colour_CAT01_OBJ18_VAR03;
    3: colour_CAT01_OBJ18_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ18_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    layout_CAT01_OBJ18_VAR_view;
}

switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ18_VAR_menu, view) {
    0:  layout_CAT01_OBJ18_VAR01_menu;
    1:  layout_CAT01_OBJ18_VAR02_menu;
    2:  layout_CAT01_OBJ18_VAR03_menu;
    3:  layout_CAT01_OBJ18_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, layout_CAT01_OBJ18_TXT, view) {
    0:  string(STR_MULTI_COLOURED);
    1:  string(STR_MULTI_COLOURED);
    2:  string(STR_MULTI_COLOURED);
    3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ18) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ18);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                layout_CAT01_OBJ18_VAR;
        purchase:               layout_CAT01_OBJ18_VAR_menu;
        additional_text:        layout_CAT01_OBJ18_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ20
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ20_VAR01_menu,"gfx/CAT01_OBJ20.png") { template_2x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ20_VAR01_T1,  "gfx/CAT01_OBJ20.png") { template_2x1_T1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ20_VAR01_T2,  "gfx/CAT01_OBJ20.png") { template_2x1_T2  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ20_VAR01_T1_S,"gfx/CAT01_OBJ20.png") { template_2x1_T1  (106,0,0,256) }
spriteset(spriteset_CAT01_OBJ20_VAR01_T2_S,"gfx/CAT01_OBJ20.png") { template_2x1_T2  (106,0,0,256) }

spriteset(spriteset_CAT01_OBJ20_VAR03_menu,"gfx/CAT01_OBJ20.png") { template_2x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ20_VAR03_T1,  "gfx/CAT01_OBJ20.png") { template_2x1_T1_overlap  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ20_VAR03_T1_S,"gfx/CAT01_OBJ20.png") { template_2x1_T1_overlap  (106,266,0,256) }

spritelayout layout_CAT01_OBJ20_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ20_VAR01_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ20_VAR01_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ20_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ20_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ20_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ20_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ20_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ20_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ20_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ20_VAR03_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ20_VAR03_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ20_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ20_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ20_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ20_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ20_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}
spritelayout layout_CAT01_OBJ20_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ20_VAR03_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_PURPLE; }
}
spritelayout layout_CAT01_OBJ20_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ20_VAR01, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ20_VAR01_T1;
    relative_coord(0, 0): layout_CAT01_OBJ20_VAR01_T2;
    layout_CAT01_OBJ20_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ20_VAR02, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ20_VAR02_T1;
    relative_coord(0, 1): layout_CAT01_OBJ20_VAR02_T2;
    layout_CAT01_OBJ20_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ20_VAR03, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ20_VAR03_T1;
    relative_coord(0, 0): layout_CAT01_OBJ20_VAR03_T2;
    layout_CAT01_OBJ20_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ20_VAR04, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ20_VAR04_T1;
    relative_coord(0, 1): layout_CAT01_OBJ20_VAR04_T2;
    layout_CAT01_OBJ20_VAR04_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ20_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ20_VAR03_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ20_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ20_VAR03) {
      1: CAT01_OBJ20_VAR03_1;           // dark blue
      1: CAT01_OBJ20_VAR03_2;           // pale green
      1: CAT01_OBJ20_VAR03_3;           // pink
      1: CAT01_OBJ20_VAR03_4;           // yellow
      1: CAT01_OBJ20_VAR03_5;           // red
      1: CAT01_OBJ20_VAR03_6;           // light blue
      1: CAT01_OBJ20_VAR03_7;           // green
      1: CAT01_OBJ20_VAR03_8;           // dark green
      1: CAT01_OBJ20_VAR03_9;           // blue
      1: CAT01_OBJ20_VAR03_10;          // cream
      1: CAT01_OBJ20_VAR03_11;          // mauve
      1: CAT01_OBJ20_VAR03_12;          // purple
      1: CAT01_OBJ20_VAR03_13;          // orange
      1: CAT01_OBJ20_VAR03_14;          // brown
      1: CAT01_OBJ20_VAR03_15;          // grey
      1: CAT01_OBJ20_VAR03_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ20_VAR_view, view) {
    0: switch_CAT01_OBJ20_VAR01;
    1: switch_CAT01_OBJ20_VAR02;
    2: colour_CAT01_OBJ20_VAR03;
    3: switch_CAT01_OBJ20_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ20_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ20_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ20_VAR_menu, view) {
    0:  layout_CAT01_OBJ20_VAR01_menu;
    1:  layout_CAT01_OBJ20_VAR02_menu;
    2:  layout_CAT01_OBJ20_VAR03_menu;
    3:  layout_CAT01_OBJ20_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ20_TXT, view) {
    // 0:  string(STR_CC);
    // 1:  string(STR_MULTI_COLOURED);
    2:  string(STR_CC);
    // 3:  string(STR_CC);
}


item (FEAT_OBJECTS, CAT01_OBJ20) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ20);
        climates_available:     ALL_CLIMATES;
        size:                   [2,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ20_VAR;
        purchase:               switch_CAT01_OBJ20_VAR_menu;
        additional_text:        switch_CAT01_OBJ20_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ19
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ19_VAR01_menu,"gfx/CAT01_OBJ19.png") { template_2x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ19_VAR01_T1,  "gfx/CAT01_OBJ19.png") { template_2x1_T1_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ19_VAR01_T1_S,"gfx/CAT01_OBJ19.png") { template_2x1_T1_overlap  (106,0,0,256) }

spriteset(spriteset_CAT01_OBJ19_VAR03_menu,"gfx/CAT01_OBJ19.png") { template_2x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ19_VAR03_T1,  "gfx/CAT01_OBJ19.png") { template_2x1_T1_overlap (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ19_VAR03_T1_S,"gfx/CAT01_OBJ19.png") { template_2x1_T1_overlap  (106,266,0,256) }

spritelayout layout_CAT01_OBJ19_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ19_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ19_VAR01_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ19_VAR01_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ19_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}
spritelayout layout_CAT01_OBJ19_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ19_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ19_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ19_VAR03_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ19_VAR03_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ19_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}
spritelayout layout_CAT01_OBJ19_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ19_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ19_VAR01_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_MAUVE; }
}
spritelayout layout_CAT01_OBJ19_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}
spritelayout layout_CAT01_OBJ19_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ19_VAR03_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_GREEN; }
}
spritelayout layout_CAT01_OBJ19_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ19_VAR01, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ19_VAR01_T1;
    relative_coord(0, 0): layout_CAT01_OBJ19_VAR01_T2;
    layout_CAT01_OBJ19_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ19_VAR02, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ19_VAR02_T1;
    relative_coord(0, 1): layout_CAT01_OBJ19_VAR02_T2;
    layout_CAT01_OBJ19_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ19_VAR03, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ19_VAR03_T1;
    relative_coord(0, 0): layout_CAT01_OBJ19_VAR03_T2;
    layout_CAT01_OBJ19_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ19_VAR04, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ19_VAR04_T1;
    relative_coord(0, 1): layout_CAT01_OBJ19_VAR04_T2;
    layout_CAT01_OBJ19_VAR04_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ19_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ19_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ19_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ19_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ19_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ19_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ19_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ19_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ19_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ19_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ19_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ19_VAR01; }
// switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ19_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ19_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ19_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ19_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ19_VAR01) {
      1: CAT01_OBJ19_VAR01_1;         // dark blue
      1: CAT01_OBJ19_VAR01_2;         // pale green
      1: CAT01_OBJ19_VAR01_3;         // pink
      // 1: CAT01_OBJ19_VAR01_4;         // yellow
      // 1: CAT01_OBJ19_VAR01_5;          // red
      1: CAT01_OBJ19_VAR01_6;         // light blue
      // 1: CAT01_OBJ19_VAR01_7;         // green
      1: CAT01_OBJ19_VAR01_8;         // dark green
      // 1: CAT01_OBJ19_VAR01_9;          // blue
      1: CAT01_OBJ19_VAR01_10;          // cream
      1: CAT01_OBJ19_VAR01_11;          // mauve
      // 1: CAT01_OBJ19_VAR01_12;         // purple
      // 1: CAT01_OBJ19_VAR01_13;         // orange
      1: CAT01_OBJ19_VAR01_14;          // brown
      1: CAT01_OBJ19_VAR01_15;          // grey
      1: CAT01_OBJ19_VAR01_16;  }         // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ19_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ19_VAR03_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ19_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ19_VAR03) {
      1: CAT01_OBJ19_VAR03_1;           // dark blue
      1: CAT01_OBJ19_VAR03_2;           // pale green
      1: CAT01_OBJ19_VAR03_3;           // pink
      1: CAT01_OBJ19_VAR03_4;           // yellow
      // 1: CAT01_OBJ19_VAR03_5;           // red
      1: CAT01_OBJ19_VAR03_6;           // light blue
      1: CAT01_OBJ19_VAR03_7;           // green
      1: CAT01_OBJ19_VAR03_8;           // dark green
      // 1: CAT01_OBJ19_VAR03_9;           // blue
      1: CAT01_OBJ19_VAR03_10;          // cream
      1: CAT01_OBJ19_VAR03_11;          // mauve
      // 1: CAT01_OBJ19_VAR03_12;          // purple
      // 1: CAT01_OBJ19_VAR03_13;          // orange
      1: CAT01_OBJ19_VAR03_14;          // brown
      1: CAT01_OBJ19_VAR03_15;          // grey
      1: CAT01_OBJ19_VAR03_16;  }           // white


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ19_VAR_view, view) {
    0: colour_CAT01_OBJ19_VAR01;
    1: switch_CAT01_OBJ19_VAR02;
    2: colour_CAT01_OBJ19_VAR03;
    3: switch_CAT01_OBJ19_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ19_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ19_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ19_VAR_menu, view) {
    0:  layout_CAT01_OBJ19_VAR01_menu;
    1:  layout_CAT01_OBJ19_VAR02_menu;
    2:  layout_CAT01_OBJ19_VAR03_menu;
    3:  layout_CAT01_OBJ19_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ19_TXT, view) {
    0:  string(STR_CC);
    // 1:  string(STR_MULTI_COLOURED);
    2:  string(STR_CC);
    // 3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ19) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ19);
        climates_available:     ALL_CLIMATES;
        size:                   [2,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ19_VAR;
        purchase:               switch_CAT01_OBJ19_VAR_menu;
        additional_text:        switch_CAT01_OBJ19_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ21
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ21_VAR01_menu,"gfx/CAT01_OBJ21.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ21_VAR01,  "gfx/CAT01_OBJ21.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ21_VAR01_S,"gfx/CAT01_OBJ21.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ21_VAR02_menu,"gfx/CAT01_OBJ21.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ21_VAR02,  "gfx/CAT01_OBJ21.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ21_VAR02_S,"gfx/CAT01_OBJ21.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ21_VAR03_menu,"gfx/CAT01_OBJ21.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ21_VAR03,  "gfx/CAT01_OBJ21.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ21_VAR03_S,"gfx/CAT01_OBJ21.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ21_VAR04_menu,"gfx/CAT01_OBJ21.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ21_VAR04,  "gfx/CAT01_OBJ21.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ21_VAR04_S,"gfx/CAT01_OBJ21.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ21_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ21_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ21_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ21_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ21_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ21_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ21_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ21_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_CONCRETE : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ21_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_default_recolour == 1 ? PALETTE_STRUCT_CONCRETE : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ21_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ21_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ21_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ21_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ21_VAR01_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_CREAM; }
}
spritelayout layout_CAT01_OBJ21_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ21_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ21_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ21_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_CONCRETE; }
}
spritelayout layout_CAT01_OBJ21_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ21_VAR04_menu; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ21_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ21_VAR01) {
      1: CAT01_OBJ21_VAR01_1;           // dark blue
      1: CAT01_OBJ21_VAR01_2;           // pale green
      1: CAT01_OBJ21_VAR01_3;           // pink
      1: CAT01_OBJ21_VAR01_4;           // yellow
      // 1: CAT01_OBJ21_VAR01_5;           // red
      1: CAT01_OBJ21_VAR01_6;           // light blue
      1: CAT01_OBJ21_VAR01_7;           // green
      1: CAT01_OBJ21_VAR01_8;           // dark green
      1: CAT01_OBJ21_VAR01_9;           // blue
      1: CAT01_OBJ21_VAR01_10;          // cream
      1: CAT01_OBJ21_VAR01_11;          // mauve
      // 1: CAT01_OBJ21_VAR01_12;          // purple
      // 1: CAT01_OBJ21_VAR01_13;          // orange
      1: CAT01_OBJ21_VAR01_14;          // brown
      1: CAT01_OBJ21_VAR01_15;          // grey
      1: CAT01_OBJ21_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR03_1, [STORE_TEMP(795, 3)]) { layout_CAT01_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR03_2, [STORE_TEMP(796, 3)]) { layout_CAT01_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR03_3, [STORE_TEMP(797, 3)]) { layout_CAT01_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR03_4, [STORE_TEMP(798, 3)]) { layout_CAT01_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR03_5, [STORE_TEMP(799, 3)]) { layout_CAT01_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR03_6, [STORE_TEMP(800, 3)]) { layout_CAT01_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ21_VAR03_7, [STORE_TEMP(801, 3)]) { layout_CAT01_OBJ21_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ21_VAR03) {
      1: CAT01_OBJ21_VAR03_1;           // blue
      1: CAT01_OBJ21_VAR03_2;           // brown
      1: CAT01_OBJ21_VAR03_3;           // white
      1: CAT01_OBJ21_VAR03_4;           // red
      1: CAT01_OBJ21_VAR03_5;           // green
      1: CAT01_OBJ21_VAR03_6;           // concrete
      1: CAT01_OBJ21_VAR03_7;  }            // yellow


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ21_VAR_view, view) {
    0: colour_CAT01_OBJ21_VAR01;
    1: layout_CAT01_OBJ21_VAR02;
    2: colour_CAT01_OBJ21_VAR03;
    3: layout_CAT01_OBJ21_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ21_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ21_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ21_VAR_menu, view) {
    0:  layout_CAT01_OBJ21_VAR01_menu;
    1:  layout_CAT01_OBJ21_VAR02_menu;
    2:  layout_CAT01_OBJ21_VAR03_menu;
    3:  layout_CAT01_OBJ21_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ21_TXT, view) {
    0:  string(STR_CC);
    // 1:  string(STR_MULTI_COLOURED);
    2:  string(STR_MULTI_COLOURED);
    // 3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ21) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ21);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ21_VAR;
        purchase:               switch_CAT01_OBJ21_VAR_menu;
        additional_text:        switch_CAT01_OBJ21_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ22
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ22_VAR01_menu,"gfx/CAT01_OBJ22.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ22_VAR01,  "gfx/CAT01_OBJ22.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ22_VAR01_S,"gfx/CAT01_OBJ22.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ22_VAR02_menu,"gfx/CAT01_OBJ22.png") { template_1x1_menu_lowest(146,0,4,256) }
spriteset(spriteset_CAT01_OBJ22_VAR02,  "gfx/CAT01_OBJ22.png") { template_68pix  (146,0,0,256) }
spriteset(spriteset_CAT01_OBJ22_VAR02_S,"gfx/CAT01_OBJ22.png") { template_68pix  (220,0,0,256) }

spriteset(spriteset_CAT01_OBJ22_VAR03_menu,"gfx/CAT01_OBJ22.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ22_VAR03,  "gfx/CAT01_OBJ22.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ22_VAR03_S,"gfx/CAT01_OBJ22.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ22_VAR04_menu,"gfx/CAT01_OBJ22.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ22_VAR04,  "gfx/CAT01_OBJ22.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ22_VAR04_S,"gfx/CAT01_OBJ22.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ22_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ22_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ22_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ22_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ22_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ22_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ22_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ22_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ22_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ22_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ22_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ22_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ22_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ22_VAR01_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREY; }
}
spritelayout layout_CAT01_OBJ22_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ22_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ22_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ22_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ22_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ22_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_RED;  }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ22_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ22_VAR01) {
      1: CAT01_OBJ22_VAR01_1;           // dark blue
      1: CAT01_OBJ22_VAR01_2;           // pale green
      1: CAT01_OBJ22_VAR01_3;           // pink
      1: CAT01_OBJ22_VAR01_4;           // yellow
      // 1: CAT01_OBJ22_VAR01_5;           // red
      1: CAT01_OBJ22_VAR01_6;           // light blue
      1: CAT01_OBJ22_VAR01_7;           // green
      1: CAT01_OBJ22_VAR01_8;           // dark green
      // 1: CAT01_OBJ22_VAR01_9;           // blue
      1: CAT01_OBJ22_VAR01_10;          // cream
      1: CAT01_OBJ22_VAR01_11;          // mauve
      // 1: CAT01_OBJ22_VAR01_12;          // purple
      // 1: CAT01_OBJ22_VAR01_13;          // orange
      1: CAT01_OBJ22_VAR01_14;          // brown
      1: CAT01_OBJ22_VAR01_15;          // grey
      1: CAT01_OBJ22_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ22_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ22_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ22_VAR04) {
      1: CAT01_OBJ22_VAR04_1;           // dark blue
      1: CAT01_OBJ22_VAR04_2;           // pale green
      1: CAT01_OBJ22_VAR04_3;           // pink
      1: CAT01_OBJ22_VAR04_4;           // yellow
      1: CAT01_OBJ22_VAR04_5;           // red
      1: CAT01_OBJ22_VAR04_6;           // light blue
      1: CAT01_OBJ22_VAR04_7;           // green
      1: CAT01_OBJ22_VAR04_8;           // dark green
      1: CAT01_OBJ22_VAR04_9;           // blue
      1: CAT01_OBJ22_VAR04_10;          // cream
      1: CAT01_OBJ22_VAR04_11;          // mauve
      1: CAT01_OBJ22_VAR04_12;          // purple
      1: CAT01_OBJ22_VAR04_13;          // orange
      1: CAT01_OBJ22_VAR04_14;          // brown
      1: CAT01_OBJ22_VAR04_15;          // grey
      1: CAT01_OBJ22_VAR04_16;  }           // white


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ22_VAR_view, view) {
    0: colour_CAT01_OBJ22_VAR01;
    1: layout_CAT01_OBJ22_VAR02;
    2: layout_CAT01_OBJ22_VAR03;
    3: colour_CAT01_OBJ22_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ22_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ22_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ22_VAR_menu, view) {
    0:  layout_CAT01_OBJ22_VAR01_menu;
    1:  layout_CAT01_OBJ22_VAR02_menu;
    2:  layout_CAT01_OBJ22_VAR03_menu;
    3:  layout_CAT01_OBJ22_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ22_TXT, view) {
    0:  string(STR_CC);
    // 1:  string(STR_MULTI_COLOURED);
    // 2:  string(STR_MULTI_COLOURED);
    3:  string(STR_CC);
}


item (FEAT_OBJECTS, CAT01_OBJ22) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ22);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ22_VAR;
        purchase:               switch_CAT01_OBJ22_VAR_menu;
        additional_text:        switch_CAT01_OBJ22_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ23
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ23_VAR01_menu,"gfx/CAT01_OBJ23.png") { template_1x2_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ23_VAR01_T2,  "gfx/CAT01_OBJ23.png") { template_1x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ23_VAR01_T2_S,"gfx/CAT01_OBJ23.png") { template_1x2_T2_overlap  (106,0,0,256) }

spriteset(spriteset_CAT01_OBJ23_VAR02_menu,"gfx/CAT01_OBJ23.png") { template_2x1_menu_lowest(212,0,0,256) }
spriteset(spriteset_CAT01_OBJ23_VAR02_T1,  "gfx/CAT01_OBJ23.png") { template_2x1_T1_overlap  (212,0,0,256) }
spriteset(spriteset_CAT01_OBJ23_VAR02_T1_S,"gfx/CAT01_OBJ23.png") { template_2x1_T1_overlap  (318,0,0,256) }

spriteset(spriteset_CAT01_OBJ23_VAR03_menu,"gfx/CAT01_OBJ23.png") { template_1x2_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ23_VAR03_T2,  "gfx/CAT01_OBJ23.png") { template_1x2_T2_overlap (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ23_VAR03_T2_S,"gfx/CAT01_OBJ23.png") { template_1x2_T2_overlap  (106,266,0,256) }

spriteset(spriteset_CAT01_OBJ23_VAR04_menu,"gfx/CAT01_OBJ23.png") { template_2x1_menu_lowest(212,266,0,256) }
spriteset(spriteset_CAT01_OBJ23_VAR04_T1,  "gfx/CAT01_OBJ23.png") { template_2x1_T1_overlap  (212,266,0,256) }
spriteset(spriteset_CAT01_OBJ23_VAR04_T1_S,"gfx/CAT01_OBJ23.png") { template_2x1_T1_overlap  (318,266,0,256) }

spritelayout layout_CAT01_OBJ23_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ23_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ23_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ23_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ23_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ23_VAR02_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ23_VAR02_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ23_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ23_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ23_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ23_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ23_VAR03_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ23_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ23_VAR04_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ23_VAR04_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ23_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ23_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ23_VAR01_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_BLUE; }
}
spritelayout layout_CAT01_OBJ23_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ23_VAR02_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_YELLOW; }
}
spritelayout layout_CAT01_OBJ23_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ23_VAR03_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN; }
}
spritelayout layout_CAT01_OBJ23_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ23_VAR04_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_PINK; }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ23_VAR01, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ23_VAR01_T1;
    relative_coord(0, 1): layout_CAT01_OBJ23_VAR01_T2;
    layout_CAT01_OBJ23_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ23_VAR02, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ23_VAR02_T1;
    relative_coord(0, 0): layout_CAT01_OBJ23_VAR02_T2;
    layout_CAT01_OBJ23_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ23_VAR03, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ23_VAR03_T1;
    relative_coord(0, 1): layout_CAT01_OBJ23_VAR03_T2;
    layout_CAT01_OBJ23_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ23_VAR04, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ23_VAR04_T1;
    relative_coord(0, 0): layout_CAT01_OBJ23_VAR04_T2;
    layout_CAT01_OBJ23_VAR04_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ23_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ23_VAR01) {
      1: CAT01_OBJ23_VAR01_1;
      1: CAT01_OBJ23_VAR01_2;
      1: CAT01_OBJ23_VAR01_3;
      1: CAT01_OBJ23_VAR01_4;
      // 1: CAT01_OBJ23_VAR01_5;
      1: CAT01_OBJ23_VAR01_6;
      1: CAT01_OBJ23_VAR01_7;
      1: CAT01_OBJ23_VAR01_8;
      // 1: CAT01_OBJ23_VAR01_9;
      1: CAT01_OBJ23_VAR01_10;
      1: CAT01_OBJ23_VAR01_11;
      // 1: CAT01_OBJ23_VAR01_12;
      // 1: CAT01_OBJ23_VAR01_13;
      1: CAT01_OBJ23_VAR01_14;
      1: CAT01_OBJ23_VAR01_15;
      1: CAT01_OBJ23_VAR01_16;  }

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR02_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ23_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ23_VAR02) {
      1: CAT01_OBJ23_VAR02_1;           // dark blue
      1: CAT01_OBJ23_VAR02_2;           // pale green
      1: CAT01_OBJ23_VAR02_3;           // pink
      1: CAT01_OBJ23_VAR02_4;            // yellow
      1: CAT01_OBJ23_VAR02_5;            // red
      1: CAT01_OBJ23_VAR02_6;           // light blue
      1: CAT01_OBJ23_VAR02_7;           // green
      1: CAT01_OBJ23_VAR02_8;           // dark green
      1: CAT01_OBJ23_VAR02_9;           // blue
      1: CAT01_OBJ23_VAR02_10;          // cream
      1: CAT01_OBJ23_VAR02_11;          // mauve
      1: CAT01_OBJ23_VAR02_12;          // purple
      1: CAT01_OBJ23_VAR02_13;           // orange
      1: CAT01_OBJ23_VAR02_14;          // brown
      1: CAT01_OBJ23_VAR02_15;          // grey
      1: CAT01_OBJ23_VAR02_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR03_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ23_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ23_VAR03) {
      1: CAT01_OBJ23_VAR03_1;           // dark blue
      1: CAT01_OBJ23_VAR03_2;           // pale green
      1: CAT01_OBJ23_VAR03_3;           // pink
      1: CAT01_OBJ23_VAR03_4;           // yellow
      // 1: CAT01_OBJ23_VAR03_5;           // red
      1: CAT01_OBJ23_VAR03_6;           // light blue
      1: CAT01_OBJ23_VAR03_7;           // green
      1: CAT01_OBJ23_VAR03_8;           // dark green
      // 1: CAT01_OBJ23_VAR03_9;           // blue
      1: CAT01_OBJ23_VAR03_10;          // cream
      1: CAT01_OBJ23_VAR03_11;          // mauve
      // 1: CAT01_OBJ23_VAR03_12;          // purple
      // 1: CAT01_OBJ23_VAR03_13;          // orange
      1: CAT01_OBJ23_VAR03_14;          // brown
      1: CAT01_OBJ23_VAR03_15;          // grey
      1: CAT01_OBJ23_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ23_VAR04_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ23_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ23_VAR04) {
      1: CAT01_OBJ23_VAR04_1;           // dark blue
      1: CAT01_OBJ23_VAR04_2;           // pale green
      1: CAT01_OBJ23_VAR04_3;           // pink
      1: CAT01_OBJ23_VAR04_4;           // yellow
      1: CAT01_OBJ23_VAR04_5;           // red
      1: CAT01_OBJ23_VAR04_6;           // light blue
      1: CAT01_OBJ23_VAR04_7;           // green
      1: CAT01_OBJ23_VAR04_8;           // dark green
      1: CAT01_OBJ23_VAR04_9;           // blue
      1: CAT01_OBJ23_VAR04_10;          // cream
      1: CAT01_OBJ23_VAR04_11;          // mauve
      1: CAT01_OBJ23_VAR04_12;          // purple
      1: CAT01_OBJ23_VAR04_13;          // orange
      1: CAT01_OBJ23_VAR04_14;          // brown
      1: CAT01_OBJ23_VAR04_15;          // grey
      1: CAT01_OBJ23_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ23_VAR_view, view) {
    0: colour_CAT01_OBJ23_VAR01;
    1: colour_CAT01_OBJ23_VAR02;
    2: colour_CAT01_OBJ23_VAR03;
    3: colour_CAT01_OBJ23_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ23_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ23_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ23_VAR_menu, view) {
    0:  layout_CAT01_OBJ23_VAR01_menu;
    1:  layout_CAT01_OBJ23_VAR02_menu;
    2:  layout_CAT01_OBJ23_VAR03_menu;
    3:  layout_CAT01_OBJ23_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ23_TXT, view) {
    0:  string(STR_CC);
    // 1:  string(STR_CC);
    2:  string(STR_CC);
    // 3:  string(STR_CC);
}


item (FEAT_OBJECTS, CAT01_OBJ23) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ23);
        climates_available:     ALL_CLIMATES;
        size:                   [1,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ23_VAR;
        purchase:               switch_CAT01_OBJ23_VAR_menu;
        additional_text:        switch_CAT01_OBJ23_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ24
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ24_VAR01_menu,"gfx/CAT01_OBJ24.png") { template_1x2_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ24_VAR01_T2,  "gfx/CAT01_OBJ24.png") { template_1x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ24_VAR01_T2_S,"gfx/CAT01_OBJ24.png") { template_1x2_T2_overlap  (106,0,0,256) }

spriteset(spriteset_CAT01_OBJ24_VAR02_menu,"gfx/CAT01_OBJ24.png") { template_2x1_menu_lowest(212,0,0,256) }
spriteset(spriteset_CAT01_OBJ24_VAR02_T1,  "gfx/CAT01_OBJ24.png") { template_2x1_T1_overlap  (212,0,0,256) }
spriteset(spriteset_CAT01_OBJ24_VAR02_T1_S,"gfx/CAT01_OBJ24.png") { template_2x1_T1_overlap  (318,0,0,256) }

spriteset(spriteset_CAT01_OBJ24_VAR03_menu,"gfx/CAT01_OBJ24.png") { template_1x2_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ24_VAR03_T2,  "gfx/CAT01_OBJ24.png") { template_1x2_T2_overlap (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ24_VAR03_T2_S,"gfx/CAT01_OBJ24.png") { template_1x2_T2_overlap  (106,266,0,256) }

spriteset(spriteset_CAT01_OBJ24_VAR04_menu,"gfx/CAT01_OBJ24.png") { template_2x1_menu_lowest(212,266,0,256) }
spriteset(spriteset_CAT01_OBJ24_VAR04_T1,  "gfx/CAT01_OBJ24.png") { template_2x1_T1_overlap  (212,266,0,256) }
spriteset(spriteset_CAT01_OBJ24_VAR04_T1_S,"gfx/CAT01_OBJ24.png") { template_2x1_T1_overlap  (318,266,0,256) }

spritelayout layout_CAT01_OBJ24_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ24_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ24_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ24_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ24_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ24_VAR02_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ24_VAR02_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ24_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ24_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ24_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ24_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ24_VAR03_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ24_VAR04_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ24_VAR04_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ24_VAR04_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ24_VAR04_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ24_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ24_VAR01_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_CREAM; }
}
spritelayout layout_CAT01_OBJ24_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ24_VAR02_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_YELLOW; }
}
spritelayout layout_CAT01_OBJ24_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ24_VAR03_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_BLUE; }
}
spritelayout layout_CAT01_OBJ24_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ24_VAR04_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_PINK; }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ24_VAR01, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ24_VAR01_T1;
    relative_coord(0, 1): layout_CAT01_OBJ24_VAR01_T2;
    layout_CAT01_OBJ24_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ24_VAR02, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ24_VAR02_T1;
    relative_coord(0, 0): layout_CAT01_OBJ24_VAR02_T2;
    layout_CAT01_OBJ24_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ24_VAR03, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ24_VAR03_T1;
    relative_coord(0, 1): layout_CAT01_OBJ24_VAR03_T2;
    layout_CAT01_OBJ24_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ24_VAR04, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ24_VAR04_T1;
    relative_coord(0, 0): layout_CAT01_OBJ24_VAR04_T2;
    layout_CAT01_OBJ24_VAR04_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ24_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ24_VAR01) {
      1: CAT01_OBJ24_VAR01_1;
      1: CAT01_OBJ24_VAR01_2;
      1: CAT01_OBJ24_VAR01_3;
      1: CAT01_OBJ24_VAR01_4;
      // 1: CAT01_OBJ24_VAR01_5;
      1: CAT01_OBJ24_VAR01_6;
      1: CAT01_OBJ24_VAR01_7;
      1: CAT01_OBJ24_VAR01_8;
      // 1: CAT01_OBJ24_VAR01_9;
      1: CAT01_OBJ24_VAR01_10;
      1: CAT01_OBJ24_VAR01_11;
      // 1: CAT01_OBJ24_VAR01_12;
      // 1: CAT01_OBJ24_VAR01_13;
      1: CAT01_OBJ24_VAR01_14;
      1: CAT01_OBJ24_VAR01_15;
      1: CAT01_OBJ24_VAR01_16;  }

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR02_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ24_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ24_VAR02) {
      1: CAT01_OBJ24_VAR02_1;           // dark blue
      1: CAT01_OBJ24_VAR02_2;           // pale green
      1: CAT01_OBJ24_VAR02_3;           // pink
      1: CAT01_OBJ24_VAR02_4;            // yellow
      1: CAT01_OBJ24_VAR02_5;            // red
      1: CAT01_OBJ24_VAR02_6;           // light blue
      1: CAT01_OBJ24_VAR02_7;           // green
      1: CAT01_OBJ24_VAR02_8;           // dark green
      1: CAT01_OBJ24_VAR02_9;           // blue
      1: CAT01_OBJ24_VAR02_10;          // cream
      1: CAT01_OBJ24_VAR02_11;          // mauve
      1: CAT01_OBJ24_VAR02_12;          // purple
      1: CAT01_OBJ24_VAR02_13;           // orange
      1: CAT01_OBJ24_VAR02_14;          // brown
      1: CAT01_OBJ24_VAR02_15;          // grey
      1: CAT01_OBJ24_VAR02_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR03_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ24_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ24_VAR03) {
      1: CAT01_OBJ24_VAR03_1;           // dark blue
      1: CAT01_OBJ24_VAR03_2;           // pale green
      1: CAT01_OBJ24_VAR03_3;           // pink
      1: CAT01_OBJ24_VAR03_4;           // yellow
      // 1: CAT01_OBJ24_VAR03_5;           // red
      1: CAT01_OBJ24_VAR03_6;           // light blue
      1: CAT01_OBJ24_VAR03_7;           // green
      1: CAT01_OBJ24_VAR03_8;           // dark green
      // 1: CAT01_OBJ24_VAR03_9;           // blue
      1: CAT01_OBJ24_VAR03_10;          // cream
      1: CAT01_OBJ24_VAR03_11;          // mauve
      // 1: CAT01_OBJ24_VAR03_12;          // purple
      // 1: CAT01_OBJ24_VAR03_13;          // orange
      1: CAT01_OBJ24_VAR03_14;          // brown
      1: CAT01_OBJ24_VAR03_15;          // grey
      1: CAT01_OBJ24_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ24_VAR04_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ24_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ24_VAR04) {
      1: CAT01_OBJ24_VAR04_1;           // dark blue
      1: CAT01_OBJ24_VAR04_2;           // pale green
      1: CAT01_OBJ24_VAR04_3;           // pink
      1: CAT01_OBJ24_VAR04_4;           // yellow
      1: CAT01_OBJ24_VAR04_5;           // red
      1: CAT01_OBJ24_VAR04_6;           // light blue
      1: CAT01_OBJ24_VAR04_7;           // green
      1: CAT01_OBJ24_VAR04_8;           // dark green
      1: CAT01_OBJ24_VAR04_9;           // blue
      1: CAT01_OBJ24_VAR04_10;          // cream
      1: CAT01_OBJ24_VAR04_11;          // mauve
      1: CAT01_OBJ24_VAR04_12;          // purple
      1: CAT01_OBJ24_VAR04_13;          // orange
      1: CAT01_OBJ24_VAR04_14;          // brown
      1: CAT01_OBJ24_VAR04_15;          // grey
      1: CAT01_OBJ24_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ24_VAR_view, view) {
    0: colour_CAT01_OBJ24_VAR01;
    1: colour_CAT01_OBJ24_VAR02;
    2: colour_CAT01_OBJ24_VAR03;
    3: colour_CAT01_OBJ24_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ24_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ24_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ24_VAR_menu, view) {
    0:  layout_CAT01_OBJ24_VAR01_menu;
    1:  layout_CAT01_OBJ24_VAR02_menu;
    2:  layout_CAT01_OBJ24_VAR03_menu;
    3:  layout_CAT01_OBJ24_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ24_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    2:  string(STR_CC);
    3:  string(STR_CC);
}


item (FEAT_OBJECTS, CAT01_OBJ24) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ24);
        climates_available:     ALL_CLIMATES;
        size:                   [1,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ24_VAR;
        purchase:               switch_CAT01_OBJ24_VAR_menu;
        additional_text:        switch_CAT01_OBJ24_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ25
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ25_VAR01_menu,"gfx/CAT01_OBJ25.png") { template_1x2_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ25_VAR01_T2,  "gfx/CAT01_OBJ25.png") { template_1x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ25_VAR01_T2_S,"gfx/CAT01_OBJ25.png") { template_1x2_T2_overlap  (106,0,0,256) }

spriteset(spriteset_CAT01_OBJ25_VAR02_menu,"gfx/CAT01_OBJ25.png") { template_2x1_menu_lowest(530,0,0,256) }
spriteset(spriteset_CAT01_OBJ25_VAR02_T1a,  "gfx/CAT01_OBJ25.png") { template_2x1_T1_overlap    (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ25_VAR02_T1a_S,"gfx/CAT01_OBJ25.png") { template_2x1_T1_overlap  (106,266,0,256) }
spriteset(spriteset_CAT01_OBJ25_VAR02_T1b,  "gfx/CAT01_OBJ25.png") { template_2x1_T1_overlap  (212,266,0,256) }
spriteset(spriteset_CAT01_OBJ25_VAR02_T1b_S,"gfx/CAT01_OBJ25.png") { template_2x1_T1_overlap  (318,266,0,256) }
spriteset(spriteset_CAT01_OBJ25_VAR02_T1c,  "gfx/CAT01_OBJ25.png") { template_2x1_T1_overlap  (424,266,0,256) }
spriteset(spriteset_CAT01_OBJ25_VAR02_T1c_S,"gfx/CAT01_OBJ25.png") { template_2x1_T1_overlap  (530,266,0,256) }

spritelayout layout_CAT01_OBJ25_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CONCRETE; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ25_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CONCRETE; }
    building { sprite: spriteset_CAT01_OBJ25_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ25_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ25_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CONCRETE; }
    building { sprite: spriteset_CAT01_OBJ25_VAR02_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ25_VAR02_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ25_VAR02_T1a {
    ground   { sprite: GROUNDSPRITE_CONCRETE; }
    building { sprite: spriteset_CAT01_OBJ25_VAR02_T1a;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ25_VAR02_T1a_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ25_VAR02_T1b {
    ground   { sprite: GROUNDSPRITE_CONCRETE; }
    building { sprite: spriteset_CAT01_OBJ25_VAR02_T1b;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ25_VAR02_T1b_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ25_VAR02_T1c {
    ground   { sprite: GROUNDSPRITE_CONCRETE; }
    building { sprite: spriteset_CAT01_OBJ25_VAR02_T1c;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ25_VAR02_T1c_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ25_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ25_VAR01_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_PINK; }
}
spritelayout layout_CAT01_OBJ25_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ25_VAR02_menu; }
}

// random choice of VAR02_T1
random_switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ25_VAR02_random) {
    21: layout_CAT01_OBJ25_VAR02_T1a;
    22: layout_CAT01_OBJ25_VAR02_T1b;
    21: layout_CAT01_OBJ25_VAR02_T1c;
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ25_VAR01, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ25_VAR01_T1;
    relative_coord(0, 1): layout_CAT01_OBJ25_VAR01_T2;
    layout_CAT01_OBJ25_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ25_VAR02, relative_pos) {
    relative_coord(1, 0): switch_CAT01_OBJ25_VAR02_random;
    relative_coord(0, 0): layout_CAT01_OBJ25_VAR01_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ25_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ25_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ25_VAR01) {
      1: CAT01_OBJ25_VAR01_1;
      1: CAT01_OBJ25_VAR01_2;
      1: CAT01_OBJ25_VAR01_3;
      1: CAT01_OBJ25_VAR01_4;
      // 1: CAT01_OBJ25_VAR01_5;
      1: CAT01_OBJ25_VAR01_6;
      1: CAT01_OBJ25_VAR01_7;
      1: CAT01_OBJ25_VAR01_8;
      // 1: CAT01_OBJ25_VAR01_9;
      1: CAT01_OBJ25_VAR01_10;
      1: CAT01_OBJ25_VAR01_11;
      // 1: CAT01_OBJ25_VAR01_12;
      // 1: CAT01_OBJ25_VAR01_13;
      1: CAT01_OBJ25_VAR01_14;
      1: CAT01_OBJ25_VAR01_15;
      1: CAT01_OBJ25_VAR01_16;  }


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ25_VAR_view, view) {
    0: colour_CAT01_OBJ25_VAR01;
    1: switch_CAT01_OBJ25_VAR02;
    // 2: colour_CAT01_OBJ25_VAR03;
    // 3: colour_CAT01_OBJ25_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ25_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ25_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ25_VAR_menu, view) {
    0:  layout_CAT01_OBJ25_VAR01_menu;
    1:  layout_CAT01_OBJ25_VAR02_menu;
    // 2:  layout_CAT01_OBJ25_VAR03_menu;
    // 3:  layout_CAT01_OBJ25_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ25_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CAT01_OBJ25_VAR02);
    // 2:  string(STR_CC);
    // 3:  string(STR_CC);
}


item (FEAT_OBJECTS, CAT01_OBJ25) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ25);
        climates_available:     ALL_CLIMATES;
        size:                   [1,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              2;
    }
    graphics {
        default:                switch_CAT01_OBJ25_VAR;
        purchase:               switch_CAT01_OBJ25_VAR_menu;
        additional_text:        switch_CAT01_OBJ25_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ26
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ26_VAR01_menu,"gfx/CAT01_OBJ26.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ26_VAR01,  "gfx/CAT01_OBJ26.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ26_VAR01_S,"gfx/CAT01_OBJ26.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ26_VAR02_menu,"gfx/CAT01_OBJ26.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ26_VAR02,  "gfx/CAT01_OBJ26.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ26_VAR02_S,"gfx/CAT01_OBJ26.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ26_VAR03_menu,"gfx/CAT01_OBJ26.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ26_VAR03,  "gfx/CAT01_OBJ26.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ26_VAR03_S,"gfx/CAT01_OBJ26.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ26_VAR04_menu,"gfx/CAT01_OBJ26.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ26_VAR04,  "gfx/CAT01_OBJ26.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ26_VAR04_S,"gfx/CAT01_OBJ26.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ26_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: spriteset_CAT01_OBJ26_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ26_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ26_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ26_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ26_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ26_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ26_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ26_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ26_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ26_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ26_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ26_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ26_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ26_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ26_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ26_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ26_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ26_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ26_VAR04_menu; }
}


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ26_VAR_view, view) {
    0: layout_CAT01_OBJ26_VAR01;
    1: layout_CAT01_OBJ26_VAR02;
    2: layout_CAT01_OBJ26_VAR03;
    3: layout_CAT01_OBJ26_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ26_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ26_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ26_VAR_menu, view) {
    0:  layout_CAT01_OBJ26_VAR01_menu;
    1:  layout_CAT01_OBJ26_VAR02_menu;
    2:  layout_CAT01_OBJ26_VAR03_menu;
    3:  layout_CAT01_OBJ26_VAR04_menu;
}


item (FEAT_OBJECTS, CAT01_OBJ26) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ26);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ26_VAR;
        purchase:               switch_CAT01_OBJ26_VAR_menu;
        // additional_text:        switch_CAT01_OBJ26_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ27
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ27_VAR01_menu,"gfx/CAT01_OBJ27.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ27_VAR01,  "gfx/CAT01_OBJ27.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ27_VAR01_S,"gfx/CAT01_OBJ27.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ27_VAR02_menu,"gfx/CAT01_OBJ27.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ27_VAR02,  "gfx/CAT01_OBJ27.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ27_VAR02_S,"gfx/CAT01_OBJ27.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ27_VAR03_menu,"gfx/CAT01_OBJ27.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ27_VAR03,  "gfx/CAT01_OBJ27.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ27_VAR03_S,"gfx/CAT01_OBJ27.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ27_VAR04_menu,"gfx/CAT01_OBJ27.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ27_VAR04,  "gfx/CAT01_OBJ27.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ27_VAR04_S,"gfx/CAT01_OBJ27.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ27_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: spriteset_CAT01_OBJ27_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ27_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ27_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ27_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ27_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ27_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ27_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ27_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ27_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ27_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ27_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ27_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ27_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ27_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ27_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ27_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ27_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ27_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ27_VAR04_menu; }
}


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ27_VAR_view, view) {
    0: layout_CAT01_OBJ27_VAR01;
    1: layout_CAT01_OBJ27_VAR02;
    2: layout_CAT01_OBJ27_VAR03;
    3: layout_CAT01_OBJ27_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ27_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ27_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ27_VAR_menu, view) {
    0:  layout_CAT01_OBJ27_VAR01_menu;
    1:  layout_CAT01_OBJ27_VAR02_menu;
    2:  layout_CAT01_OBJ27_VAR03_menu;
    3:  layout_CAT01_OBJ27_VAR04_menu;
}


item (FEAT_OBJECTS, CAT01_OBJ27) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ27);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ27_VAR;
        purchase:               switch_CAT01_OBJ27_VAR_menu;
        // additional_text:        switch_CAT01_OBJ27_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ28
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ28_VAR01_menu,"gfx/CAT01_OBJ28.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ28_VAR01,  "gfx/CAT01_OBJ28.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ28_VAR01_S,"gfx/CAT01_OBJ28.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ28_VAR02_menu,"gfx/CAT01_OBJ28.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ28_VAR02,  "gfx/CAT01_OBJ28.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ28_VAR02_S,"gfx/CAT01_OBJ28.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ28_VAR03_menu,"gfx/CAT01_OBJ28.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ28_VAR03,  "gfx/CAT01_OBJ28.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ28_VAR03_S,"gfx/CAT01_OBJ28.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ28_VAR04_menu,"gfx/CAT01_OBJ28.png") { template_1x1_menu_lowest(143,266,10,256) }
spriteset(spriteset_CAT01_OBJ28_VAR04,  "gfx/CAT01_OBJ28.png") { template_74pix  (143,266,0,256) }
spriteset(spriteset_CAT01_OBJ28_VAR04_S,"gfx/CAT01_OBJ28.png") { template_74pix  (217,266,0,256) }

spritelayout layout_CAT01_OBJ28_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ28_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ28_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}       
spritelayout layout_CAT01_OBJ28_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ28_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ28_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ28_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ28_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ28_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ28_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ28_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ28_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ28_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ28_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ28_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ28_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ28_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ28_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_PALE_GREEN; }
}
spritelayout layout_CAT01_OBJ28_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ28_VAR04_menu; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ28_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ28_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ28_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ28_VAR03) {
      1: CAT01_OBJ28_VAR03_1;           // dark blue
      1: CAT01_OBJ28_VAR03_2;           // pale green
      1: CAT01_OBJ28_VAR03_3;           // pink
      1: CAT01_OBJ28_VAR03_4;           // yellow
      // 1: CAT01_OBJ28_VAR03_5;           // red
      1: CAT01_OBJ28_VAR03_6;           // light blue
      1: CAT01_OBJ28_VAR03_7;           // green
      1: CAT01_OBJ28_VAR03_8;           // dark green
      // 1: CAT01_OBJ28_VAR03_9;           // blue
      1: CAT01_OBJ28_VAR03_10;          // cream
      1: CAT01_OBJ28_VAR03_11;          // mauve
      // 1: CAT01_OBJ28_VAR03_12;          // purple
      // 1: CAT01_OBJ28_VAR03_13;          // orange
      1: CAT01_OBJ28_VAR03_14;          // brown
      1: CAT01_OBJ28_VAR03_15;          // grey
      1: CAT01_OBJ28_VAR03_16;  }           // white


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ28_VAR_view, view) {
    0: layout_CAT01_OBJ28_VAR01;
    1: layout_CAT01_OBJ28_VAR02;
    2: colour_CAT01_OBJ28_VAR03;
    3: layout_CAT01_OBJ28_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ28_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ28_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ28_VAR_menu, view) {
    0:  layout_CAT01_OBJ28_VAR01_menu;
    1:  layout_CAT01_OBJ28_VAR02_menu;
    2:  layout_CAT01_OBJ28_VAR03_menu;
    3:  layout_CAT01_OBJ28_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ28_TXT, view) {
    // 0:  string(STR_MULTI_COLOURED);
    // 1:  string(STR_MULTI_COLOURED);
    2:  string(STR_CC);
    // 3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ28) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ28);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ28_VAR;
        purchase:               switch_CAT01_OBJ28_VAR_menu;
        additional_text:        switch_CAT01_OBJ28_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ29
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ29_VAR01_menu,"gfx/CAT01_OBJ29.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR01,  "gfx/CAT01_OBJ29.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR01_S,"gfx/CAT01_OBJ29.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ29_VAR02_menu,"gfx/CAT01_OBJ29.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR02,  "gfx/CAT01_OBJ29.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR02_S,"gfx/CAT01_OBJ29.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ29_VAR03_menu,"gfx/CAT01_OBJ29.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR03,  "gfx/CAT01_OBJ29.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR03_S,"gfx/CAT01_OBJ29.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ29_VAR04_menu,"gfx/CAT01_OBJ29.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR04a,  "gfx/CAT01_OBJ29.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR04a_S,"gfx/CAT01_OBJ29.png") { template_1x1  (222,266,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR04b,  "gfx/CAT01_OBJ29.png") { template_1x1  (296,266,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR04b_S,"gfx/CAT01_OBJ29.png") { template_1x1  (370,266,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR04c,  "gfx/CAT01_OBJ29.png") { template_1x1  (444,266,0,256) }
spriteset(spriteset_CAT01_OBJ29_VAR04c_S,"gfx/CAT01_OBJ29.png") { template_1x1  (518,266,0,256) }

spritelayout layout_CAT01_OBJ29_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: spriteset_CAT01_OBJ29_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ29_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
///////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ29_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ29_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ29_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
///////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ29_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ29_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ29_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
///////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ29_VAR04a {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ29_VAR04a;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ29_VAR04a_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ29_VAR04b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ29_VAR04b;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ29_VAR04b_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ29_VAR04c {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ29_VAR04c;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ29_VAR04c_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ29_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ29_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN;  }
}
spritelayout layout_CAT01_OBJ29_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ29_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ29_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ29_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ29_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ29_VAR04_menu; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ29_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ29_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ29_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ29_VAR01) {
      1: CAT01_OBJ29_VAR01_1;           // dark blue
      1: CAT01_OBJ29_VAR01_2;           // pale green
      1: CAT01_OBJ29_VAR01_3;           // pink
      1: CAT01_OBJ29_VAR01_4;           // yellow
      1: CAT01_OBJ29_VAR01_5;           // red
      1: CAT01_OBJ29_VAR01_6;           // light blue
      1: CAT01_OBJ29_VAR01_7;           // green
      1: CAT01_OBJ29_VAR01_8;           // dark green
      1: CAT01_OBJ29_VAR01_9;           // blue
      1: CAT01_OBJ29_VAR01_10;          // cream
      1: CAT01_OBJ29_VAR01_11;          // mauve
      1: CAT01_OBJ29_VAR01_12;          // purple
      1: CAT01_OBJ29_VAR01_13;          // orange
      1: CAT01_OBJ29_VAR01_14;          // brown
      1: CAT01_OBJ29_VAR01_15;          // grey
      1: CAT01_OBJ29_VAR01_16;  }           // white

// random choice of VAR02_T1
random_switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ29_VAR04_random) {
    22: layout_CAT01_OBJ29_VAR04a;
    21: layout_CAT01_OBJ29_VAR04b;
    21: layout_CAT01_OBJ29_VAR04c;
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ29_VAR_view, view) {
    0: colour_CAT01_OBJ29_VAR01;
    1: layout_CAT01_OBJ29_VAR02;
    2: layout_CAT01_OBJ29_VAR03;
    3: switch_CAT01_OBJ29_VAR04_random;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ29_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ29_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ29_VAR_menu, view) {
    0:  layout_CAT01_OBJ29_VAR01_menu;
    1:  layout_CAT01_OBJ29_VAR02_menu;
    2:  layout_CAT01_OBJ29_VAR03_menu;
    3:  layout_CAT01_OBJ29_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ29_TXT, view) {
    0:  string(STR_CC);
    // 1:  string(STR_MULTI_COLOURED);
    // 2:  string(STR_CC);
    3:  string(STR_CAT01_OBJ29_VAR04);
}


item (FEAT_OBJECTS, CAT01_OBJ29) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ29);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ29_VAR;
        purchase:               switch_CAT01_OBJ29_VAR_menu;
        additional_text:        switch_CAT01_OBJ29_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ30
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ30_VAR01_menu,"gfx/CAT01_OBJ30.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ30_VAR01,  "gfx/CAT01_OBJ30.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ30_VAR01_S,"gfx/CAT01_OBJ30.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ30_VAR02_menu,"gfx/CAT01_OBJ30.png") { template_1x1_menu_lowest(146,0,4,256) }
spriteset(spriteset_CAT01_OBJ30_VAR02,  "gfx/CAT01_OBJ30.png") { template_68pix  (146,0,0,256) }
spriteset(spriteset_CAT01_OBJ30_VAR02_S,"gfx/CAT01_OBJ30.png") { template_68pix  (220,0,0,256) }

spriteset(spriteset_CAT01_OBJ30_VAR03_menu,"gfx/CAT01_OBJ30.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ30_VAR03,  "gfx/CAT01_OBJ30.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ30_VAR03_S,"gfx/CAT01_OBJ30.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ30_VAR04_menu,"gfx/CAT01_OBJ30.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ30_VAR04,  "gfx/CAT01_OBJ30.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ30_VAR04_S,"gfx/CAT01_OBJ30.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ30_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: spriteset_CAT01_OBJ30_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ30_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ30_VAR02 {
    ground   { sprite: GROUNDSPRITE_CONCRETE; }
    building { sprite: spriteset_CAT01_OBJ30_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ30_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ30_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ30_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ30_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ30_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ30_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ30_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ30_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ30_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ30_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ30_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ30_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ30_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ30_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ30_VAR04_menu; }
}


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ30_VAR_view, view) {
    0: layout_CAT01_OBJ30_VAR01;
    1: layout_CAT01_OBJ30_VAR02;
    2: layout_CAT01_OBJ30_VAR03;
    3: layout_CAT01_OBJ30_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ30_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ30_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ30_VAR_menu, view) {
    0:  layout_CAT01_OBJ30_VAR01_menu;
    1:  layout_CAT01_OBJ30_VAR02_menu;
    2:  layout_CAT01_OBJ30_VAR03_menu;
    3:  layout_CAT01_OBJ30_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ30_TXT, view) {
    0:  string(STR_CC);
    // 1:  string(STR_MULTI_COLOURED);
    // 2:  string(STR_CC);
    3:  string(STR_CAT01_OBJ30_VAR04);
}


item (FEAT_OBJECTS, CAT01_OBJ30) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ30);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ30_VAR;
        purchase:               switch_CAT01_OBJ30_VAR_menu;
        // additional_text:        switch_CAT01_OBJ30_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ31
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ31_VAR01_menu,"gfx/CAT01_OBJ31.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ31_VAR01,  "gfx/CAT01_OBJ31.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ31_VAR01_S,"gfx/CAT01_OBJ31.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ31_VAR02_menu,"gfx/CAT01_OBJ31.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ31_VAR02,  "gfx/CAT01_OBJ31.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ31_VAR02_S,"gfx/CAT01_OBJ31.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ31_VAR03_menu,"gfx/CAT01_OBJ31.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ31_VAR03,  "gfx/CAT01_OBJ31.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ31_VAR03_S,"gfx/CAT01_OBJ31.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ31_VAR04_menu,"gfx/CAT01_OBJ31.png") { template_1x1_menu_lowest(146,266,4,256) }
spriteset(spriteset_CAT01_OBJ31_VAR04,  "gfx/CAT01_OBJ31.png") { template_68pix  (146,266,0,256) }
spriteset(spriteset_CAT01_OBJ31_VAR04_S,"gfx/CAT01_OBJ31.png") { template_68pix  (220,266,0,256) }

spritelayout layout_CAT01_OBJ31_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ31_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ31_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}       
spritelayout layout_CAT01_OBJ31_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ31_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ31_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ31_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ31_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ31_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ31_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ31_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ31_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ31_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ31_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ31_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ31_VAR02_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_PALE_GREEN; }
}
spritelayout layout_CAT01_OBJ31_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ31_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ31_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ31_VAR04_menu; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ31_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ31_VAR02_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ31_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ31_VAR02) {
      1: CAT01_OBJ31_VAR02_1;           // dark blue
      1: CAT01_OBJ31_VAR02_2;           // pale green
      1: CAT01_OBJ31_VAR02_3;           // pink
      1: CAT01_OBJ31_VAR02_4;           // yellow
      // 1: CAT01_OBJ31_VAR02_5;           // red
      1: CAT01_OBJ31_VAR02_6;           // light blue
      1: CAT01_OBJ31_VAR02_7;           // green
      1: CAT01_OBJ31_VAR02_8;           // dark green
      // 1: CAT01_OBJ31_VAR02_9;           // blue
      1: CAT01_OBJ31_VAR02_10;          // cream
      1: CAT01_OBJ31_VAR02_11;          // mauve
      // 1: CAT01_OBJ31_VAR02_12;          // purple
      // 1: CAT01_OBJ31_VAR02_13;          // orange
      1: CAT01_OBJ31_VAR02_14;          // brown
      1: CAT01_OBJ31_VAR02_15;          // grey
      1: CAT01_OBJ31_VAR02_16;  }           // white


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ31_VAR_view, view) {
    0: layout_CAT01_OBJ31_VAR01;
    1: colour_CAT01_OBJ31_VAR02;
    2: layout_CAT01_OBJ31_VAR03;
    3: layout_CAT01_OBJ31_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ31_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ31_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ31_VAR_menu, view) {
    0:  layout_CAT01_OBJ31_VAR01_menu;
    1:  layout_CAT01_OBJ31_VAR02_menu;
    2:  layout_CAT01_OBJ31_VAR03_menu;
    3:  layout_CAT01_OBJ31_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ31_TXT, view) {
    // 0:  string(STR_MULTI_COLOURED);
    1:  string(STR_CC);
    // 2:  string(STR_CC);
    // 3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ31) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ31);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ31_VAR;
        purchase:               switch_CAT01_OBJ31_VAR_menu;
        additional_text:        switch_CAT01_OBJ31_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ32
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ32_VAR01_menu,"gfx/CAT01_OBJ32.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ32_VAR01,  "gfx/CAT01_OBJ32.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ32_VAR01_S,"gfx/CAT01_OBJ32.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ32_VAR02_menu,"gfx/CAT01_OBJ32.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ32_VAR02,  "gfx/CAT01_OBJ32.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ32_VAR02_S,"gfx/CAT01_OBJ32.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ32_VAR03_menu,"gfx/CAT01_OBJ32.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ32_VAR03,  "gfx/CAT01_OBJ32.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ32_VAR03_S,"gfx/CAT01_OBJ32.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ32_VAR04_menu,"gfx/CAT01_OBJ32.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ32_VAR04,  "gfx/CAT01_OBJ32.png") { template_1x1  (148,266,0,256)  }
spriteset(spriteset_CAT01_OBJ32_VAR04_S,"gfx/CAT01_OBJ32.png") { template_1x1  (222,266,0,256)  }

spritelayout layout_CAT01_OBJ32_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ32_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ32_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}       
spritelayout layout_CAT01_OBJ32_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ32_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ32_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ32_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ32_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ32_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ32_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ32_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ32_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));  }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ32_VAR01_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT01_OBJ32_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ32_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT01_OBJ32_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ32_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ32_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_YELLOW; }
}
spritelayout layout_CAT01_OBJ32_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ32_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREY;  }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ32_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ32_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ32_VAR03) {
      1: CAT01_OBJ32_VAR03_1;           // dark blue
      1: CAT01_OBJ32_VAR03_2;           // pale green
      1: CAT01_OBJ32_VAR03_3;           // pink
      1: CAT01_OBJ32_VAR03_4;           // yellow
      1: CAT01_OBJ32_VAR03_5;           // red
      1: CAT01_OBJ32_VAR03_6;           // light blue
      1: CAT01_OBJ32_VAR03_7;           // green
      1: CAT01_OBJ32_VAR03_8;           // dark green
      1: CAT01_OBJ32_VAR03_9;           // blue
      1: CAT01_OBJ32_VAR03_10;          // cream
      1: CAT01_OBJ32_VAR03_11;          // mauve
      1: CAT01_OBJ32_VAR03_12;          // purple
      1: CAT01_OBJ32_VAR03_13;          // orange
      1: CAT01_OBJ32_VAR03_14;          // brown
      1: CAT01_OBJ32_VAR03_15;          // grey
      1: CAT01_OBJ32_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ32_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ32_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ32_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ32_VAR04) {
      1: CAT01_OBJ32_VAR04_1;           // dark blue
      1: CAT01_OBJ32_VAR04_2;           // pale green
      1: CAT01_OBJ32_VAR04_3;           // pink
      1: CAT01_OBJ32_VAR04_4;           // yellow
      1: CAT01_OBJ32_VAR04_5;           // red
      1: CAT01_OBJ32_VAR04_6;           // light blue
      1: CAT01_OBJ32_VAR04_7;           // green
      1: CAT01_OBJ32_VAR04_8;           // dark green
      1: CAT01_OBJ32_VAR04_9;           // blue
      1: CAT01_OBJ32_VAR04_10;          // cream
      1: CAT01_OBJ32_VAR04_11;          // mauve
      1: CAT01_OBJ32_VAR04_12;          // purple
      1: CAT01_OBJ32_VAR04_13;          // orange
      1: CAT01_OBJ32_VAR04_14;          // brown
      1: CAT01_OBJ32_VAR04_15;          // grey
      1: CAT01_OBJ32_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ32_VAR_view, view) {
    0: layout_CAT01_OBJ32_VAR01;
    1: layout_CAT01_OBJ32_VAR02;
    2: colour_CAT01_OBJ32_VAR03;
    3: colour_CAT01_OBJ32_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ32_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ32_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ32_VAR_menu, view) {
    0:  layout_CAT01_OBJ32_VAR01_menu;
    1:  layout_CAT01_OBJ32_VAR02_menu;
    2:  layout_CAT01_OBJ32_VAR03_menu;
    3:  layout_CAT01_OBJ32_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ32_TXT, view) {
    // 0:  string(STR_MULTI_COLOURED);
    // 1:  string(STR_CC);
    2:  string(STR_CC);
    // 3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ32) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ32);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ32_VAR;
        purchase:               switch_CAT01_OBJ32_VAR_menu;
        additional_text:        switch_CAT01_OBJ32_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ33
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ33_VAR01_menu,"gfx/CAT01_OBJ33.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ33_VAR01,  "gfx/CAT01_OBJ33.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ33_VAR01_S,"gfx/CAT01_OBJ33.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ33_VAR02_menu,"gfx/CAT01_OBJ33.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ33_VAR02,  "gfx/CAT01_OBJ33.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ33_VAR02_S,"gfx/CAT01_OBJ33.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ33_VAR03_menu,"gfx/CAT01_OBJ33.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ33_VAR03,  "gfx/CAT01_OBJ33.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ33_VAR03_S,"gfx/CAT01_OBJ33.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ33_VAR04_menu,"gfx/CAT01_OBJ33.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ33_VAR04,  "gfx/CAT01_OBJ33.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ33_VAR04_S,"gfx/CAT01_OBJ33.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ33_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ33_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ33_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}       
spritelayout layout_CAT01_OBJ33_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ33_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ33_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ33_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ33_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ33_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ33_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ33_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ33_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ33_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ33_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ33_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT01_OBJ33_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ33_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ33_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ33_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ33_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ33_VAR_view, view) {
    0: layout_CAT01_OBJ33_VAR01;
    1: layout_CAT01_OBJ33_VAR02;
    2: layout_CAT01_OBJ33_VAR03;
    3: layout_CAT01_OBJ33_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ33_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ33_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ33_VAR_menu, view) {
    0:  layout_CAT01_OBJ33_VAR01_menu;
    1:  layout_CAT01_OBJ33_VAR02_menu;
    2:  layout_CAT01_OBJ33_VAR03_menu;
    3:  layout_CAT01_OBJ33_VAR04_menu;
}

item (FEAT_OBJECTS, CAT01_OBJ33) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ33);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ33_VAR;
        purchase:               switch_CAT01_OBJ33_VAR_menu;
        // additional_text:        switch_CAT01_OBJ33_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ34
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ34_VAR01_menu,"gfx/CAT01_OBJ34.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ34_VAR01,  "gfx/CAT01_OBJ34.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ34_VAR01_S,"gfx/CAT01_OBJ34.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ34_VAR02_menu,"gfx/CAT01_OBJ34.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ34_VAR02,  "gfx/CAT01_OBJ34.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ34_VAR02_S,"gfx/CAT01_OBJ34.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ34_VAR03_menu,"gfx/CAT01_OBJ34.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ34_VAR03,  "gfx/CAT01_OBJ34.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ34_VAR03_S,"gfx/CAT01_OBJ34.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ34_VAR04_menu,"gfx/CAT01_OBJ34.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ34_VAR04,  "gfx/CAT01_OBJ34.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ34_VAR04_S,"gfx/CAT01_OBJ34.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ34_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ34_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ34_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}       
spritelayout layout_CAT01_OBJ34_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ34_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ34_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ34_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ34_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ34_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ34_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ34_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ34_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ34_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ34_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ34_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT01_OBJ34_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ34_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT01_OBJ34_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ34_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ34_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ34_VAR_view, view) {
    0: layout_CAT01_OBJ34_VAR01;
    1: layout_CAT01_OBJ34_VAR02;
    2: layout_CAT01_OBJ34_VAR03;
    3: layout_CAT01_OBJ34_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ34_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ34_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ34_VAR_menu, view) {
    0:  layout_CAT01_OBJ34_VAR01_menu;
    1:  layout_CAT01_OBJ34_VAR02_menu;
    2:  layout_CAT01_OBJ34_VAR03_menu;
    3:  layout_CAT01_OBJ34_VAR04_menu;
}


item (FEAT_OBJECTS, CAT01_OBJ34) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ34);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ34_VAR;
        purchase:               switch_CAT01_OBJ34_VAR_menu;
        // additional_text:        switch_CAT01_OBJ34_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ35
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ35_VAR01_menu,"gfx/CAT01_OBJ35.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ35_VAR01,  "gfx/CAT01_OBJ35.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ35_VAR01_S,"gfx/CAT01_OBJ35.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ35_VAR02_menu,"gfx/CAT01_OBJ35.png") { template_1x1_menu_lowest(146,0,4,256) }
spriteset(spriteset_CAT01_OBJ35_VAR02,  "gfx/CAT01_OBJ35.png") { template_68pix  (146,0,0,256) }
spriteset(spriteset_CAT01_OBJ35_VAR02_S,"gfx/CAT01_OBJ35.png") { template_68pix  (220,0,0,256) }

spriteset(spriteset_CAT01_OBJ35_VAR03_menu,"gfx/CAT01_OBJ35.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ35_VAR03,  "gfx/CAT01_OBJ35.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ35_VAR03_S,"gfx/CAT01_OBJ35.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ35_VAR04_menu,"gfx/CAT01_OBJ35.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ35_VAR04,  "gfx/CAT01_OBJ35.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ35_VAR04_S,"gfx/CAT01_OBJ35.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ35_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ35_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ35_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}       
spritelayout layout_CAT01_OBJ35_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ35_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ35_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ35_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ35_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ35_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ35_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ35_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ35_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ35_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ35_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ35_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ35_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ35_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ35_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ35_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ35_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ35_VAR_view, view) {
    0: layout_CAT01_OBJ35_VAR01;
    1: layout_CAT01_OBJ35_VAR02;
    2: layout_CAT01_OBJ35_VAR03;
    3: layout_CAT01_OBJ35_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ35_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ35_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ35_VAR_menu, view) {
    0:  layout_CAT01_OBJ35_VAR01_menu;
    1:  layout_CAT01_OBJ35_VAR02_menu;
    2:  layout_CAT01_OBJ35_VAR03_menu;
    3:  layout_CAT01_OBJ35_VAR04_menu;
}


item (FEAT_OBJECTS, CAT01_OBJ35) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ35);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ35_VAR;
        purchase:               switch_CAT01_OBJ35_VAR_menu;
        // additional_text:        switch_CAT01_OBJ35_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ36
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ36_VAR01_menu,"gfx/CAT01_OBJ36.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ36_VAR01,  "gfx/CAT01_OBJ36.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ36_VAR01_S,"gfx/CAT01_OBJ36.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ36_VAR02_menu,"gfx/CAT01_OBJ36.png") { template_1x1_menu_lowest(146,0,4,256) }
spriteset(spriteset_CAT01_OBJ36_VAR02,  "gfx/CAT01_OBJ36.png") { template_68pix  (146,0,0,256) }
spriteset(spriteset_CAT01_OBJ36_VAR02_S,"gfx/CAT01_OBJ36.png") { template_68pix  (220,0,0,256) }

spriteset(spriteset_CAT01_OBJ36_VAR03_menu,"gfx/CAT01_OBJ36.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ36_VAR03,  "gfx/CAT01_OBJ36.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ36_VAR03_S,"gfx/CAT01_OBJ36.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ36_VAR04_menu,"gfx/CAT01_OBJ36.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ36_VAR04,  "gfx/CAT01_OBJ36.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ36_VAR04_S,"gfx/CAT01_OBJ36.png") { template_1x1  (222,266,0,256) }

spritelayout layout_CAT01_OBJ36_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ36_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ36_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}       
spritelayout layout_CAT01_OBJ36_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ36_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ36_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ36_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ36_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ36_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ36_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ36_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ36_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ36_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ36_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ36_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ36_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ36_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT01_OBJ36_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_GREEN; }
}
spritelayout layout_CAT01_OBJ36_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ36_VAR04_menu; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ36_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ36_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ36_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ36_VAR03) {
      1: CAT01_OBJ36_VAR03_1;           // dark blue
      1: CAT01_OBJ36_VAR03_2;           // pale green
      1: CAT01_OBJ36_VAR03_3;           // pink
      1: CAT01_OBJ36_VAR03_4;           // yellow
      // 1: CAT01_OBJ36_VAR03_5;           // red
      1: CAT01_OBJ36_VAR03_6;           // light blue
      1: CAT01_OBJ36_VAR03_7;           // green
      1: CAT01_OBJ36_VAR03_8;           // dark green
      // 1: CAT01_OBJ36_VAR03_9;           // blue
      1: CAT01_OBJ36_VAR03_10;          // cream
      1: CAT01_OBJ36_VAR03_11;          // mauve
      // 1: CAT01_OBJ36_VAR03_12;          // purple
      // 1: CAT01_OBJ36_VAR03_13;          // orange
      1: CAT01_OBJ36_VAR03_14;          // brown
      1: CAT01_OBJ36_VAR03_15;          // grey
      1: CAT01_OBJ36_VAR03_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ36_VAR_view, view) {
    0: layout_CAT01_OBJ36_VAR01;
    1: layout_CAT01_OBJ36_VAR02;
    2: colour_CAT01_OBJ36_VAR03;
    3: layout_CAT01_OBJ36_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ36_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ36_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ36_VAR_menu, view) {
    0:  layout_CAT01_OBJ36_VAR01_menu;
    1:  layout_CAT01_OBJ36_VAR02_menu;
    2:  layout_CAT01_OBJ36_VAR03_menu;
    3:  layout_CAT01_OBJ36_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ36_TXT, view) {
    // 0:  string(STR_MULTI_COLOURED);
    // 1:  string(STR_CC);
    2:  string(STR_CC);
    // 3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ36) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ36);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ36_VAR;
        purchase:               switch_CAT01_OBJ36_VAR_menu;
        additional_text:        switch_CAT01_OBJ36_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ37
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ37_VAR01_menu,"gfx/CAT01_OBJ37.png") { template_1x1_menu_lowest(0,0,10,256) }
spriteset(spriteset_CAT01_OBJ37_VAR01,  "gfx/CAT01_OBJ37.png") { template_74pix  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ37_VAR01_S,"gfx/CAT01_OBJ37.png") { template_74pix  (94,0,0,256) }

spriteset(spriteset_CAT01_OBJ37_VAR02_menu,"gfx/CAT01_OBJ37.png") { template_1x1_menu_lowest(190,0,0,256) }
spriteset(spriteset_CAT01_OBJ37_VAR02,  "gfx/CAT01_OBJ37.png") { template_1x1  (190,0,0,256) }
spriteset(spriteset_CAT01_OBJ37_VAR02_S,"gfx/CAT01_OBJ37.png") { template_1x1  (264,0,0,256) }

spriteset(spriteset_CAT01_OBJ37_VAR03_menu,"gfx/CAT01_OBJ37.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ37_VAR03,  "gfx/CAT01_OBJ37.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ37_VAR03_S,"gfx/CAT01_OBJ37.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ37_VAR04_menu,"gfx/CAT01_OBJ37.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ37_VAR04a,  "gfx/CAT01_OBJ37.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ37_VAR04a_S,"gfx/CAT01_OBJ37.png") { template_1x1  (222,266,0,256) }
spriteset(spriteset_CAT01_OBJ37_VAR04b,  "gfx/CAT01_OBJ37.png") { template_1x1  (296,266,0,256) }
spriteset(spriteset_CAT01_OBJ37_VAR04b_S,"gfx/CAT01_OBJ37.png") { template_1x1  (370,266,0,256) }
spriteset(spriteset_CAT01_OBJ37_VAR04c,  "gfx/CAT01_OBJ37.png") { template_1x1  (444,266,0,256) }
spriteset(spriteset_CAT01_OBJ37_VAR04c_S,"gfx/CAT01_OBJ37.png") { template_1x1  (518,266,0,256) }

spritelayout layout_CAT01_OBJ37_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ37_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;  }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ37_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
///////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ37_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ37_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ37_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
///////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ37_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ37_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ37_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
///////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ37_VAR04a {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ37_VAR04a;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ37_VAR04a_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ37_VAR04b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ37_VAR04b;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ37_VAR04b_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ37_VAR04c {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ37_VAR04c;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ37_VAR04c_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ37_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ37_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ37_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ37_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ37_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ37_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_BLUE;  }
}
spritelayout layout_CAT01_OBJ37_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ37_VAR04_menu; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ37_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ37_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ37_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ37_VAR03) {
      1: CAT01_OBJ37_VAR03_1;           // dark blue
      1: CAT01_OBJ37_VAR03_2;           // pale green
      1: CAT01_OBJ37_VAR03_3;           // pink
      1: CAT01_OBJ37_VAR03_4;           // yellow
      1: CAT01_OBJ37_VAR03_5;           // red
      1: CAT01_OBJ37_VAR03_6;           // light blue
      1: CAT01_OBJ37_VAR03_7;           // green
      1: CAT01_OBJ37_VAR03_8;           // dark green
      1: CAT01_OBJ37_VAR03_9;           // blue
      1: CAT01_OBJ37_VAR03_10;          // cream
      1: CAT01_OBJ37_VAR03_11;          // mauve
      1: CAT01_OBJ37_VAR03_12;          // purple
      1: CAT01_OBJ37_VAR03_13;          // orange
      1: CAT01_OBJ37_VAR03_14;          // brown
      1: CAT01_OBJ37_VAR03_15;          // grey
      1: CAT01_OBJ37_VAR03_16;  }           // white

// random choice of VAR02_T1
random_switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ37_VAR04_random) {
    24: layout_CAT01_OBJ37_VAR04a;
    16: layout_CAT01_OBJ37_VAR04b;
    24: layout_CAT01_OBJ37_VAR04c;
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ37_VAR_view, view) {
    0: layout_CAT01_OBJ37_VAR01;
    1: layout_CAT01_OBJ37_VAR02;
    2: colour_CAT01_OBJ37_VAR03;
    3: switch_CAT01_OBJ37_VAR04_random;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ37_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ37_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ37_VAR_menu, view) {
    0:  layout_CAT01_OBJ37_VAR01_menu;
    1:  layout_CAT01_OBJ37_VAR02_menu;
    2:  layout_CAT01_OBJ37_VAR03_menu;
    3:  layout_CAT01_OBJ37_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ37_TXT, view) {
    // 0:  string(STR_CC);
    // 1:  string(STR_MULTI_COLOURED);
    2:  string(STR_CC);
    3:  string(STR_CAT01_OBJ37_VAR04);
}


item (FEAT_OBJECTS, CAT01_OBJ37) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ37);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ37_VAR;
        purchase:               switch_CAT01_OBJ37_VAR_menu;
        additional_text:        switch_CAT01_OBJ37_TXT;
    }
}










/////////////////////////////////////////////////////////////////////
// CAT01_OBJ38
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ38_VAR01_menu,"gfx/CAT01_OBJ38.png") { template_1x2_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ38_VAR01_T2,  "gfx/CAT01_OBJ38.png") { template_1x2_T2_overlap  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ38_VAR01_T2_S,"gfx/CAT01_OBJ38.png") { template_1x2_T2_overlap  (106,0,0,256) }

spriteset(spriteset_CAT01_OBJ38_VAR02_menu,"gfx/CAT01_OBJ38.png") { template_2x1_menu_lowest(212,0,0,256) }
spriteset(spriteset_CAT01_OBJ38_VAR02_T1,  "gfx/CAT01_OBJ38.png") { template_2x1_T1_overlap  (212,0,0,256) }
spriteset(spriteset_CAT01_OBJ38_VAR02_T1_S,"gfx/CAT01_OBJ38.png") { template_2x1_T1_overlap  (318,0,0,256) }

spriteset(spriteset_CAT01_OBJ38_VAR03_menu,"gfx/CAT01_OBJ38.png") { template_1x2_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ38_VAR03_T2,  "gfx/CAT01_OBJ38.png") { template_1x2_T2_overlap (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ38_VAR03_T2_S,"gfx/CAT01_OBJ38.png") { template_1x2_T2_overlap  (106,266,0,256) }

spriteset(spriteset_CAT01_OBJ38_VAR04_menu,"gfx/CAT01_OBJ38.png") { template_2x1_menu_lowest(212,266,0,256) }
spriteset(spriteset_CAT01_OBJ38_VAR04_T1,  "gfx/CAT01_OBJ38.png") { template_2x1_T1_overlap  (212,266,0,256) }
spriteset(spriteset_CAT01_OBJ38_VAR04_T1_S,"gfx/CAT01_OBJ38.png") { template_2x1_T1_overlap  (318,266,0,256) }

spritelayout layout_CAT01_OBJ38_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT01_OBJ38_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ38_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ38_VAR01_T2_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

/////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ38_VAR02_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ38_VAR02_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ38_VAR02_T1_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT01_OBJ38_VAR02_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ38_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ38_VAR01_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_BLUE; }
}
spritelayout layout_CAT01_OBJ38_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ38_VAR02_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_BLUE; }
}


// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ38_VAR01, relative_pos) {
    relative_coord(0, 0): layout_CAT01_OBJ38_VAR01_T1;
    relative_coord(0, 1): layout_CAT01_OBJ38_VAR01_T2;
    layout_CAT01_OBJ38_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ38_VAR02, relative_pos) {
    relative_coord(1, 0): layout_CAT01_OBJ38_VAR02_T1;
    relative_coord(0, 0): layout_CAT01_OBJ38_VAR02_T2;
    layout_CAT01_OBJ38_VAR02_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ38_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ38_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ38_VAR01) {
      1: CAT01_OBJ38_VAR01_1;
      1: CAT01_OBJ38_VAR01_2;
      1: CAT01_OBJ38_VAR01_3;
      1: CAT01_OBJ38_VAR01_4;
      1: CAT01_OBJ38_VAR01_5;
      1: CAT01_OBJ38_VAR01_6;
      1: CAT01_OBJ38_VAR01_7;
      1: CAT01_OBJ38_VAR01_8;
      1: CAT01_OBJ38_VAR01_9;
      1: CAT01_OBJ38_VAR01_10;
      1: CAT01_OBJ38_VAR01_11;
      1: CAT01_OBJ38_VAR01_12;
      1: CAT01_OBJ38_VAR01_13;
      1: CAT01_OBJ38_VAR01_14;
      1: CAT01_OBJ38_VAR01_15;
      1: CAT01_OBJ38_VAR01_16;  }

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_1, [STORE_TEMP(775, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_2, [STORE_TEMP(776, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_3, [STORE_TEMP(777, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_4, [STORE_TEMP(778, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_5, [STORE_TEMP(779, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_6, [STORE_TEMP(780, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_7, [STORE_TEMP(781, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_8, [STORE_TEMP(782, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_9, [STORE_TEMP(783, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_10,[STORE_TEMP(784, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_11,[STORE_TEMP(785, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_12,[STORE_TEMP(786, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_13,[STORE_TEMP(787, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_14,[STORE_TEMP(788, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_15,[STORE_TEMP(789, 3)]) { switch_CAT01_OBJ38_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ38_VAR02_16,[STORE_TEMP(790, 3)]) { switch_CAT01_OBJ38_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ38_VAR02) {
      1: CAT01_OBJ38_VAR02_1;           // dark blue
      1: CAT01_OBJ38_VAR02_2;           // pale green
      1: CAT01_OBJ38_VAR02_3;           // pink
      1: CAT01_OBJ38_VAR02_4;            // yellow
      1: CAT01_OBJ38_VAR02_5;            // red
      1: CAT01_OBJ38_VAR02_6;           // light blue
      1: CAT01_OBJ38_VAR02_7;           // green
      1: CAT01_OBJ38_VAR02_8;           // dark green
      1: CAT01_OBJ38_VAR02_9;           // blue
      1: CAT01_OBJ38_VAR02_10;          // cream
      1: CAT01_OBJ38_VAR02_11;          // mauve
      1: CAT01_OBJ38_VAR02_12;          // purple
      1: CAT01_OBJ38_VAR02_13;           // orange
      1: CAT01_OBJ38_VAR02_14;          // brown
      1: CAT01_OBJ38_VAR02_15;          // grey
      1: CAT01_OBJ38_VAR02_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ38_VAR_view, view) {
    0: colour_CAT01_OBJ38_VAR01;
    1: colour_CAT01_OBJ38_VAR02;
    // 2: layout_CAT01_OBJ38_VAR03;
    // 3: layout_CAT01_OBJ38_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ38_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ38_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ38_VAR_menu, view) {
    0:  layout_CAT01_OBJ38_VAR01_menu;
    1:  layout_CAT01_OBJ38_VAR02_menu;
    // 2:  layout_CAT01_OBJ38_VAR03_menu;
    // 3:  layout_CAT01_OBJ38_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ38_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    // 2:  string(STR_CC);
    // 3:  string(STR_CC);
}


item (FEAT_OBJECTS, CAT01_OBJ38) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ38);
        climates_available:     ALL_CLIMATES;
        size:                   [1,2];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              2;
    }
    graphics {
        default:                switch_CAT01_OBJ38_VAR;
        purchase:               switch_CAT01_OBJ38_VAR_menu;
        additional_text:        switch_CAT01_OBJ38_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ39
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ39_VAR01_menu,"gfx/CAT01_OBJ39.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ39_VAR01,  "gfx/CAT01_OBJ39.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ39_VAR01_S,"gfx/CAT01_OBJ39.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ39_VAR02_menu,"gfx/CAT01_OBJ39.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT01_OBJ39_VAR02,  "gfx/CAT01_OBJ39.png") { template_1x1  (148,0,0,256) }
spriteset(spriteset_CAT01_OBJ39_VAR02_S,"gfx/CAT01_OBJ39.png") { template_1x1  (222,0,0,256) }

spriteset(spriteset_CAT01_OBJ39_VAR03_menu,"gfx/CAT01_OBJ39.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ39_VAR03,  "gfx/CAT01_OBJ39.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ39_VAR03_S,"gfx/CAT01_OBJ39.png") { template_1x1  (74,266,0,256) }

spriteset(spriteset_CAT01_OBJ39_VAR04_menu,"gfx/CAT01_OBJ39.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT01_OBJ39_VAR04,  "gfx/CAT01_OBJ39.png") { template_1x1  (148,266,0,256)  }
spriteset(spriteset_CAT01_OBJ39_VAR04_S,"gfx/CAT01_OBJ39.png") { template_1x1  (222,266,0,256)  }

spritelayout layout_CAT01_OBJ39_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ39_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ39_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}       
spritelayout layout_CAT01_OBJ39_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ39_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ39_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ39_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ39_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ39_VAR03_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ39_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ39_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_SNOW;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ39_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ39_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ39_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_DARK_BLUE; }
}
spritelayout layout_CAT01_OBJ39_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ39_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ39_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ39_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ39_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ39_VAR04_menu; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT01_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT01_OBJ39_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT01_OBJ39_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT01_OBJ39_VAR01) {
      1: CAT01_OBJ39_VAR01_1;           // dark blue
      1: CAT01_OBJ39_VAR01_2;           // pale green
      1: CAT01_OBJ39_VAR01_3;           // pink
      1: CAT01_OBJ39_VAR01_4;           // yellow
      1: CAT01_OBJ39_VAR01_5;           // red
      1: CAT01_OBJ39_VAR01_6;           // light blue
      1: CAT01_OBJ39_VAR01_7;           // green
      1: CAT01_OBJ39_VAR01_8;           // dark green
      1: CAT01_OBJ39_VAR01_9;           // blue
      1: CAT01_OBJ39_VAR01_10;          // cream
      1: CAT01_OBJ39_VAR01_11;          // mauve
      1: CAT01_OBJ39_VAR01_12;          // purple
      1: CAT01_OBJ39_VAR01_13;          // orange
      1: CAT01_OBJ39_VAR01_14;          // brown
      1: CAT01_OBJ39_VAR01_15;          // grey
      1: CAT01_OBJ39_VAR01_16;  }           // white


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ39_VAR_view, view) {
    0: colour_CAT01_OBJ39_VAR01;
    1: layout_CAT01_OBJ39_VAR02;
    2: layout_CAT01_OBJ39_VAR03;
    3: layout_CAT01_OBJ39_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ39_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ39_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ39_VAR_menu, view) {
    0:  layout_CAT01_OBJ39_VAR01_menu;
    1:  layout_CAT01_OBJ39_VAR02_menu;
    2:  layout_CAT01_OBJ39_VAR03_menu;
    3:  layout_CAT01_OBJ39_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ39_TXT, view) {
    0:  string(STR_CC);
    // 1:  string(STR_CC);
    // 2:  string(STR_CC);
    // 3:  string(STR_MULTI_COLOURED);
}


item (FEAT_OBJECTS, CAT01_OBJ39) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ39);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ39_VAR;
        purchase:               switch_CAT01_OBJ39_VAR_menu;
        additional_text:        switch_CAT01_OBJ39_TXT;
    }
}












/////////////////////////////////////////////////////////////////////
// CAT01_OBJ40
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT01_OBJ40_VAR01_menu,"gfx/CAT01_OBJ40.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT01_OBJ40_VAR01,  "gfx/CAT01_OBJ40.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT01_OBJ40_VAR01_S,"gfx/CAT01_OBJ40.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT01_OBJ40_VAR02_menu,"gfx/CAT01_OBJ40.png") { template_1x1_menu_lowest(296,0,0,256) }
spriteset(spriteset_CAT01_OBJ40_VAR02,  "gfx/CAT01_OBJ40.png") { template_1x1  (296,0,0,256) }
spriteset(spriteset_CAT01_OBJ40_VAR02_S,"gfx/CAT01_OBJ40.png") { template_1x1  (370,0,0,256) }

spriteset(spriteset_CAT01_OBJ40_VAR03_menu,"gfx/CAT01_OBJ40.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT01_OBJ40_VAR03a,  "gfx/CAT01_OBJ40.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT01_OBJ40_VAR03a_S,"gfx/CAT01_OBJ40.png") { template_1x1  (74,266,0,256) }
spriteset(spriteset_CAT01_OBJ40_VAR03b,  "gfx/CAT01_OBJ40.png") { template_1x1  (148,266,0,256) }
spriteset(spriteset_CAT01_OBJ40_VAR03b_S,"gfx/CAT01_OBJ40.png") { template_1x1  (222,266,0,256) }

spriteset(spriteset_CAT01_OBJ40_VAR04_menu,"gfx/CAT01_OBJ40.png") { template_1x1_menu_lowest(296,266,0,256) }
spriteset(spriteset_CAT01_OBJ40_VAR04,  "gfx/CAT01_OBJ40.png") { template_1x1  (296,266,0,256) }
spriteset(spriteset_CAT01_OBJ40_VAR04_S,"gfx/CAT01_OBJ40.png") { template_1x1  (370,266,0,256) }

spritelayout layout_CAT01_OBJ40_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: spriteset_CAT01_OBJ40_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ40_VAR01_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
///////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ40_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ40_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ40_VAR02_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
///////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ40_VAR03a {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ40_VAR03a;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ40_VAR03a_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
spritelayout layout_CAT01_OBJ40_VAR03b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ40_VAR03b;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ40_VAR03b_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}
///////////////////////////////////////////////////////////
spritelayout layout_CAT01_OBJ40_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT01_OBJ40_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) > snowline_height; }
    building { sprite: GROUNDSPRITE_CLEARED;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
    building { sprite: spriteset_CAT01_OBJ40_VAR04_S;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               hide_sprite: nearby_tile_height(0, 0) <= snowline_height; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT01_OBJ40_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ40_VAR01_menu; }
}
spritelayout layout_CAT01_OBJ40_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ40_VAR02_menu; }
}
spritelayout layout_CAT01_OBJ40_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ40_VAR03_menu; }
}
spritelayout layout_CAT01_OBJ40_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT01_OBJ40_VAR04_menu; }
}

// random choice of VAR02_T1
random_switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ40_VAR03_random) {
    1: layout_CAT01_OBJ40_VAR03a;
    1: layout_CAT01_OBJ40_VAR03b;
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ40_VAR_view, view) {
    0: layout_CAT01_OBJ40_VAR01;
    1: layout_CAT01_OBJ40_VAR02;
    2: switch_CAT01_OBJ40_VAR03_random;
    3: layout_CAT01_OBJ40_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ40_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT01_OBJ40_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ40_VAR_menu, view) {
    0:  layout_CAT01_OBJ40_VAR01_menu;
    1:  layout_CAT01_OBJ40_VAR02_menu;
    2:  layout_CAT01_OBJ40_VAR03_menu;
    3:  layout_CAT01_OBJ40_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT01_OBJ40_TXT, view) {
    // 0:  string(STR_CC);
    // 1:  string(STR_CAT01_OBJ40_VAR02);
    2:  string(STR_CAT01_OBJ40_VAR03);
    // 3:  string(STR_CAT01_OBJ40_VAR04);
}


item (FEAT_OBJECTS, CAT01_OBJ40) {
    property {
        class:                  "TTRS";
        classname:              string(STR_CAT01);
        name:                   string(STR_CAT01_OBJ40);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  1;
        remove_cost_multiplier: 1;
        introduction_date:      0x00000000;
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
        height:                 8;
        num_views:              4;
    }
    graphics {
        default:                switch_CAT01_OBJ40_VAR;
        purchase:               switch_CAT01_OBJ40_VAR_menu;
        additional_text:        switch_CAT01_OBJ40_TXT;
    }
}




///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////





/////////////////////////////////////////////////////////////////////
// CAT02_OBJ01
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ01_VAR01_menu,"gfx/airport_small.png") { template_4x3_menu_low(0,0,0,256) }
spriteset(spriteset_CAT02_OBJ01_VAR01_T1,      "gfx/airport_small.png") { template_4x3_T1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ01_VAR01_T2,      "gfx/airport_small.png") { template_4x3_T2  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ01_VAR01_T3,      "gfx/airport_small.png") { template_4x3_T3  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ01_VAR01_T4,      "gfx/airport_small.png") { template_4x3_T4  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ01_VAR01_T5,      "gfx/airport_small.png") { template_4x3_T5  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ01_VAR01_T6,      "gfx/airport_small.png") { template_4x3_T6  (0,0,0,256) }

spritelayout layout_CAT02_OBJ01_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ01_VAR01_T1;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ01_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ01_VAR01_T2;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ01_VAR01_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ01_VAR01_T3;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ01_VAR01_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ01_VAR01_T4;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ01_VAR01_T5 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ01_VAR01_T5;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ01_VAR01_T6 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ01_VAR01_T6;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ01_VAR01_EMPTY {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: GROUNDSPRITE_CLEARED;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ01_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ01_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_PURPLE; }
}

// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ01_VAR01, relative_pos) {
    relative_coord(3, 0): layout_CAT02_OBJ01_VAR01_T1;
    relative_coord(3, 1): layout_CAT02_OBJ01_VAR01_T2;
    relative_coord(3, 2): layout_CAT02_OBJ01_VAR01_T3;
    relative_coord(2, 2): layout_CAT02_OBJ01_VAR01_T4;
    relative_coord(1, 2): layout_CAT02_OBJ01_VAR01_T5;
    relative_coord(0, 2): layout_CAT02_OBJ01_VAR01_T6;
    relative_coord(2, 0): layout_CAT02_OBJ01_VAR01_EMPTY;
    relative_coord(2, 1): layout_CAT02_OBJ01_VAR01_EMPTY;
    relative_coord(1, 0): layout_CAT02_OBJ01_VAR01_EMPTY;
    relative_coord(1, 1): layout_CAT02_OBJ01_VAR01_EMPTY;
    relative_coord(0, 0): layout_CAT02_OBJ01_VAR01_EMPTY;
    relative_coord(0, 1): layout_CAT02_OBJ01_VAR01_EMPTY;
    layout_CAT02_OBJ01_VAR01_T1;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_1, [STORE_TEMP(775, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_2, [STORE_TEMP(776, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_3, [STORE_TEMP(777, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_4, [STORE_TEMP(778, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_5, [STORE_TEMP(779, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_6, [STORE_TEMP(780, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_7, [STORE_TEMP(781, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_8, [STORE_TEMP(782, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_9, [STORE_TEMP(783, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_10,[STORE_TEMP(784, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_11,[STORE_TEMP(785, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_12,[STORE_TEMP(786, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_13,[STORE_TEMP(787, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_14,[STORE_TEMP(788, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_15,[STORE_TEMP(789, 3)]) { switch_CAT02_OBJ01_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ01_VAR01_T1_16,[STORE_TEMP(790, 3)]) { switch_CAT02_OBJ01_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT02_OBJ01_VAR01_T1) {
      1: CAT02_OBJ01_VAR01_T1_1;           // dark blue
      1: CAT02_OBJ01_VAR01_T1_2;           // pale green
      1: CAT02_OBJ01_VAR01_T1_3;           // pink
      1: CAT02_OBJ01_VAR01_T1_4;           // yellow
      1: CAT02_OBJ01_VAR01_T1_5;           // red
      1: CAT02_OBJ01_VAR01_T1_6;           // light blue
      1: CAT02_OBJ01_VAR01_T1_7;           // green
      1: CAT02_OBJ01_VAR01_T1_8;           // dark green
      1: CAT02_OBJ01_VAR01_T1_9;           // blue
      1: CAT02_OBJ01_VAR01_T1_10;          // cream
      1: CAT02_OBJ01_VAR01_T1_11;          // mauve
      1: CAT02_OBJ01_VAR01_T1_12;          // purple
      1: CAT02_OBJ01_VAR01_T1_13;          // orange
      1: CAT02_OBJ01_VAR01_T1_14;          // brown
      1: CAT02_OBJ01_VAR01_T1_15;          // grey
      1: CAT02_OBJ01_VAR01_T1_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ01_VAR_view, view) {
    0: colour_CAT02_OBJ01_VAR01_T1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ01_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ01_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ01_VAR_menu, view) {
    0:  layout_CAT02_OBJ01_VAR01_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ01_TXT, view) {
    0:  string(STR_CC);
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ01) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ01);
            climates_available:     ALL_CLIMATES;
            size:                   [4,3];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              1;
        }
        graphics {
            default:                switch_CAT02_OBJ01_VAR;
            purchase:               switch_CAT02_OBJ01_VAR_menu;
            additional_text:        switch_CAT02_OBJ01_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ02
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ02_VAR01_menu,"gfx/CAT02_OBJ02.png") { template_1x1_menu_low(0,0,0,256) }
spriteset(spriteset_CAT02_OBJ02_VAR01,     "gfx/CAT02_OBJ02.png") { template_1x1  (0,0,0,256) }

spriteset(spriteset_CAT02_OBJ02_VAR02_menu,"gfx/CAT02_OBJ02.png") { template_1x1_menu_low(74,0,0,256) }
spriteset(spriteset_CAT02_OBJ02_VAR02,     "gfx/CAT02_OBJ02.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT02_OBJ02_VAR03_menu,"gfx/CAT02_OBJ02.png") { template_1x1_menu_low(0,266,0,256) }
spriteset(spriteset_CAT02_OBJ02_VAR03,     "gfx/CAT02_OBJ02.png") { template_1x1  (0,266,0,256) }

spriteset(spriteset_CAT02_OBJ02_VAR04_menu,"gfx/CAT02_OBJ02.png") { template_1x1_menu_low(74,266,0,256) }
spriteset(spriteset_CAT02_OBJ02_VAR04,     "gfx/CAT02_OBJ02.png") { template_1x1  (74,266,0,256) }


spritelayout layout_CAT02_OBJ02_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ02_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ02_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ02_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ02_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ02_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ02_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ02_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ02_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ02_VAR01; }
}
spritelayout layout_CAT02_OBJ02_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ02_VAR02; }
}
spritelayout layout_CAT02_OBJ02_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ02_VAR03; }
}
spritelayout layout_CAT02_OBJ02_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ02_VAR04; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ02_VAR_view, view) {
    0: layout_CAT02_OBJ02_VAR01;
    1: layout_CAT02_OBJ02_VAR02;
    2: layout_CAT02_OBJ02_VAR03;
    3: layout_CAT02_OBJ02_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ02_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ02_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ02_VAR_menu, view) {
    0:  layout_CAT02_OBJ02_VAR01_menu;
    1:  layout_CAT02_OBJ02_VAR02_menu;
    2:  layout_CAT02_OBJ02_VAR03_menu;
    3:  layout_CAT02_OBJ02_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ02) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ02);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ02_VAR;
            purchase:               switch_CAT02_OBJ02_VAR_menu;
            // additional_text:        switch_CAT02_OBJ02_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ03
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ03_VAR01_menu,"gfx/CAT02_OBJ03.png") { template_1x1_menu_low(0,0,0,256) }
spriteset(spriteset_CAT02_OBJ03_VAR01,     "gfx/CAT02_OBJ03.png") { template_1x1  (0,0,0,256) }

spriteset(spriteset_CAT02_OBJ03_VAR02_menu,"gfx/CAT02_OBJ03.png") { template_1x1_menu_low(74,0,0,256) }
spriteset(spriteset_CAT02_OBJ03_VAR02,     "gfx/CAT02_OBJ03.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT02_OBJ03_VAR03_menu,"gfx/CAT02_OBJ03.png") { template_1x1_menu_low(0,266,0,256) }
spriteset(spriteset_CAT02_OBJ03_VAR03,     "gfx/CAT02_OBJ03.png") { template_1x1  (0,266,0,256) }

spriteset(spriteset_CAT02_OBJ03_VAR04_menu,"gfx/CAT02_OBJ03.png") { template_1x1_menu_low(74,266,0,256) }
spriteset(spriteset_CAT02_OBJ03_VAR04,     "gfx/CAT02_OBJ03.png") { template_1x1  (74,266,0,256) }


spritelayout layout_CAT02_OBJ03_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ03_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ03_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ03_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ03_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ03_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ03_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ03_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ03_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ03_VAR01; }
}
spritelayout layout_CAT02_OBJ03_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ03_VAR02; }
}
spritelayout layout_CAT02_OBJ03_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ03_VAR03; }
}
spritelayout layout_CAT02_OBJ03_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ03_VAR04; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ03_VAR_view, view) {
    0: layout_CAT02_OBJ03_VAR01;
    1: layout_CAT02_OBJ03_VAR02;
    2: layout_CAT02_OBJ03_VAR03;
    3: layout_CAT02_OBJ03_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ03_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ03_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ03_VAR_menu, view) {
    0:  layout_CAT02_OBJ03_VAR01_menu;
    1:  layout_CAT02_OBJ03_VAR02_menu;
    2:  layout_CAT02_OBJ03_VAR03_menu;
    3:  layout_CAT02_OBJ03_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ03) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ03);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ03_VAR;
            purchase:               switch_CAT02_OBJ03_VAR_menu;
            // additional_text:        switch_CAT02_OBJ03_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ04
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ04_VAR01_menu,"gfx/CAT02_OBJ04.png") { template_1x1_menu_low(0,0,0,256) }
spriteset(spriteset_CAT02_OBJ04_VAR01,     "gfx/CAT02_OBJ04.png") { template_1x1  (0,0,0,256) }

spriteset(spriteset_CAT02_OBJ04_VAR02_menu,"gfx/CAT02_OBJ04.png") { template_1x1_menu_low(74,0,0,256) }
spriteset(spriteset_CAT02_OBJ04_VAR02,     "gfx/CAT02_OBJ04.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT02_OBJ04_VAR03_menu,"gfx/CAT02_OBJ04.png") { template_1x1_menu_low(0,266,0,256) }
spriteset(spriteset_CAT02_OBJ04_VAR03,     "gfx/CAT02_OBJ04.png") { template_1x1  (0,266,0,256) }

spriteset(spriteset_CAT02_OBJ04_VAR04_menu,"gfx/CAT02_OBJ04.png") { template_1x1_menu_low(74,266,0,256) }
spriteset(spriteset_CAT02_OBJ04_VAR04,     "gfx/CAT02_OBJ04.png") { template_1x1  (74,266,0,256) }


spritelayout layout_CAT02_OBJ04_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ04_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ04_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ04_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ04_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ04_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ04_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ04_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ04_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ04_VAR01; }
}
spritelayout layout_CAT02_OBJ04_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ04_VAR02; }
}
spritelayout layout_CAT02_OBJ04_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ04_VAR03; }
}
spritelayout layout_CAT02_OBJ04_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ04_VAR04; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ04_VAR_view, view) {
    0: layout_CAT02_OBJ04_VAR01;
    1: layout_CAT02_OBJ04_VAR02;
    2: layout_CAT02_OBJ04_VAR03;
    3: layout_CAT02_OBJ04_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ04_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ04_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ04_VAR_menu, view) {
    0:  layout_CAT02_OBJ04_VAR01_menu;
    1:  layout_CAT02_OBJ04_VAR02_menu;
    2:  layout_CAT02_OBJ04_VAR03_menu;
    3:  layout_CAT02_OBJ04_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ04) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ04);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ04_VAR;
            purchase:               switch_CAT02_OBJ04_VAR_menu;
            // additional_text:        switch_CAT02_OBJ04_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ05
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ05_VAR01_menu,"gfx/CAT02_OBJ05.png") { template_1x1_menu_low(0,0,0,256) }
spriteset(spriteset_CAT02_OBJ05_VAR01,     "gfx/CAT02_OBJ05.png") { template_1x1  (0,0,0,256) }

spriteset(spriteset_CAT02_OBJ05_VAR02_menu,"gfx/CAT02_OBJ05.png") { template_1x1_menu_low(74,0,0,256) }
spriteset(spriteset_CAT02_OBJ05_VAR02,     "gfx/CAT02_OBJ05.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT02_OBJ05_VAR03_menu,"gfx/CAT02_OBJ05.png") { template_1x1_menu_low(0,266,0,256) }
spriteset(spriteset_CAT02_OBJ05_VAR03,     "gfx/CAT02_OBJ05.png") { template_1x1  (0,266,0,256) }

spriteset(spriteset_CAT02_OBJ05_VAR04_menu,"gfx/CAT02_OBJ05.png") { template_1x1_menu_low(74,266,0,256) }
spriteset(spriteset_CAT02_OBJ05_VAR04,     "gfx/CAT02_OBJ05.png") { template_1x1  (74,266,0,256) }


spritelayout layout_CAT02_OBJ05_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ05_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ05_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ05_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ05_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ05_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ05_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ05_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ05_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ05_VAR01; }
}
spritelayout layout_CAT02_OBJ05_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ05_VAR02; }
}
spritelayout layout_CAT02_OBJ05_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ05_VAR03; }
}
spritelayout layout_CAT02_OBJ05_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ05_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_YELLOW; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT02_OBJ05_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ05_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT02_OBJ05_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT02_OBJ05_VAR04) {
      1: CAT02_OBJ05_VAR04_1;           // dark blue
      1: CAT02_OBJ05_VAR04_2;           // pale green
      1: CAT02_OBJ05_VAR04_3;           // pink
      1: CAT02_OBJ05_VAR04_4;           // yellow
      1: CAT02_OBJ05_VAR04_5;           // red
      1: CAT02_OBJ05_VAR04_6;           // light blue
      1: CAT02_OBJ05_VAR04_7;           // green
      1: CAT02_OBJ05_VAR04_8;           // dark green
      1: CAT02_OBJ05_VAR04_9;           // blue
      1: CAT02_OBJ05_VAR04_10;          // cream
      1: CAT02_OBJ05_VAR04_11;          // mauve
      1: CAT02_OBJ05_VAR04_12;          // purple
      1: CAT02_OBJ05_VAR04_13;          // orange
      1: CAT02_OBJ05_VAR04_14;          // brown
      1: CAT02_OBJ05_VAR04_15;          // grey
      1: CAT02_OBJ05_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ05_VAR_view, view) {
    0: layout_CAT02_OBJ05_VAR01;
    1: layout_CAT02_OBJ05_VAR02;
    2: layout_CAT02_OBJ05_VAR03;
    3: colour_CAT02_OBJ05_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ05_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ05_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ05_VAR_menu, view) {
    0:  layout_CAT02_OBJ05_VAR01_menu;
    1:  layout_CAT02_OBJ05_VAR02_menu;
    2:  layout_CAT02_OBJ05_VAR03_menu;
    3:  layout_CAT02_OBJ05_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ05) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ05);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ05_VAR;
            purchase:               switch_CAT02_OBJ05_VAR_menu;
            // additional_text:        switch_CAT02_OBJ05_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ06
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ06_VAR01_menu,"gfx/CAT02_OBJ06.png") { template_1x1_menu_low(0,0,0,256) }
spriteset(spriteset_CAT02_OBJ06_VAR01,     "gfx/CAT02_OBJ06.png") { template_1x1  (0,0,0,256) }

spriteset(spriteset_CAT02_OBJ06_VAR02_menu,"gfx/CAT02_OBJ06.png") { template_1x1_menu_low(74,0,0,256) }
spriteset(spriteset_CAT02_OBJ06_VAR02,     "gfx/CAT02_OBJ06.png") { template_1x1  (74,0,0,256) }

spriteset(spriteset_CAT02_OBJ06_VAR03_menu,"gfx/CAT02_OBJ06.png") { template_1x1_menu_low(0,266,0,256) }
spriteset(spriteset_CAT02_OBJ06_VAR03,     "gfx/CAT02_OBJ06.png") { template_1x1  (0,266,0,256) }

spriteset(spriteset_CAT02_OBJ06_VAR04_menu,"gfx/CAT02_OBJ06.png") { template_1x1_menu_low(74,266,0,256) }
spriteset(spriteset_CAT02_OBJ06_VAR04,     "gfx/CAT02_OBJ06.png") { template_1x1  (74,266,0,256) }


spritelayout layout_CAT02_OBJ06_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ06_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ06_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ06_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ06_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ06_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ06_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ06_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ06_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ06_VAR01; }
}
spritelayout layout_CAT02_OBJ06_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ06_VAR02; }
}
spritelayout layout_CAT02_OBJ06_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ06_VAR03; }
}
spritelayout layout_CAT02_OBJ06_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ06_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_YELLOW; }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT02_OBJ06_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ06_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT02_OBJ06_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT02_OBJ06_VAR04) {
      1: CAT02_OBJ06_VAR04_1;           // dark blue
      1: CAT02_OBJ06_VAR04_2;           // pale green
      1: CAT02_OBJ06_VAR04_3;           // pink
      1: CAT02_OBJ06_VAR04_4;           // yellow
      1: CAT02_OBJ06_VAR04_5;           // red
      1: CAT02_OBJ06_VAR04_6;           // light blue
      1: CAT02_OBJ06_VAR04_7;           // green
      1: CAT02_OBJ06_VAR04_8;           // dark green
      1: CAT02_OBJ06_VAR04_9;           // blue
      1: CAT02_OBJ06_VAR04_10;          // cream
      1: CAT02_OBJ06_VAR04_11;          // mauve
      1: CAT02_OBJ06_VAR04_12;          // purple
      1: CAT02_OBJ06_VAR04_13;          // orange
      1: CAT02_OBJ06_VAR04_14;          // brown
      1: CAT02_OBJ06_VAR04_15;          // grey
      1: CAT02_OBJ06_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ06_VAR_view, view) {
    0: layout_CAT02_OBJ06_VAR01;
    1: layout_CAT02_OBJ06_VAR02;
    2: layout_CAT02_OBJ06_VAR03;
    3: colour_CAT02_OBJ06_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ06_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ06_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ06_VAR_menu, view) {
    0:  layout_CAT02_OBJ06_VAR01_menu;
    1:  layout_CAT02_OBJ06_VAR02_menu;
    2:  layout_CAT02_OBJ06_VAR03_menu;
    3:  layout_CAT02_OBJ06_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ06) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ06);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ06_VAR;
            purchase:               switch_CAT02_OBJ06_VAR_menu;
            // additional_text:        switch_CAT02_OBJ06_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ07
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ07_VAR01_menu,"gfx/CAT02_OBJ07.png") { template_3x1_menu(0,0,0,256) }
spriteset(spriteset_CAT02_OBJ07_VAR01_T1,  "gfx/CAT02_OBJ07.png") { template_3x1_T1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ07_VAR01_T2,  "gfx/CAT02_OBJ07.png") { template_3x1_T2  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ07_VAR01_T3,  "gfx/CAT02_OBJ07.png") { template_3x1_T3  (0,0,0,256) }

spriteset(spriteset_CAT02_OBJ07_VAR03_menu,"gfx/CAT02_OBJ07.png") { template_3x1_menu(0,266,0,256) }
spriteset(spriteset_CAT02_OBJ07_VAR03_T1,  "gfx/CAT02_OBJ07.png") { template_3x1_T1  (0,266,0,256) }
spriteset(spriteset_CAT02_OBJ07_VAR03_T2,  "gfx/CAT02_OBJ07.png") { template_3x1_T2  (0,266,0,256) }
spriteset(spriteset_CAT02_OBJ07_VAR03_T3,  "gfx/CAT02_OBJ07.png") { template_3x1_T3  (0,266,0,256) }


spritelayout layout_CAT02_OBJ07_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ07_VAR01_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ07_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ07_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ07_VAR01_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ07_VAR01_T3;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ07_VAR01_EMPTY {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ07_VAR03_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ07_VAR03_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ07_VAR03_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ07_VAR03_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ07_VAR03_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ07_VAR03_T3;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ07_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ07_VAR01_menu; }
}
spritelayout layout_CAT02_OBJ07_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    // building { sprite: spriteset_CAT02_OBJ07_VAR02; }
}
spritelayout layout_CAT02_OBJ07_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ07_VAR03_menu; }
}
spritelayout layout_CAT02_OBJ07_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    // building { sprite: spriteset_CAT02_OBJ07_VAR04; }
}

// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ07_VAR01, relative_pos) {
    relative_coord(2, 0): layout_CAT02_OBJ07_VAR01_T1;
    relative_coord(1, 0): layout_CAT02_OBJ07_VAR01_T2;
    relative_coord(0, 0): layout_CAT02_OBJ07_VAR01_T3;
    layout_CAT02_OBJ07_VAR01_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ07_VAR02, relative_pos) {
    relative_coord(0, 2): layout_CAT02_OBJ07_VAR01_EMPTY;
    relative_coord(0, 1): layout_CAT02_OBJ07_VAR01_EMPTY;
    relative_coord(0, 0): layout_CAT02_OBJ07_VAR01_EMPTY;
    // layout_CAT02_OBJ07_VAR02_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ07_VAR03, relative_pos) {
    relative_coord(2, 0): layout_CAT02_OBJ07_VAR03_T1;
    relative_coord(1, 0): layout_CAT02_OBJ07_VAR03_T2;
    relative_coord(0, 0): layout_CAT02_OBJ07_VAR03_T3;
    layout_CAT02_OBJ07_VAR03_T1;
}
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ07_VAR04, relative_pos) {
    relative_coord(0, 2): layout_CAT02_OBJ07_VAR01_EMPTY;
    relative_coord(0, 1): layout_CAT02_OBJ07_VAR01_EMPTY;
    relative_coord(0, 0): layout_CAT02_OBJ07_VAR01_EMPTY;
    // layout_CAT02_OBJ07_VAR04_T1;
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ07_VAR_view, view) {
    0: switch_CAT02_OBJ07_VAR01;
    1: switch_CAT02_OBJ07_VAR02;
    2: switch_CAT02_OBJ07_VAR03;
    3: switch_CAT02_OBJ07_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ07_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ07_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ07_VAR_menu, view) {
    0:  layout_CAT02_OBJ07_VAR01_menu;
    1:  layout_CAT02_OBJ07_VAR02_menu;
    2:  layout_CAT02_OBJ07_VAR03_menu;
    3:  layout_CAT02_OBJ07_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ07) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ07);
            climates_available:     ALL_CLIMATES;
            size:                   [3,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ07_VAR;
            purchase:               switch_CAT02_OBJ07_VAR_menu;
            // additional_text:        switch_CAT02_OBJ07_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ08
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ08_VAR01_menu,"gfx/airport_large.png") { template_6x6_menu_low(0,0,0,256) }
spriteset(spriteset_CAT02_OBJ08_VAR01_T1,  "gfx/airport_large.png") { template_6x6_T1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ08_VAR01_T2,  "gfx/airport_large.png") { template_6x6_T2  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ08_VAR01_T3,  "gfx/airport_large.png") { template_6x6_T3  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ08_VAR01_T4,  "gfx/airport_large.png") { template_6x6_T4  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ08_VAR01_T5,  "gfx/airport_large.png") { template_6x6_T5  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ08_VAR01_T6,  "gfx/airport_large.png") { template_6x6_T6  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ08_VAR01_T7,  "gfx/airport_large.png") { template_6x6_T7  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ08_VAR01_T8,  "gfx/airport_large.png") { template_6x6_T8  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ08_VAR01_T9,  "gfx/airport_large.png") { template_6x6_T9  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ08_VAR01_T10, "gfx/airport_large.png") { template_6x6_T10 (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ08_VAR01_T11, "gfx/airport_large.png") { template_6x6_T11 (0,0,0,256) }

spritelayout layout_CAT02_OBJ08_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ08_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ08_VAR01_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_T3;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
    childsprite { sprite: 3123;
                  xoffset: 7;
                  yoffset: 38;
                  recolour_mode: RECOLOUR_REMAP;
                  palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
    // childsprite { sprite: 3123;
    //               xoffset: 19;
    //               yoffset: 32;
    //               recolour_mode: RECOLOUR_REMAP;
    //               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT02_OBJ08_VAR01_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_T4;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_USE_DEFAULT; }
}
spritelayout layout_CAT02_OBJ08_VAR01_T5 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_T5;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_USE_DEFAULT; }
    childsprite { sprite: 3121;
                  xoffset: 27;
                  yoffset: 190;
                  recolour_mode: RECOLOUR_REMAP;
                  palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT02_OBJ08_VAR01_T6 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_T6;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ08_VAR01_T7 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_T7;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ08_VAR01_T8 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_T8;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
    childsprite { sprite: 2601;
                  xoffset: 63;
                  yoffset: 77; }
}
spritelayout layout_CAT02_OBJ08_VAR01_T9 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_T9;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
    childsprite { sprite: 2601;
                  xoffset: 31;
                  yoffset: 60; }
}
spritelayout layout_CAT02_OBJ08_VAR01_T10 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_T10;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ08_VAR01_T11 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_T11;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ08_VAR01_EMPTY {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: GROUNDSPRITE_CLEARED;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ08_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ08_VAR01_menu; }
}
// spritelayout layout_CAT02_OBJ08_VAR02_menu {
//     ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
//     building { sprite: spriteset_CAT02_OBJ08_VAR02_menu; }
// }
// spritelayout layout_CAT02_OBJ08_VAR03_menu {
//     ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
//     building { sprite: spriteset_CAT02_OBJ08_VAR03_menu; }
// }
// spritelayout layout_CAT02_OBJ08_VAR04_menu {
//     ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
//     building { sprite: spriteset_CAT02_OBJ08_VAR04_menu; }
// }

// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ08_VAR01, relative_pos) {
    relative_coord(5, 0): layout_CAT02_OBJ08_VAR01_T1;
    relative_coord(5, 1): layout_CAT02_OBJ08_VAR01_T2;
    relative_coord(5, 2): layout_CAT02_OBJ08_VAR01_T3;
    relative_coord(5, 3): layout_CAT02_OBJ08_VAR01_T4;
    relative_coord(5, 4): layout_CAT02_OBJ08_VAR01_T5;
    relative_coord(5, 5): layout_CAT02_OBJ08_VAR01_T6;
    relative_coord(4, 5): layout_CAT02_OBJ08_VAR01_T7;
    relative_coord(3, 5): layout_CAT02_OBJ08_VAR01_T8;
    relative_coord(2, 5): layout_CAT02_OBJ08_VAR01_T9;
    relative_coord(1, 5): layout_CAT02_OBJ08_VAR01_T10;
    relative_coord(0, 5): layout_CAT02_OBJ08_VAR01_T11;

    relative_coord(4, 0): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(4, 1): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(4, 2): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(4, 3): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(4, 4): layout_CAT02_OBJ08_VAR01_EMPTY;

    relative_coord(3, 0): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(3, 1): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(3, 2): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(3, 3): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(3, 4): layout_CAT02_OBJ08_VAR01_EMPTY;

    relative_coord(2, 0): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(2, 1): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(2, 2): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(2, 3): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(2, 4): layout_CAT02_OBJ08_VAR01_EMPTY;

    relative_coord(1, 0): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(1, 1): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(1, 2): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(1, 3): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(1, 4): layout_CAT02_OBJ08_VAR01_EMPTY;

    relative_coord(0, 0): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(0, 1): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(0, 2): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(0, 3): layout_CAT02_OBJ08_VAR01_EMPTY;
    relative_coord(0, 4): layout_CAT02_OBJ08_VAR01_EMPTY;
    layout_CAT02_OBJ08_VAR01_T1;
}

switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT02_OBJ08_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ08_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT02_OBJ08_VAR01; }

random_switch (FEAT_OBJECTS, SELF, colour_CAT02_OBJ08_VAR01) {
      1: CAT02_OBJ08_VAR01_1;
      1: CAT02_OBJ08_VAR01_2;
      1: CAT02_OBJ08_VAR01_3;
      1: CAT02_OBJ08_VAR01_4;
      1: CAT02_OBJ08_VAR01_5;
      1: CAT02_OBJ08_VAR01_6;
      1: CAT02_OBJ08_VAR01_7;
      1: CAT02_OBJ08_VAR01_8;
      1: CAT02_OBJ08_VAR01_9;
      1: CAT02_OBJ08_VAR01_10;
      1: CAT02_OBJ08_VAR01_11;
      1: CAT02_OBJ08_VAR01_12;
      1: CAT02_OBJ08_VAR01_13;
      1: CAT02_OBJ08_VAR01_14;
      1: CAT02_OBJ08_VAR01_15;
      1: CAT02_OBJ08_VAR01_16;  }

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ08_VAR_view, view) {
    0: colour_CAT02_OBJ08_VAR01;
    // 1: layout_CAT02_OBJ08_VAR02;
    // 2: layout_CAT02_OBJ08_VAR03;
    // 3: layout_CAT02_OBJ08_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ08_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ08_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ08_VAR_menu, view) {
    0:  layout_CAT02_OBJ08_VAR01_menu;
    // 1:  layout_CAT02_OBJ08_VAR02_menu;
    // 2:  layout_CAT02_OBJ08_VAR03_menu;
    // 3:  layout_CAT02_OBJ08_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ08_TXT, view) {
    0:  string(STR_MULTI_COLOURED);
//     1:  string(STR_NO_SNOW);
//     2:  string(STR_NO_SNOW);
//     3:  string(STR_NO_SNOW);
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ08) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ08);
            climates_available:     ALL_CLIMATES;
            size:                   [6,6];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              1;
        }
        graphics {
            default:                switch_CAT02_OBJ08_VAR;
            purchase:               switch_CAT02_OBJ08_VAR_menu;
            additional_text:        switch_CAT02_OBJ08_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT02_OBJ09
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ09_VAR01,     "gfx/CAT02_OBJ09.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ09_VAR02,     "gfx/CAT02_OBJ09.png") { template_1x1  (74,0,0,256) }
spriteset(spriteset_CAT02_OBJ09_VAR03,     "gfx/CAT02_OBJ09.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT02_OBJ09_VAR04,     "gfx/CAT02_OBJ09.png") { template_1x1  (74,266,0,256) }

spritelayout layout_CAT02_OBJ09_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ09_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ09_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ09_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ09_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ09_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ09_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ09_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ09_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ09_VAR01; }
}
spritelayout layout_CAT02_OBJ09_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ09_VAR02; }
}
spritelayout layout_CAT02_OBJ09_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ09_VAR03; }
}
spritelayout layout_CAT02_OBJ09_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ09_VAR04; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ09_VAR_view, view) {
    0: layout_CAT02_OBJ09_VAR01;
    1: layout_CAT02_OBJ09_VAR02;
    2: layout_CAT02_OBJ09_VAR03;
    3: layout_CAT02_OBJ09_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ09_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ09_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ09_VAR_menu, view) {
    0:  layout_CAT02_OBJ09_VAR01_menu;
    1:  layout_CAT02_OBJ09_VAR02_menu;
    2:  layout_CAT02_OBJ09_VAR03_menu;
    3:  layout_CAT02_OBJ09_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ09) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ09);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ09_VAR;
            purchase:               switch_CAT02_OBJ09_VAR_menu;
            // additional_text:        switch_CAT02_OBJ09_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ10
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ10_VAR01,     "gfx/CAT02_OBJ10.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ10_VAR02,     "gfx/CAT02_OBJ10.png") { template_1x1  (74,0,0,256) }
spriteset(spriteset_CAT02_OBJ10_VAR03,     "gfx/CAT02_OBJ10.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT02_OBJ10_VAR04,     "gfx/CAT02_OBJ10.png") { template_68pix(72,266,0,256) }

spritelayout layout_CAT02_OBJ10_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ10_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ10_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ10_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ10_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ10_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ10_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ10_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ10_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ10_VAR01; }
}
spritelayout layout_CAT02_OBJ10_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ10_VAR02; }
}
spritelayout layout_CAT02_OBJ10_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ10_VAR03; }
}
spritelayout layout_CAT02_OBJ10_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ10_VAR04; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ10_VAR_view, view) {
    0: layout_CAT02_OBJ10_VAR01;
    1: layout_CAT02_OBJ10_VAR02;
    2: layout_CAT02_OBJ10_VAR03;
    3: layout_CAT02_OBJ10_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ10_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ10_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ10_VAR_menu, view) {
    0:  layout_CAT02_OBJ10_VAR01_menu;
    1:  layout_CAT02_OBJ10_VAR02_menu;
    2:  layout_CAT02_OBJ10_VAR03_menu;
    3:  layout_CAT02_OBJ10_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ10) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ10);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ10_VAR;
            purchase:               switch_CAT02_OBJ10_VAR_menu;
            // additional_text:        switch_CAT02_OBJ10_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ11
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ11_VAR01,     "gfx/CAT02_OBJ11.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ11_VAR02,     "gfx/CAT02_OBJ11.png") { template_1x1  (74,0,0,256) }
spriteset(spriteset_CAT02_OBJ11_VAR03,     "gfx/CAT02_OBJ11.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT02_OBJ11_VAR04,     "gfx/CAT02_OBJ11.png") { template_68pix(72,266,0,256) }

spritelayout layout_CAT02_OBJ11_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ11_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ11_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ11_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ11_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ11_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ11_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ11_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ11_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ11_VAR01; }
}
spritelayout layout_CAT02_OBJ11_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ11_VAR02; }
}
spritelayout layout_CAT02_OBJ11_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ11_VAR03; }
}
spritelayout layout_CAT02_OBJ11_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ11_VAR04; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ11_VAR_view, view) {
    0: layout_CAT02_OBJ11_VAR01;
    1: layout_CAT02_OBJ11_VAR02;
    2: layout_CAT02_OBJ11_VAR03;
    3: layout_CAT02_OBJ11_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ11_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ11_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ11_VAR_menu, view) {
    0:  layout_CAT02_OBJ11_VAR01_menu;
    1:  layout_CAT02_OBJ11_VAR02_menu;
    2:  layout_CAT02_OBJ11_VAR03_menu;
    3:  layout_CAT02_OBJ11_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ11) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ11);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ11_VAR;
            purchase:               switch_CAT02_OBJ11_VAR_menu;
            // additional_text:        switch_CAT02_OBJ11_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ12
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ12_VAR01,     "gfx/CAT02_OBJ12.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ12_VAR02,     "gfx/CAT02_OBJ12.png") { template_1x1  (74,0,0,256) }
spriteset(spriteset_CAT02_OBJ12_VAR03,     "gfx/CAT02_OBJ12.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT02_OBJ12_VAR04,     "gfx/CAT02_OBJ12.png") { template_1x1  (74,266,0,256) }

spritelayout layout_CAT02_OBJ12_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ12_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ12_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ12_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ12_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ12_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ12_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ12_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ12_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ12_VAR01; }
}
spritelayout layout_CAT02_OBJ12_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ12_VAR02; }
}
spritelayout layout_CAT02_OBJ12_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ12_VAR03; }
}
spritelayout layout_CAT02_OBJ12_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ12_VAR04; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ12_VAR_view, view) {
    0: layout_CAT02_OBJ12_VAR01;
    1: layout_CAT02_OBJ12_VAR02;
    2: layout_CAT02_OBJ12_VAR03;
    3: layout_CAT02_OBJ12_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ12_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ12_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ12_VAR_menu, view) {
    0:  layout_CAT02_OBJ12_VAR01_menu;
    1:  layout_CAT02_OBJ12_VAR02_menu;
    2:  layout_CAT02_OBJ12_VAR03_menu;
    3:  layout_CAT02_OBJ12_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ12) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ12);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ12_VAR;
            purchase:               switch_CAT02_OBJ12_VAR_menu;
            // additional_text:        switch_CAT02_OBJ12_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ13
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ13_VAR01,     "gfx/CAT02_OBJ13.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ13_VAR02,     "gfx/CAT02_OBJ13.png") { template_1x1  (74,0,0,256) }
spriteset(spriteset_CAT02_OBJ13_VAR03,     "gfx/CAT02_OBJ13.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT02_OBJ13_VAR04,     "gfx/CAT02_OBJ13.png") { template_1x1  (74,266,0,256) }

spritelayout layout_CAT02_OBJ13_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ13_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ13_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ13_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ13_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ13_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ13_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ13_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ13_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ13_VAR01; }
}
spritelayout layout_CAT02_OBJ13_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ13_VAR02; }
}
spritelayout layout_CAT02_OBJ13_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ13_VAR03; }
}
spritelayout layout_CAT02_OBJ13_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ13_VAR04; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ13_VAR_view, view) {
    0: layout_CAT02_OBJ13_VAR01;
    1: layout_CAT02_OBJ13_VAR02;
    2: layout_CAT02_OBJ13_VAR03;
    3: layout_CAT02_OBJ13_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ13_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ13_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ13_VAR_menu, view) {
    0:  layout_CAT02_OBJ13_VAR01_menu;
    1:  layout_CAT02_OBJ13_VAR02_menu;
    2:  layout_CAT02_OBJ13_VAR03_menu;
    3:  layout_CAT02_OBJ13_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ13) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ13);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ13_VAR;
            purchase:               switch_CAT02_OBJ13_VAR_menu;
            // additional_text:        switch_CAT02_OBJ13_TXT;
        }
    }
}   










/////////////////////////////////////////////////////////////////////
// CAT02_OBJ14
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ14_VAR01,     "gfx/CAT02_OBJ14.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ14_VAR02,     "gfx/CAT02_OBJ14.png") { template_1x1  (74,0,0,256) }
spriteset(spriteset_CAT02_OBJ14_VAR03,     "gfx/CAT02_OBJ14.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT02_OBJ14_VAR04,     "gfx/CAT02_OBJ14.png") { template_1x1  (74,266,0,256) }

spritelayout layout_CAT02_OBJ14_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ14_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ14_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ14_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ14_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ14_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ14_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ14_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ14_VAR01_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT02_OBJ14_VAR01; }
}
spritelayout layout_CAT02_OBJ14_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT02_OBJ14_VAR02; }
}
spritelayout layout_CAT02_OBJ14_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT02_OBJ14_VAR03; }
}
spritelayout layout_CAT02_OBJ14_VAR04_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT02_OBJ14_VAR04; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ14_VAR_view, view) {
    0: layout_CAT02_OBJ14_VAR01;
    1: layout_CAT02_OBJ14_VAR02;
    2: layout_CAT02_OBJ14_VAR03;
    3: layout_CAT02_OBJ14_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ14_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ14_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ14_VAR_menu, view) {
    0:  layout_CAT02_OBJ14_VAR01_menu;
    1:  layout_CAT02_OBJ14_VAR02_menu;
    2:  layout_CAT02_OBJ14_VAR03_menu;
    3:  layout_CAT02_OBJ14_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ14) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ14);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ14_VAR;
            purchase:               switch_CAT02_OBJ14_VAR_menu;
            // additional_text:        switch_CAT02_OBJ14_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ15
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ15_VAR01,     "gfx/CAT02_OBJ15.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ15_VAR02,     "gfx/CAT02_OBJ15.png") { template_1x1  (74,0,0,256) }
spriteset(spriteset_CAT02_OBJ15_VAR03,     "gfx/CAT02_OBJ15.png") { template_1x1  (0,266,0,256) }
spriteset(spriteset_CAT02_OBJ15_VAR04,     "gfx/CAT02_OBJ15.png") { template_1x1  (74,266,0,256) }

spritelayout layout_CAT02_OBJ15_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ15_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ15_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ15_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ15_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ15_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ15_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ15_VAR04;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ15_VAR01_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT02_OBJ15_VAR01; }
}
spritelayout layout_CAT02_OBJ15_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT02_OBJ15_VAR02; }
}
spritelayout layout_CAT02_OBJ15_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT02_OBJ15_VAR03; }
}
spritelayout layout_CAT02_OBJ15_VAR04_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT02_OBJ15_VAR04; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ15_VAR_view, view) {
    0: layout_CAT02_OBJ15_VAR01;
    1: layout_CAT02_OBJ15_VAR02;
    2: layout_CAT02_OBJ15_VAR03;
    3: layout_CAT02_OBJ15_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ15_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ15_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ15_VAR_menu, view) {
    0:  layout_CAT02_OBJ15_VAR01_menu;
    1:  layout_CAT02_OBJ15_VAR02_menu;
    2:  layout_CAT02_OBJ15_VAR03_menu;
    3:  layout_CAT02_OBJ15_VAR04_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ15) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ15);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ15_VAR;
            purchase:               switch_CAT02_OBJ15_VAR_menu;
            // additional_text:        switch_CAT02_OBJ15_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ16
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ16_VAR01_menu,"gfx/CAT02_OBJ16.png") { template_4x3_menu_high(0,0,0,256) }
spriteset(spriteset_CAT02_OBJ16_VAR01_T1,  "gfx/CAT02_OBJ16.png") { template_4x3_T1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ16_VAR01_T2,  "gfx/CAT02_OBJ16.png") { template_4x3_T2  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ16_VAR01_T3,  "gfx/CAT02_OBJ16.png") { template_4x3_T3  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ16_VAR01_T4,  "gfx/CAT02_OBJ16.png") { template_4x3_T4  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ16_VAR01_T5,  "gfx/CAT02_OBJ16.png") { template_4x3_T5  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ16_VAR01_T6,  "gfx/CAT02_OBJ16.png") { template_4x3_T6  (0,0,0,256) }

spritelayout layout_CAT02_OBJ16_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ16_VAR01_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ16_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ16_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ16_VAR01_T3 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ16_VAR01_T3;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ16_VAR01_T4 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ16_VAR01_T4;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ16_VAR01_T5 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ16_VAR01_T5;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ16_VAR01_T6 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ16_VAR01_T6;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}
spritelayout layout_CAT02_OBJ16_VAR01_EMPTY {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: GROUNDSPRITE_CLEARED;
               xextent: 16;
               yextent: 16;
               zextent: 96; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ16_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ16_VAR01_menu; }
}
// spritelayout layout_CAT02_OBJ16_VAR02_menu {
//     ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
//     building { sprite: spriteset_CAT02_OBJ16_VAR02_menu; }
// }
// spritelayout layout_CAT02_OBJ16_VAR03_menu {
//     ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
//     building { sprite: spriteset_CAT02_OBJ16_VAR03_menu; }
// }
// spritelayout layout_CAT02_OBJ16_VAR04_menu {
//     ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
//     building { sprite: spriteset_CAT02_OBJ16_VAR04_menu; }
// }

// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ16_VAR01, relative_pos) {
    relative_coord(3, 0): layout_CAT02_OBJ16_VAR01_T1;
    relative_coord(3, 1): layout_CAT02_OBJ16_VAR01_T2;
    relative_coord(3, 2): layout_CAT02_OBJ16_VAR01_T3;
    relative_coord(2, 2): layout_CAT02_OBJ16_VAR01_T4;
    relative_coord(1, 2): layout_CAT02_OBJ16_VAR01_T5;
    relative_coord(0, 2): layout_CAT02_OBJ16_VAR01_T6;
    
    relative_coord(2, 0): layout_CAT02_OBJ16_VAR01_EMPTY;
    relative_coord(2, 1): layout_CAT02_OBJ16_VAR01_EMPTY;
    relative_coord(1, 0): layout_CAT02_OBJ16_VAR01_EMPTY;
    relative_coord(1, 1): layout_CAT02_OBJ16_VAR01_EMPTY;
    relative_coord(0, 0): layout_CAT02_OBJ16_VAR01_EMPTY;
    relative_coord(0, 1): layout_CAT02_OBJ16_VAR01_EMPTY;
    layout_CAT02_OBJ16_VAR01_T1;
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ16_VAR_view, view) {
    0: switch_CAT02_OBJ16_VAR01;
    // 1: layout_CAT02_OBJ16_VAR02;
    // 2: layout_CAT02_OBJ16_VAR03;
    // 3: layout_CAT02_OBJ16_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ16_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ16_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ16_VAR_menu, view) {
    0:  layout_CAT02_OBJ16_VAR01_menu;
    // 1:  layout_CAT02_OBJ16_VAR02_menu;
    // 2:  layout_CAT02_OBJ16_VAR03_menu;
    // 3:  layout_CAT02_OBJ16_VAR04_menu;
}

if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ16) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ16);
            climates_available:     ALL_CLIMATES;
            size:                   [4,3];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              1;
        }
        graphics {
            default:                switch_CAT02_OBJ16_VAR;
            purchase:               switch_CAT02_OBJ16_VAR_menu;
            // additional_text:        switch_CAT02_OBJ16_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ17
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ17_VAR01_menu,"gfx/CAT02_OBJ17.png") { template_1x2_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT02_OBJ17_VAR01_T1,  "gfx/CAT02_OBJ17.png") { template_1x2_T1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ17_VAR01_T2,  "gfx/CAT02_OBJ17.png") { template_1x2_T2  (0,0,0,256) }


spritelayout layout_CAT02_OBJ17_VAR01_T1 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ17_VAR01_T1;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT02_OBJ17_VAR01_T2 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ17_VAR01_T2;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ17_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ17_VAR01_menu; }
}

// select correct sprites for position of the tiles for the four views
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ17_VAR01, relative_pos) {
    relative_coord(0, 0): layout_CAT02_OBJ17_VAR01_T1;
    relative_coord(0, 1): layout_CAT02_OBJ17_VAR01_T2;
    layout_CAT02_OBJ17_VAR01_T1;
}

switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT02_OBJ17_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ17_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT02_OBJ17_VAR01; }

random_switch (FEAT_OBJECTS, SELF, colour_CAT02_OBJ17_VAR01) {
      1: CAT02_OBJ17_VAR01_1;
      1: CAT02_OBJ17_VAR01_2;
      1: CAT02_OBJ17_VAR01_3;
      1: CAT02_OBJ17_VAR01_4;
      1: CAT02_OBJ17_VAR01_5;
      1: CAT02_OBJ17_VAR01_6;
      1: CAT02_OBJ17_VAR01_7;
      1: CAT02_OBJ17_VAR01_8;
      1: CAT02_OBJ17_VAR01_9;
      1: CAT02_OBJ17_VAR01_10;
      1: CAT02_OBJ17_VAR01_11;
      1: CAT02_OBJ17_VAR01_12;
      1: CAT02_OBJ17_VAR01_13;
      1: CAT02_OBJ17_VAR01_14;
      1: CAT02_OBJ17_VAR01_15;
      1: CAT02_OBJ17_VAR01_16;  }

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ17_VAR_view, view) {
    0: colour_CAT02_OBJ17_VAR01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ17_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ17_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ17_VAR_menu, view) {
    0:  layout_CAT02_OBJ17_VAR01_menu;
}


if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ17) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ17);
            climates_available:     ALL_CLIMATES;
            size:                   [1,2];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              1;
        }
        graphics {
            default:                switch_CAT02_OBJ17_VAR;
            purchase:               switch_CAT02_OBJ17_VAR_menu;
            // additional_text:        switch_CAT02_OBJ17_TXT;
        }
    }
}











/////////////////////////////////////////////////////////////////////
// CAT02_OBJ18
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT02_OBJ18_VAR01,     "gfx/CAT02_OBJ18.png") { template_1x1  (0,0,0,256) }
spriteset(spriteset_CAT02_OBJ18_VAR02,     "gfx/CAT02_OBJ18.png") { template_1x1  (74,0,0,256) }
spriteset(spriteset_CAT02_OBJ18_VAR03,     "gfx/CAT02_OBJ18.png") { template_76pix(0,266,0,256) }

spritelayout layout_CAT02_OBJ18_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ18_VAR01;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
/////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ18_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ18_VAR02;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ18_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT02_OBJ18_VAR03;
               xextent: 16;
               yextent: 16;
               zextent: 96;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}

// /////////////////////////////////////////////////////////
spritelayout layout_CAT02_OBJ18_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    // building { sprite: spriteset_CAT02_OBJ18_VAR03;
    //            xextent: 16;
    //            yextent: 16;
    //            zextent: 96; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT02_OBJ18_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ18_VAR01;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_YELLOW; }
}
spritelayout layout_CAT02_OBJ18_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ18_VAR02;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN; }
}
spritelayout layout_CAT02_OBJ18_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT02_OBJ18_VAR03;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_LIGHT_BLUE;
               yoffset: 4; }
}
spritelayout layout_CAT02_OBJ18_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}

switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT02_OBJ18_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT02_OBJ18_VAR01; }

random_switch (FEAT_OBJECTS, SELF, colour_CAT02_OBJ18_VAR01) {
      1: CAT02_OBJ18_VAR01_1;
      1: CAT02_OBJ18_VAR01_2;
      1: CAT02_OBJ18_VAR01_3;
      1: CAT02_OBJ18_VAR01_4;
      1: CAT02_OBJ18_VAR01_5;
      1: CAT02_OBJ18_VAR01_6;
      1: CAT02_OBJ18_VAR01_7;
      1: CAT02_OBJ18_VAR01_8;
      1: CAT02_OBJ18_VAR01_9;
      1: CAT02_OBJ18_VAR01_10;
      1: CAT02_OBJ18_VAR01_11;
      1: CAT02_OBJ18_VAR01_12;
      1: CAT02_OBJ18_VAR01_13;
      1: CAT02_OBJ18_VAR01_14;
      1: CAT02_OBJ18_VAR01_15;
      1: CAT02_OBJ18_VAR01_16;  }

switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_1, [STORE_TEMP(775, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_2, [STORE_TEMP(776, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_3, [STORE_TEMP(777, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_4, [STORE_TEMP(778, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_5, [STORE_TEMP(779, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_6, [STORE_TEMP(780, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_7, [STORE_TEMP(781, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_8, [STORE_TEMP(782, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_9, [STORE_TEMP(783, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_10,[STORE_TEMP(784, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_11,[STORE_TEMP(785, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_12,[STORE_TEMP(786, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_13,[STORE_TEMP(787, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_14,[STORE_TEMP(788, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_15,[STORE_TEMP(789, 3)]) { layout_CAT02_OBJ18_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR02_16,[STORE_TEMP(790, 3)]) { layout_CAT02_OBJ18_VAR02; }

random_switch (FEAT_OBJECTS, SELF, colour_CAT02_OBJ18_VAR02) {
      1: CAT02_OBJ18_VAR02_1;
      1: CAT02_OBJ18_VAR02_2;
      1: CAT02_OBJ18_VAR02_3;
      1: CAT02_OBJ18_VAR02_4;
      1: CAT02_OBJ18_VAR02_5;
      1: CAT02_OBJ18_VAR02_6;
      1: CAT02_OBJ18_VAR02_7;
      1: CAT02_OBJ18_VAR02_8;
      1: CAT02_OBJ18_VAR02_9;
      1: CAT02_OBJ18_VAR02_10;
      1: CAT02_OBJ18_VAR02_11;
      1: CAT02_OBJ18_VAR02_12;
      1: CAT02_OBJ18_VAR02_13;
      1: CAT02_OBJ18_VAR02_14;
      1: CAT02_OBJ18_VAR02_15;
      1: CAT02_OBJ18_VAR02_16;  }

switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT02_OBJ18_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT02_OBJ18_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT02_OBJ18_VAR03; }

random_switch (FEAT_OBJECTS, SELF, colour_CAT02_OBJ18_VAR03) {
      1: CAT02_OBJ18_VAR03_1;
      1: CAT02_OBJ18_VAR03_2;
      1: CAT02_OBJ18_VAR03_3;
      1: CAT02_OBJ18_VAR03_4;
      1: CAT02_OBJ18_VAR03_5;
      1: CAT02_OBJ18_VAR03_6;
      1: CAT02_OBJ18_VAR03_7;
      1: CAT02_OBJ18_VAR03_8;
      1: CAT02_OBJ18_VAR03_9;
      1: CAT02_OBJ18_VAR03_10;
      1: CAT02_OBJ18_VAR03_11;
      1: CAT02_OBJ18_VAR03_12;
      1: CAT02_OBJ18_VAR03_13;
      1: CAT02_OBJ18_VAR03_14;
      1: CAT02_OBJ18_VAR03_15;
      1: CAT02_OBJ18_VAR03_16;  }

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ18_VAR_view, view) {
    0: colour_CAT02_OBJ18_VAR01;
    1: colour_CAT02_OBJ18_VAR02;
    2: colour_CAT02_OBJ18_VAR03;
    3: layout_CAT02_OBJ18_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ18_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT02_OBJ18_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ18_VAR_menu, view) {
    0:  layout_CAT02_OBJ18_VAR01_menu;
    1:  layout_CAT02_OBJ18_VAR02_menu;
    2:  layout_CAT02_OBJ18_VAR03_menu;
    3:  layout_CAT02_OBJ18_VAR04_menu;
}



switch (FEAT_OBJECTS, SELF, switch_CAT02_OBJ18_TXT, view) {
    0:  string(STR_MULTI_COLOURED);
    1:  string(STR_MULTI_COLOURED);
    2:  string(STR_MULTI_COLOURED);
//     3:  string(STR_NO_SNOW);
}

if (param_no_airport == 0) {
    item (FEAT_OBJECTS, CAT02_OBJ18) {
        property {
            class:                  "TTRA";
            classname:              string(STR_CAT02);
            name:                   string(STR_CAT02_OBJ18);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT02_OBJ18_VAR;
            purchase:               switch_CAT02_OBJ18_VAR_menu;
            additional_text:        switch_CAT02_OBJ18_TXT;
        }
    }
}





///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////




/////////////////////////////////////////////////////////////////////
// CAT03_OBJ01
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ01_VAR01_menu, "gfx/CAT03_1.png") { template_roads_menu(0,0) }
spriteset(spriteset_CAT03_OBJ01_VAR02_menu, "gfx/CAT03_1.png") { template_roads_menu(74,0) }
spriteset(spriteset_CAT03_OBJ01_VAR03_menu, "gfx/CAT03_1.png") { template_roads_menu(0,266) }
spriteset(spriteset_CAT03_OBJ01_VAR01, "gfx/CAT03_1.png") { template_1x1(0,0,0,256) }
spriteset(spriteset_CAT03_OBJ01_VAR02, "gfx/CAT03_1.png") { template_1x1(74,0,0,256) }
spriteset(spriteset_CAT03_OBJ01_VAR03, "gfx/CAT03_1.png") { template_1x1(0,266,0,256) }
// spriteset(spriteset_CAT03_OBJ01_VAR04,     "gfx/CAT03_1.png") { template_1x1(148,266,0,256) }

spritelayout layout_CAT03_OBJ01_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ01_VAR01; }
}       
spritelayout layout_CAT03_OBJ01_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ01_VAR02; }
}
spritelayout layout_CAT03_OBJ01_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ01_VAR03; }
}
spritelayout layout_CAT03_OBJ01_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ01_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ01_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ01_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ01_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ01_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ01_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ01_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ01_VAR_view, view) {
    0: layout_CAT03_OBJ01_VAR01;
    1: layout_CAT03_OBJ01_VAR02;
    2: layout_CAT03_OBJ01_VAR03;
    3: layout_CAT03_OBJ01_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ01_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ01_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ01_VAR_menu, view) {
    0:  layout_CAT03_OBJ01_VAR01_menu;
    1:  layout_CAT03_OBJ01_VAR02_menu;
    2:  layout_CAT03_OBJ01_VAR03_menu;
    3:  layout_CAT03_OBJ01_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ01) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ01);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ01_VAR;
            purchase:               switch_CAT03_OBJ01_VAR_menu;
            // additional_text:        switch_CAT03_OBJ01_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ02
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ02_VAR01_menu, "gfx/CAT03_1.png") { template_roads_menu(148,0) }
spriteset(spriteset_CAT03_OBJ02_VAR02_menu, "gfx/CAT03_1.png") { template_roads_menu(222,0) }
spriteset(spriteset_CAT03_OBJ02_VAR03_menu, "gfx/CAT03_1.png") { template_roads_menu(148,266) }
spriteset(spriteset_CAT03_OBJ02_VAR04_menu, "gfx/CAT03_1.png") { template_roads_menu(222,266) }
spriteset(spriteset_CAT03_OBJ02_VAR01, "gfx/CAT03_1.png") { template_1x1(148,0,0,256) }
spriteset(spriteset_CAT03_OBJ02_VAR02, "gfx/CAT03_1.png") { template_1x1(222,0,0,256) }
spriteset(spriteset_CAT03_OBJ02_VAR03, "gfx/CAT03_1.png") { template_1x1(148,266,0,256) }
spriteset(spriteset_CAT03_OBJ02_VAR04, "gfx/CAT03_1.png") { template_1x1(222,266,0,256) }

spritelayout layout_CAT03_OBJ02_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ02_VAR01; }
}       
spritelayout layout_CAT03_OBJ02_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ02_VAR02; }
}
spritelayout layout_CAT03_OBJ02_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ02_VAR03; }
}
spritelayout layout_CAT03_OBJ02_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ02_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ02_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ02_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ02_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ02_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ02_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ02_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ02_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ02_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ02_VAR_view, view) {
    0: layout_CAT03_OBJ02_VAR01;
    1: layout_CAT03_OBJ02_VAR02;
    2: layout_CAT03_OBJ02_VAR03;
    3: layout_CAT03_OBJ02_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ02_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ02_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ02_VAR_menu, view) {
    0:  layout_CAT03_OBJ02_VAR01_menu;
    1:  layout_CAT03_OBJ02_VAR02_menu;
    2:  layout_CAT03_OBJ02_VAR03_menu;
    3:  layout_CAT03_OBJ02_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ02) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ02);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ02_VAR;
            purchase:               switch_CAT03_OBJ02_VAR_menu;
            // additional_text:        switch_CAT03_OBJ02_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ03
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ03_VAR01_menu, "gfx/CAT03_1.png") { template_roads_menu(296,0) }
spriteset(spriteset_CAT03_OBJ03_VAR02_menu, "gfx/CAT03_1.png") { template_roads_menu(370,0) }
spriteset(spriteset_CAT03_OBJ03_VAR03_menu, "gfx/CAT03_1.png") { template_roads_menu(296,266) }
spriteset(spriteset_CAT03_OBJ03_VAR04_menu, "gfx/CAT03_1.png") { template_roads_menu(370,266) }
spriteset(spriteset_CAT03_OBJ03_VAR01, "gfx/CAT03_1.png") { template_1x1(296,0,0,256) }
spriteset(spriteset_CAT03_OBJ03_VAR02, "gfx/CAT03_1.png") { template_1x1(370,0,0,256) }
spriteset(spriteset_CAT03_OBJ03_VAR03, "gfx/CAT03_1.png") { template_1x1(296,266,0,256) }
spriteset(spriteset_CAT03_OBJ03_VAR04, "gfx/CAT03_1.png") { template_1x1(370,266,0,256) }

spritelayout layout_CAT03_OBJ03_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ03_VAR01; }
}       
spritelayout layout_CAT03_OBJ03_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ03_VAR02; }
}
spritelayout layout_CAT03_OBJ03_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ03_VAR03; }
}
spritelayout layout_CAT03_OBJ03_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ03_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ03_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ03_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ03_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ03_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ03_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ03_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ03_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ03_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ03_VAR_view, view) {
    0: layout_CAT03_OBJ03_VAR01;
    1: layout_CAT03_OBJ03_VAR02;
    2: layout_CAT03_OBJ03_VAR03;
    3: layout_CAT03_OBJ03_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ03_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ03_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ03_VAR_menu, view) {
    0:  layout_CAT03_OBJ03_VAR01_menu;
    1:  layout_CAT03_OBJ03_VAR02_menu;
    2:  layout_CAT03_OBJ03_VAR03_menu;
    3:  layout_CAT03_OBJ03_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ03) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ03);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ03_VAR;
            purchase:               switch_CAT03_OBJ03_VAR_menu;
            // additional_text:        switch_CAT03_OBJ03_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ04
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ04_VAR01_menu, "gfx/CAT03_1.png") { template_roads_menu(444,0) }
spriteset(spriteset_CAT03_OBJ04_VAR01,      "gfx/CAT03_1.png") { template_nw_slope  (444,0) }

spriteset(spriteset_CAT03_OBJ04_VAR02_menu, "gfx/CAT03_1.png") { template_roads_menu(518,0) }
spriteset(spriteset_CAT03_OBJ04_VAR02,      "gfx/CAT03_1.png") { template_ne_slope  (518,0) }

spriteset(spriteset_CAT03_OBJ04_VAR03_menu, "gfx/CAT03_1.png") { template_roads_menu(444,266) }
spriteset(spriteset_CAT03_OBJ04_VAR03,      "gfx/CAT03_1.png") { template_se_slope  (444,266) }

spriteset(spriteset_CAT03_OBJ04_VAR04_menu, "gfx/CAT03_1.png") { template_roads_menu(518,266) }
spriteset(spriteset_CAT03_OBJ04_VAR04,      "gfx/CAT03_1.png") { template_sw_slope  (518,266) }

spritelayout layout_CAT03_OBJ04_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ04_VAR01; }
}       
spritelayout layout_CAT03_OBJ04_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ04_VAR02; }
}
spritelayout layout_CAT03_OBJ04_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ04_VAR03; }
}
spritelayout layout_CAT03_OBJ04_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ04_VAR04; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ04_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ04_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ04_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ04_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ04_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ04_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ04_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ04_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ04_VAR_view, view) {
    0: layout_CAT03_OBJ04_VAR01;
    1: layout_CAT03_OBJ04_VAR02;
    2: layout_CAT03_OBJ04_VAR03;
    3: layout_CAT03_OBJ04_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ04_VAR, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ04_VAR_view;
    }

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ04_VAR_menu, view) {
    0:  layout_CAT03_OBJ04_VAR01_menu;
    1:  layout_CAT03_OBJ04_VAR02_menu;
    2:  layout_CAT03_OBJ04_VAR03_menu;
    3:  layout_CAT03_OBJ04_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ04) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ04);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ04_VAR;
            purchase:               switch_CAT03_OBJ04_VAR_menu;
            // additional_text:        switch_CAT03_OBJ04_TXT;
            tile_check:             return CB_RESULT_LOCATION_ALLOW;
            autoslope:              return CB_RESULT_AUTOSLOPE;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ05
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ05_VAR01_menu, "gfx/CAT03_1.png") { template_roads_menu(592,0) }
spriteset(spriteset_CAT03_OBJ05_VAR02_menu, "gfx/CAT03_1.png") { template_roads_menu(666,0) }
spriteset(spriteset_CAT03_OBJ05_VAR03_menu, "gfx/CAT03_1.png") { template_roads_menu(592,266) }
spriteset(spriteset_CAT03_OBJ05_VAR04_menu, "gfx/CAT03_1.png") { template_roads_menu(666,266) }
spriteset(spriteset_CAT03_OBJ05_VAR01, "gfx/CAT03_1.png") { template_1x1(592,0,0,256) }
spriteset(spriteset_CAT03_OBJ05_VAR02, "gfx/CAT03_1.png") { template_1x1(666,0,0,256) }
spriteset(spriteset_CAT03_OBJ05_VAR03, "gfx/CAT03_1.png") { template_1x1(592,266,0,256) }
spriteset(spriteset_CAT03_OBJ05_VAR04, "gfx/CAT03_1.png") { template_1x1(666,266,0,256) }

spritelayout layout_CAT03_OBJ05_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ05_VAR01; }
}       
spritelayout layout_CAT03_OBJ05_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ05_VAR02; }
}
spritelayout layout_CAT03_OBJ05_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ05_VAR03; }
}
spritelayout layout_CAT03_OBJ05_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ05_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ05_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ05_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ05_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ05_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ05_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ05_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ05_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ05_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ05_VAR_view, view) {
    0: layout_CAT03_OBJ05_VAR01;
    1: layout_CAT03_OBJ05_VAR02;
    2: layout_CAT03_OBJ05_VAR03;
    3: layout_CAT03_OBJ05_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ05_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ05_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ05_VAR_menu, view) {
    0:  layout_CAT03_OBJ05_VAR01_menu;
    1:  layout_CAT03_OBJ05_VAR02_menu;
    2:  layout_CAT03_OBJ05_VAR03_menu;
    3:  layout_CAT03_OBJ05_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ05) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ05);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ05_VAR;
            purchase:               switch_CAT03_OBJ05_VAR_menu;
            // additional_text:        switch_CAT03_OBJ05_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ06
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ06_VAR01_menu, "gfx/CAT03_2.png") { template_roads_menu(0,0) }
spriteset(spriteset_CAT03_OBJ06_VAR02_menu, "gfx/CAT03_2.png") { template_roads_menu(74,0) }
spriteset(spriteset_CAT03_OBJ06_VAR03_menu, "gfx/CAT03_2.png") { template_roads_menu(0,266) }
spriteset(spriteset_CAT03_OBJ06_VAR01, "gfx/CAT03_2.png") { template_1x1(0,0,0,256) }
spriteset(spriteset_CAT03_OBJ06_VAR02, "gfx/CAT03_2.png") { template_1x1(74,0,0,256) }
spriteset(spriteset_CAT03_OBJ06_VAR03, "gfx/CAT03_2.png") { template_1x1(0,266,0,256) }

spritelayout layout_CAT03_OBJ06_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ06_VAR01; }
}       
spritelayout layout_CAT03_OBJ06_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ06_VAR02; }
}
spritelayout layout_CAT03_OBJ06_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ06_VAR03; }
}
spritelayout layout_CAT03_OBJ06_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ06_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ06_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ06_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ06_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ06_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ06_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ06_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ06_VAR_view, view) {
    0: layout_CAT03_OBJ06_VAR01;
    1: layout_CAT03_OBJ06_VAR02;
    2: layout_CAT03_OBJ06_VAR03;
    3: layout_CAT03_OBJ06_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ06_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ06_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ06_VAR_menu, view) {
    0:  layout_CAT03_OBJ06_VAR01_menu;
    1:  layout_CAT03_OBJ06_VAR02_menu;
    2:  layout_CAT03_OBJ06_VAR03_menu;
    3:  layout_CAT03_OBJ06_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ06) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ06);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ06_VAR;
            purchase:               switch_CAT03_OBJ06_VAR_menu;
            // additional_text:        switch_CAT03_OBJ06_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ07
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ07_VAR01_menu, "gfx/CAT03_2.png") { template_roads_menu(148,0) }
spriteset(spriteset_CAT03_OBJ07_VAR02_menu, "gfx/CAT03_2.png") { template_roads_menu(222,0) }
spriteset(spriteset_CAT03_OBJ07_VAR03_menu, "gfx/CAT03_2.png") { template_roads_menu(148,266) }
spriteset(spriteset_CAT03_OBJ07_VAR04_menu, "gfx/CAT03_2.png") { template_roads_menu(222,266) }
spriteset(spriteset_CAT03_OBJ07_VAR01, "gfx/CAT03_2.png") { template_1x1(148,0,0,256) }
spriteset(spriteset_CAT03_OBJ07_VAR02, "gfx/CAT03_2.png") { template_1x1(222,0,0,256) }
spriteset(spriteset_CAT03_OBJ07_VAR03, "gfx/CAT03_2.png") { template_1x1(148,266,0,256) }
spriteset(spriteset_CAT03_OBJ07_VAR04, "gfx/CAT03_2.png") { template_1x1(222,266,0,256) }

spritelayout layout_CAT03_OBJ07_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ07_VAR01; }
}       
spritelayout layout_CAT03_OBJ07_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ07_VAR02; }
}
spritelayout layout_CAT03_OBJ07_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ07_VAR03; }
}
spritelayout layout_CAT03_OBJ07_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ07_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ07_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ07_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ07_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ07_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ07_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ07_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ07_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ07_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ07_VAR_view, view) {
    0: layout_CAT03_OBJ07_VAR01;
    1: layout_CAT03_OBJ07_VAR02;
    2: layout_CAT03_OBJ07_VAR03;
    3: layout_CAT03_OBJ07_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ07_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ07_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ07_VAR_menu, view) {
    0:  layout_CAT03_OBJ07_VAR01_menu;
    1:  layout_CAT03_OBJ07_VAR02_menu;
    2:  layout_CAT03_OBJ07_VAR03_menu;
    3:  layout_CAT03_OBJ07_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ07) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ07);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ07_VAR;
            purchase:               switch_CAT03_OBJ07_VAR_menu;
            // additional_text:        switch_CAT03_OBJ07_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ08
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ08_VAR01_menu, "gfx/CAT03_2.png") { template_roads_menu(296,0) }
spriteset(spriteset_CAT03_OBJ08_VAR02_menu, "gfx/CAT03_2.png") { template_roads_menu(370,0) }
spriteset(spriteset_CAT03_OBJ08_VAR03_menu, "gfx/CAT03_2.png") { template_roads_menu(296,266) }
spriteset(spriteset_CAT03_OBJ08_VAR04_menu, "gfx/CAT03_2.png") { template_roads_menu(370,266) }
spriteset(spriteset_CAT03_OBJ08_VAR01, "gfx/CAT03_2.png") { template_1x1(296,0,0,256) }
spriteset(spriteset_CAT03_OBJ08_VAR02, "gfx/CAT03_2.png") { template_1x1(370,0,0,256) }
spriteset(spriteset_CAT03_OBJ08_VAR03, "gfx/CAT03_2.png") { template_1x1(296,266,0,256) }
spriteset(spriteset_CAT03_OBJ08_VAR04, "gfx/CAT03_2.png") { template_1x1(370,266,0,256) }

spritelayout layout_CAT03_OBJ08_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ08_VAR01; }
}       
spritelayout layout_CAT03_OBJ08_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ08_VAR02; }
}
spritelayout layout_CAT03_OBJ08_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ08_VAR03; }
}
spritelayout layout_CAT03_OBJ08_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ08_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ08_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ08_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ08_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ08_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ08_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ08_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ08_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ08_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ08_VAR_view, view) {
    0: layout_CAT03_OBJ08_VAR01;
    1: layout_CAT03_OBJ08_VAR02;
    2: layout_CAT03_OBJ08_VAR03;
    3: layout_CAT03_OBJ08_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ08_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ08_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ08_VAR_menu, view) {
    0:  layout_CAT03_OBJ08_VAR01_menu;
    1:  layout_CAT03_OBJ08_VAR02_menu;
    2:  layout_CAT03_OBJ08_VAR03_menu;
    3:  layout_CAT03_OBJ08_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ08) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ08);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ08_VAR;
            purchase:               switch_CAT03_OBJ08_VAR_menu;
            // additional_text:        switch_CAT03_OBJ08_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ09
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ09_VAR01_menu, "gfx/CAT03_2.png") { template_roads_menu(444,0) }
spriteset(spriteset_CAT03_OBJ09_VAR01,      "gfx/CAT03_2.png") { template_nw_slope  (444,0) }

spriteset(spriteset_CAT03_OBJ09_VAR02_menu, "gfx/CAT03_2.png") { template_roads_menu(518,0) }
spriteset(spriteset_CAT03_OBJ09_VAR02,      "gfx/CAT03_2.png") { template_ne_slope  (518,0) }

spriteset(spriteset_CAT03_OBJ09_VAR03_menu, "gfx/CAT03_2.png") { template_roads_menu(444,266) }
spriteset(spriteset_CAT03_OBJ09_VAR03,      "gfx/CAT03_2.png") { template_se_slope  (444,266) }

spriteset(spriteset_CAT03_OBJ09_VAR04_menu, "gfx/CAT03_2.png") { template_roads_menu(518,266) }
spriteset(spriteset_CAT03_OBJ09_VAR04,      "gfx/CAT03_2.png") { template_sw_slope  (518,266) }

spritelayout layout_CAT03_OBJ09_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ09_VAR01; }
}       
spritelayout layout_CAT03_OBJ09_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ09_VAR02; }
}
spritelayout layout_CAT03_OBJ09_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ09_VAR03; }
}
spritelayout layout_CAT03_OBJ09_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ09_VAR04; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ09_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ09_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ09_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ09_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ09_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ09_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ09_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ09_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ09_VAR_view, view) {
    0: layout_CAT03_OBJ09_VAR01;
    1: layout_CAT03_OBJ09_VAR02;
    2: layout_CAT03_OBJ09_VAR03;
    3: layout_CAT03_OBJ09_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ09_VAR, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ09_VAR_view;
    }

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ09_VAR_menu, view) {
    0:  layout_CAT03_OBJ09_VAR01_menu;
    1:  layout_CAT03_OBJ09_VAR02_menu;
    2:  layout_CAT03_OBJ09_VAR03_menu;
    3:  layout_CAT03_OBJ09_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ09) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ09);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ09_VAR;
            purchase:               switch_CAT03_OBJ09_VAR_menu;
            // additional_text:        switch_CAT03_OBJ09_TXT;
            tile_check:             return CB_RESULT_LOCATION_ALLOW;
            autoslope:              return CB_RESULT_AUTOSLOPE;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ10
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ10_VAR01_menu, "gfx/CAT03_2.png") { template_roads_menu(592,0) }
spriteset(spriteset_CAT03_OBJ10_VAR02_menu, "gfx/CAT03_2.png") { template_roads_menu(666,0) }
spriteset(spriteset_CAT03_OBJ10_VAR03_menu, "gfx/CAT03_2.png") { template_roads_menu(592,266) }
spriteset(spriteset_CAT03_OBJ10_VAR04_menu, "gfx/CAT03_2.png") { template_roads_menu(666,266) }
spriteset(spriteset_CAT03_OBJ10_VAR01, "gfx/CAT03_2.png") { template_1x1(592,0,0,256) }
spriteset(spriteset_CAT03_OBJ10_VAR02, "gfx/CAT03_2.png") { template_1x1(666,0,0,256) }
spriteset(spriteset_CAT03_OBJ10_VAR03, "gfx/CAT03_2.png") { template_1x1(592,266,0,256) }
spriteset(spriteset_CAT03_OBJ10_VAR04, "gfx/CAT03_2.png") { template_1x1(666,266,0,256) }

spritelayout layout_CAT03_OBJ10_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ10_VAR01; }
}       
spritelayout layout_CAT03_OBJ10_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ10_VAR02; }
}
spritelayout layout_CAT03_OBJ10_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ10_VAR03; }
}
spritelayout layout_CAT03_OBJ10_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ10_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ10_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ10_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ10_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ10_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ10_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ10_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ10_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ10_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ10_VAR_view, view) {
    0: layout_CAT03_OBJ10_VAR01;
    1: layout_CAT03_OBJ10_VAR02;
    2: layout_CAT03_OBJ10_VAR03;
    3: layout_CAT03_OBJ10_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ10_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ10_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ10_VAR_menu, view) {
    0:  layout_CAT03_OBJ10_VAR01_menu;
    1:  layout_CAT03_OBJ10_VAR02_menu;
    2:  layout_CAT03_OBJ10_VAR03_menu;
    3:  layout_CAT03_OBJ10_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ10) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ10);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ10_VAR;
            purchase:               switch_CAT03_OBJ10_VAR_menu;
            // additional_text:        switch_CAT03_OBJ10_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ11
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ11_VAR01_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(0,0) }
spriteset(spriteset_CAT03_OBJ11_VAR02_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(74,0) }
spriteset(spriteset_CAT03_OBJ11_VAR03_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(0,266) }
spriteset(spriteset_CAT03_OBJ11_VAR01, "gfx/CAT03_3.png") { template_1x1(0,0,0,256) }
spriteset(spriteset_CAT03_OBJ11_VAR02, "gfx/CAT03_3.png") { template_1x1(74,0,0,256) }
spriteset(spriteset_CAT03_OBJ11_VAR03, "gfx/CAT03_3.png") { template_1x1(0,266,0,256) }

spritelayout layout_CAT03_OBJ11_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ11_VAR01; }
}       
spritelayout layout_CAT03_OBJ11_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ11_VAR02; }
}
spritelayout layout_CAT03_OBJ11_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ11_VAR03; }
}
spritelayout layout_CAT03_OBJ11_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ11_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ11_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ11_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ11_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ11_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ11_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ11_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ11_VAR_view, view) {
    0: layout_CAT03_OBJ11_VAR01;
    1: layout_CAT03_OBJ11_VAR02;
    2: layout_CAT03_OBJ11_VAR03;
    3: layout_CAT03_OBJ11_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ11_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ11_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ11_VAR_menu, view) {
    0:  layout_CAT03_OBJ11_VAR01_menu;
    1:  layout_CAT03_OBJ11_VAR02_menu;
    2:  layout_CAT03_OBJ11_VAR03_menu;
    3:  layout_CAT03_OBJ11_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ11) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ11);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ11_VAR;
            purchase:               switch_CAT03_OBJ11_VAR_menu;
            // additional_text:        switch_CAT03_OBJ11_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ12
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ12_VAR01_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(148,0) }
spriteset(spriteset_CAT03_OBJ12_VAR02_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(222,0) }
spriteset(spriteset_CAT03_OBJ12_VAR03_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(148,266) }
spriteset(spriteset_CAT03_OBJ12_VAR04_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(222,266) }
spriteset(spriteset_CAT03_OBJ12_VAR01, "gfx/CAT03_3.png") { template_1x1(148,0,0,256) }
spriteset(spriteset_CAT03_OBJ12_VAR02, "gfx/CAT03_3.png") { template_1x1(222,0,0,256) }
spriteset(spriteset_CAT03_OBJ12_VAR03, "gfx/CAT03_3.png") { template_1x1(148,266,0,256) }
spriteset(spriteset_CAT03_OBJ12_VAR04, "gfx/CAT03_3.png") { template_1x1(222,266,0,256) }

spritelayout layout_CAT03_OBJ12_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ12_VAR01; }
}       
spritelayout layout_CAT03_OBJ12_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ12_VAR02; }
}
spritelayout layout_CAT03_OBJ12_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ12_VAR03; }
}
spritelayout layout_CAT03_OBJ12_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ12_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ12_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ12_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ12_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ12_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ12_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ12_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ12_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ12_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ12_VAR_view, view) {
    0: layout_CAT03_OBJ12_VAR01;
    1: layout_CAT03_OBJ12_VAR02;
    2: layout_CAT03_OBJ12_VAR03;
    3: layout_CAT03_OBJ12_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ12_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ12_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ12_VAR_menu, view) {
    0:  layout_CAT03_OBJ12_VAR01_menu;
    1:  layout_CAT03_OBJ12_VAR02_menu;
    2:  layout_CAT03_OBJ12_VAR03_menu;
    3:  layout_CAT03_OBJ12_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ12) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ12);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ12_VAR;
            purchase:               switch_CAT03_OBJ12_VAR_menu;
            // additional_text:        switch_CAT03_OBJ12_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ13
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ13_VAR01_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(296,0) }
spriteset(spriteset_CAT03_OBJ13_VAR02_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(370,0) }
spriteset(spriteset_CAT03_OBJ13_VAR03_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(296,266) }
spriteset(spriteset_CAT03_OBJ13_VAR04_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(370,266) }
spriteset(spriteset_CAT03_OBJ13_VAR01, "gfx/CAT03_3.png") { template_1x1(296,0,0,256) }
spriteset(spriteset_CAT03_OBJ13_VAR02, "gfx/CAT03_3.png") { template_1x1(370,0,0,256) }
spriteset(spriteset_CAT03_OBJ13_VAR03, "gfx/CAT03_3.png") { template_1x1(296,266,0,256) }
spriteset(spriteset_CAT03_OBJ13_VAR04, "gfx/CAT03_3.png") { template_1x1(370,266,0,256) }

spritelayout layout_CAT03_OBJ13_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ13_VAR01; }
}       
spritelayout layout_CAT03_OBJ13_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ13_VAR02; }
}
spritelayout layout_CAT03_OBJ13_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ13_VAR03; }
}
spritelayout layout_CAT03_OBJ13_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ13_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ13_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ13_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ13_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ13_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ13_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ13_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ13_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ13_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ13_VAR_view, view) {
    0: layout_CAT03_OBJ13_VAR01;
    1: layout_CAT03_OBJ13_VAR02;
    2: layout_CAT03_OBJ13_VAR03;
    3: layout_CAT03_OBJ13_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ13_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ13_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ13_VAR_menu, view) {
    0:  layout_CAT03_OBJ13_VAR01_menu;
    1:  layout_CAT03_OBJ13_VAR02_menu;
    2:  layout_CAT03_OBJ13_VAR03_menu;
    3:  layout_CAT03_OBJ13_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ13) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ13);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ13_VAR;
            purchase:               switch_CAT03_OBJ13_VAR_menu;
            // additional_text:        switch_CAT03_OBJ13_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ14
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ14_VAR01_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(444,0) }
spriteset(spriteset_CAT03_OBJ14_VAR01,      "gfx/CAT03_3.png") { template_nw_slope  (444,0) }

spriteset(spriteset_CAT03_OBJ14_VAR02_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(518,0) }
spriteset(spriteset_CAT03_OBJ14_VAR02,      "gfx/CAT03_3.png") { template_ne_slope  (518,0) }

spriteset(spriteset_CAT03_OBJ14_VAR03_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(444,266) }
spriteset(spriteset_CAT03_OBJ14_VAR03,      "gfx/CAT03_3.png") { template_se_slope  (444,266) }

spriteset(spriteset_CAT03_OBJ14_VAR04_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(518,266) }
spriteset(spriteset_CAT03_OBJ14_VAR04,      "gfx/CAT03_3.png") { template_sw_slope  (518,266) }

spritelayout layout_CAT03_OBJ14_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ14_VAR01; }
}       
spritelayout layout_CAT03_OBJ14_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ14_VAR02; }
}
spritelayout layout_CAT03_OBJ14_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ14_VAR03; }
}
spritelayout layout_CAT03_OBJ14_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ14_VAR04; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ14_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ14_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ14_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ14_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ14_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ14_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ14_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ14_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ14_VAR_view, view) {
    0: layout_CAT03_OBJ14_VAR01;
    1: layout_CAT03_OBJ14_VAR02;
    2: layout_CAT03_OBJ14_VAR03;
    3: layout_CAT03_OBJ14_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ14_VAR, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ14_VAR_view;
    }

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ14_VAR_menu, view) {
    0:  layout_CAT03_OBJ14_VAR01_menu;
    1:  layout_CAT03_OBJ14_VAR02_menu;
    2:  layout_CAT03_OBJ14_VAR03_menu;
    3:  layout_CAT03_OBJ14_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ14) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ14);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ14_VAR;
            purchase:               switch_CAT03_OBJ14_VAR_menu;
            // additional_text:        switch_CAT03_OBJ14_TXT;
            tile_check:             return CB_RESULT_LOCATION_ALLOW;
            autoslope:              return CB_RESULT_AUTOSLOPE;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ15
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ15_VAR01_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(592,0) }
spriteset(spriteset_CAT03_OBJ15_VAR02_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(666,0) }
spriteset(spriteset_CAT03_OBJ15_VAR03_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(592,266) }
spriteset(spriteset_CAT03_OBJ15_VAR04_menu, "gfx/CAT03_3_menu.png") { template_roads_menu(666,266) }
spriteset(spriteset_CAT03_OBJ15_VAR01, "gfx/CAT03_3.png") { template_1x1(592,0,0,256) }
spriteset(spriteset_CAT03_OBJ15_VAR02, "gfx/CAT03_3.png") { template_1x1(666,0,0,256) }
spriteset(spriteset_CAT03_OBJ15_VAR03, "gfx/CAT03_3.png") { template_1x1(592,266,0,256) }
spriteset(spriteset_CAT03_OBJ15_VAR04, "gfx/CAT03_3.png") { template_1x1(666,266,0,256) }

spritelayout layout_CAT03_OBJ15_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ15_VAR01; }
}       
spritelayout layout_CAT03_OBJ15_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ15_VAR02; }
}
spritelayout layout_CAT03_OBJ15_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ15_VAR03; }
}
spritelayout layout_CAT03_OBJ15_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ15_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ15_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ15_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ15_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ15_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ15_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ15_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ15_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ15_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ15_VAR_view, view) {
    0: layout_CAT03_OBJ15_VAR01;
    1: layout_CAT03_OBJ15_VAR02;
    2: layout_CAT03_OBJ15_VAR03;
    3: layout_CAT03_OBJ15_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ15_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ15_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ15_VAR_menu, view) {
    0:  layout_CAT03_OBJ15_VAR01_menu;
    1:  layout_CAT03_OBJ15_VAR02_menu;
    2:  layout_CAT03_OBJ15_VAR03_menu;
    3:  layout_CAT03_OBJ15_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ15) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ15);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ15_VAR;
            purchase:               switch_CAT03_OBJ15_VAR_menu;
            // additional_text:        switch_CAT03_OBJ15_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ16
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ16_VAR01_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(0,0) }
spriteset(spriteset_CAT03_OBJ16_VAR02_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(74,0) }
spriteset(spriteset_CAT03_OBJ16_VAR03_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(0,266) }
spriteset(spriteset_CAT03_OBJ16_VAR01, "gfx/CAT03_4.png") { template_1x1(0,0,0,256) }
spriteset(spriteset_CAT03_OBJ16_VAR02, "gfx/CAT03_4.png") { template_1x1(74,0,0,256) }
spriteset(spriteset_CAT03_OBJ16_VAR03, "gfx/CAT03_4.png") { template_1x1(0,266,0,256) }

spritelayout layout_CAT03_OBJ16_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ16_VAR01; }
}       
spritelayout layout_CAT03_OBJ16_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ16_VAR02; }
}
spritelayout layout_CAT03_OBJ16_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ16_VAR03; }
}
spritelayout layout_CAT03_OBJ16_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ16_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ16_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ16_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ16_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ16_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ16_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ16_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ16_VAR_view, view) {
    0: layout_CAT03_OBJ16_VAR01;
    1: layout_CAT03_OBJ16_VAR02;
    2: layout_CAT03_OBJ16_VAR03;
    3: layout_CAT03_OBJ16_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ16_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ16_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ16_VAR_menu, view) {
    0:  layout_CAT03_OBJ16_VAR01_menu;
    1:  layout_CAT03_OBJ16_VAR02_menu;
    2:  layout_CAT03_OBJ16_VAR03_menu;
    3:  layout_CAT03_OBJ16_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ16) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ16);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ16_VAR;
            purchase:               switch_CAT03_OBJ16_VAR_menu;
            // additional_text:        switch_CAT03_OBJ16_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ17
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ17_VAR01_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(148,0) }
spriteset(spriteset_CAT03_OBJ17_VAR02_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(222,0) }
spriteset(spriteset_CAT03_OBJ17_VAR03_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(148,266) }
spriteset(spriteset_CAT03_OBJ17_VAR04_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(222,266) }
spriteset(spriteset_CAT03_OBJ17_VAR01, "gfx/CAT03_4.png") { template_1x1(148,0,0,256) }
spriteset(spriteset_CAT03_OBJ17_VAR02, "gfx/CAT03_4.png") { template_1x1(222,0,0,256) }
spriteset(spriteset_CAT03_OBJ17_VAR03, "gfx/CAT03_4.png") { template_1x1(148,266,0,256) }
spriteset(spriteset_CAT03_OBJ17_VAR04, "gfx/CAT03_4.png") { template_1x1(222,266,0,256) }

spritelayout layout_CAT03_OBJ17_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ17_VAR01; }
}       
spritelayout layout_CAT03_OBJ17_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ17_VAR02; }
}
spritelayout layout_CAT03_OBJ17_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ17_VAR03; }
}
spritelayout layout_CAT03_OBJ17_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ17_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ17_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ17_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ17_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ17_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ17_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ17_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ17_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ17_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ17_VAR_view, view) {
    0: layout_CAT03_OBJ17_VAR01;
    1: layout_CAT03_OBJ17_VAR02;
    2: layout_CAT03_OBJ17_VAR03;
    3: layout_CAT03_OBJ17_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ17_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ17_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ17_VAR_menu, view) {
    0:  layout_CAT03_OBJ17_VAR01_menu;
    1:  layout_CAT03_OBJ17_VAR02_menu;
    2:  layout_CAT03_OBJ17_VAR03_menu;
    3:  layout_CAT03_OBJ17_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ17) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ17);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ17_VAR;
            purchase:               switch_CAT03_OBJ17_VAR_menu;
            // additional_text:        switch_CAT03_OBJ17_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ18
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ18_VAR01_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(296,0) }
spriteset(spriteset_CAT03_OBJ18_VAR02_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(370,0) }
spriteset(spriteset_CAT03_OBJ18_VAR03_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(296,266) }
spriteset(spriteset_CAT03_OBJ18_VAR04_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(370,266) }
spriteset(spriteset_CAT03_OBJ18_VAR01, "gfx/CAT03_4.png") { template_1x1(296,0,0,256) }
spriteset(spriteset_CAT03_OBJ18_VAR02, "gfx/CAT03_4.png") { template_1x1(370,0,0,256) }
spriteset(spriteset_CAT03_OBJ18_VAR03, "gfx/CAT03_4.png") { template_1x1(296,266,0,256) }
spriteset(spriteset_CAT03_OBJ18_VAR04, "gfx/CAT03_4.png") { template_1x1(370,266,0,256) }

spritelayout layout_CAT03_OBJ18_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ18_VAR01; }
}       
spritelayout layout_CAT03_OBJ18_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ18_VAR02; }
}
spritelayout layout_CAT03_OBJ18_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ18_VAR03; }
}
spritelayout layout_CAT03_OBJ18_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ18_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ18_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ18_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ18_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ18_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ18_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ18_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ18_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ18_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ18_VAR_view, view) {
    0: layout_CAT03_OBJ18_VAR01;
    1: layout_CAT03_OBJ18_VAR02;
    2: layout_CAT03_OBJ18_VAR03;
    3: layout_CAT03_OBJ18_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ18_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ18_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ18_VAR_menu, view) {
    0:  layout_CAT03_OBJ18_VAR01_menu;
    1:  layout_CAT03_OBJ18_VAR02_menu;
    2:  layout_CAT03_OBJ18_VAR03_menu;
    3:  layout_CAT03_OBJ18_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ18) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ18);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ18_VAR;
            purchase:               switch_CAT03_OBJ18_VAR_menu;
            // additional_text:        switch_CAT03_OBJ18_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ19
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ19_VAR01_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(444,0) }
spriteset(spriteset_CAT03_OBJ19_VAR01,      "gfx/CAT03_4.png") { template_nw_slope  (444,0) }

spriteset(spriteset_CAT03_OBJ19_VAR02_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(518,0) }
spriteset(spriteset_CAT03_OBJ19_VAR02,      "gfx/CAT03_4.png") { template_ne_slope  (518,0) }

spriteset(spriteset_CAT03_OBJ19_VAR03_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(444,266) }
spriteset(spriteset_CAT03_OBJ19_VAR03,      "gfx/CAT03_4.png") { template_se_slope  (444,266) }

spriteset(spriteset_CAT03_OBJ19_VAR04_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(518,266) }
spriteset(spriteset_CAT03_OBJ19_VAR04,      "gfx/CAT03_4.png") { template_sw_slope  (518,266) }

spritelayout layout_CAT03_OBJ19_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ19_VAR01; }
}       
spritelayout layout_CAT03_OBJ19_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ19_VAR02; }
}
spritelayout layout_CAT03_OBJ19_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ19_VAR03; }
}
spritelayout layout_CAT03_OBJ19_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ19_VAR04; }
}

// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ19_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ19_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ19_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ19_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ19_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ19_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ19_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ19_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ19_VAR_view, view) {
    0: layout_CAT03_OBJ19_VAR01;
    1: layout_CAT03_OBJ19_VAR02;
    2: layout_CAT03_OBJ19_VAR03;
    3: layout_CAT03_OBJ19_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ19_VAR, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ19_VAR_view;
    }

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ19_VAR_menu, view) {
    0:  layout_CAT03_OBJ19_VAR01_menu;
    1:  layout_CAT03_OBJ19_VAR02_menu;
    2:  layout_CAT03_OBJ19_VAR03_menu;
    3:  layout_CAT03_OBJ19_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ19) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ19);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER,OBJ_FLAG_NO_FOUNDATIONS)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ19_VAR;
            purchase:               switch_CAT03_OBJ19_VAR_menu;
            // additional_text:        switch_CAT03_OBJ19_TXT;
            tile_check:             return CB_RESULT_LOCATION_ALLOW;
            autoslope:              return CB_RESULT_AUTOSLOPE;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ20
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ20_VAR01_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(592,0) }
spriteset(spriteset_CAT03_OBJ20_VAR02_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(666,0) }
spriteset(spriteset_CAT03_OBJ20_VAR03_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(592,266) }
spriteset(spriteset_CAT03_OBJ20_VAR04_menu, "gfx/CAT03_4_menu.png") { template_roads_menu(666,266) }
spriteset(spriteset_CAT03_OBJ20_VAR01, "gfx/CAT03_4.png") { template_1x1(592,0,0,256) }
spriteset(spriteset_CAT03_OBJ20_VAR02, "gfx/CAT03_4.png") { template_1x1(666,0,0,256) }
spriteset(spriteset_CAT03_OBJ20_VAR03, "gfx/CAT03_4.png") { template_1x1(592,266,0,256) }
spriteset(spriteset_CAT03_OBJ20_VAR04, "gfx/CAT03_4.png") { template_1x1(666,266,0,256) }

spritelayout layout_CAT03_OBJ20_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ20_VAR01; }
}       
spritelayout layout_CAT03_OBJ20_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ20_VAR02; }
}
spritelayout layout_CAT03_OBJ20_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ20_VAR03; }
}
spritelayout layout_CAT03_OBJ20_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ20_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ20_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ20_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ20_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ20_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ20_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ20_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ20_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ20_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ20_VAR_view, view) {
    0: layout_CAT03_OBJ20_VAR01;
    1: layout_CAT03_OBJ20_VAR02;
    2: layout_CAT03_OBJ20_VAR03;
    3: layout_CAT03_OBJ20_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ20_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ20_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ20_VAR_menu, view) {
    0:  layout_CAT03_OBJ20_VAR01_menu;
    1:  layout_CAT03_OBJ20_VAR02_menu;
    2:  layout_CAT03_OBJ20_VAR03_menu;
    3:  layout_CAT03_OBJ20_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ20) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ20);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ20_VAR;
            purchase:               switch_CAT03_OBJ20_VAR_menu;
            // additional_text:        switch_CAT03_OBJ20_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ21
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ21_VAR01_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(0,0,0,256) }
spriteset(spriteset_CAT03_OBJ21_VAR02_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(74,0,0,256) }
spriteset(spriteset_CAT03_OBJ21_VAR03_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT03_OBJ21_VAR04_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(74,266,0,256) }
spriteset(spriteset_CAT03_OBJ21_VAR01,      "gfx/CAT03_depots.png") { template_1x1(0,0,0,256) }
spriteset(spriteset_CAT03_OBJ21_VAR02,      "gfx/CAT03_depots.png") { template_1x1(74,0,0,256) }
spriteset(spriteset_CAT03_OBJ21_VAR03,      "gfx/CAT03_depots.png") { template_1x1(0,266,0,256) }
spriteset(spriteset_CAT03_OBJ21_VAR04,      "gfx/CAT03_depots.png") { template_1x1(74,266,0,256) }

spritelayout layout_CAT03_OBJ21_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ21_VAR01;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}       
spritelayout layout_CAT03_OBJ21_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ21_VAR02;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT03_OBJ21_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ21_VAR03;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));  }
}
spritelayout layout_CAT03_OBJ21_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ21_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));   }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ21_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ21_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN; }
}
spritelayout layout_CAT03_OBJ21_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ21_VAR02_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN; }
}
spritelayout layout_CAT03_OBJ21_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ21_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN; }
}
spritelayout layout_CAT03_OBJ21_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ21_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN;  }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ21_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ21_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ21_VAR01) {
      1: CAT03_OBJ21_VAR01_1;           // dark blue
      1: CAT03_OBJ21_VAR01_2;           // pale green
      1: CAT03_OBJ21_VAR01_3;           // pink
      1: CAT03_OBJ21_VAR01_4;           // yellow
      1: CAT03_OBJ21_VAR01_5;           // red
      1: CAT03_OBJ21_VAR01_6;           // light blue
      1: CAT03_OBJ21_VAR01_7;           // green
      1: CAT03_OBJ21_VAR01_8;           // dark green
      1: CAT03_OBJ21_VAR01_9;           // blue
      1: CAT03_OBJ21_VAR01_10;          // cream
      1: CAT03_OBJ21_VAR01_11;          // mauve
      1: CAT03_OBJ21_VAR01_12;          // purple
      1: CAT03_OBJ21_VAR01_13;          // orange
      1: CAT03_OBJ21_VAR01_14;          // brown
      1: CAT03_OBJ21_VAR01_15;          // grey
      1: CAT03_OBJ21_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ21_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR02_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ21_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ21_VAR02) {
      1: CAT03_OBJ21_VAR02_1;           // dark blue
      1: CAT03_OBJ21_VAR02_2;           // pale green
      1: CAT03_OBJ21_VAR02_3;           // pink
      1: CAT03_OBJ21_VAR02_4;           // yellow
      1: CAT03_OBJ21_VAR02_5;           // red
      1: CAT03_OBJ21_VAR02_6;           // light blue
      1: CAT03_OBJ21_VAR02_7;           // green
      1: CAT03_OBJ21_VAR02_8;           // dark green
      1: CAT03_OBJ21_VAR02_9;           // blue
      1: CAT03_OBJ21_VAR02_10;          // cream
      1: CAT03_OBJ21_VAR02_11;          // mauve
      1: CAT03_OBJ21_VAR02_12;          // purple
      1: CAT03_OBJ21_VAR02_13;          // orange
      1: CAT03_OBJ21_VAR02_14;          // brown
      1: CAT03_OBJ21_VAR02_15;          // grey
      1: CAT03_OBJ21_VAR02_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ21_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ21_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ21_VAR03) {
      1: CAT03_OBJ21_VAR03_1;           // dark blue
      1: CAT03_OBJ21_VAR03_2;           // pale green
      1: CAT03_OBJ21_VAR03_3;           // pink
      1: CAT03_OBJ21_VAR03_4;           // yellow
      1: CAT03_OBJ21_VAR03_5;           // red
      1: CAT03_OBJ21_VAR03_6;           // light blue
      1: CAT03_OBJ21_VAR03_7;           // green
      1: CAT03_OBJ21_VAR03_8;           // dark green
      1: CAT03_OBJ21_VAR03_9;           // blue
      1: CAT03_OBJ21_VAR03_10;          // cream
      1: CAT03_OBJ21_VAR03_11;          // mauve
      1: CAT03_OBJ21_VAR03_12;          // purple
      1: CAT03_OBJ21_VAR03_13;          // orange
      1: CAT03_OBJ21_VAR03_14;          // brown
      1: CAT03_OBJ21_VAR03_15;          // grey
      1: CAT03_OBJ21_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ21_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ21_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ21_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ21_VAR04) {
      1: CAT03_OBJ21_VAR04_1;           // dark blue
      1: CAT03_OBJ21_VAR04_2;           // pale green
      1: CAT03_OBJ21_VAR04_3;           // pink
      1: CAT03_OBJ21_VAR04_4;           // yellow
      1: CAT03_OBJ21_VAR04_5;           // red
      1: CAT03_OBJ21_VAR04_6;           // light blue
      1: CAT03_OBJ21_VAR04_7;           // green
      1: CAT03_OBJ21_VAR04_8;           // dark green
      1: CAT03_OBJ21_VAR04_9;           // blue
      1: CAT03_OBJ21_VAR04_10;          // cream
      1: CAT03_OBJ21_VAR04_11;          // mauve
      1: CAT03_OBJ21_VAR04_12;          // purple
      1: CAT03_OBJ21_VAR04_13;          // orange
      1: CAT03_OBJ21_VAR04_14;          // brown
      1: CAT03_OBJ21_VAR04_15;          // grey
      1: CAT03_OBJ21_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ21_VAR_view, view) {
    0: colour_CAT03_OBJ21_VAR01;
    1: colour_CAT03_OBJ21_VAR02;
    2: colour_CAT03_OBJ21_VAR03;
    3: colour_CAT03_OBJ21_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ21_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ21_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ21_VAR_menu, view) {
    0:  layout_CAT03_OBJ21_VAR01_menu;
    1:  layout_CAT03_OBJ21_VAR02_menu;
    2:  layout_CAT03_OBJ21_VAR03_menu;
    3:  layout_CAT03_OBJ21_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ21_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    2:  string(STR_CC);
    3:  string(STR_CC);
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ21) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ21);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ21_VAR;
            purchase:               switch_CAT03_OBJ21_VAR_menu;
            additional_text:        switch_CAT03_OBJ21_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ22
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ22_VAR01_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(148,0,0,256) }
spriteset(spriteset_CAT03_OBJ22_VAR02_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(222,0,0,256) }
spriteset(spriteset_CAT03_OBJ22_VAR03_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(148,266,0,256) }
spriteset(spriteset_CAT03_OBJ22_VAR04_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(222,266,0,256) }
spriteset(spriteset_CAT03_OBJ22_VAR01,      "gfx/CAT03_depots.png") { template_1x1(148,0,0,256) }
spriteset(spriteset_CAT03_OBJ22_VAR02,      "gfx/CAT03_depots.png") { template_1x1(222,0,0,256) }
spriteset(spriteset_CAT03_OBJ22_VAR03,      "gfx/CAT03_depots.png") { template_1x1(148,266,0,256) }
spriteset(spriteset_CAT03_OBJ22_VAR04,      "gfx/CAT03_depots.png") { template_1x1(222,266,0,256) }

spritelayout layout_CAT03_OBJ22_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ22_VAR01;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}       
spritelayout layout_CAT03_OBJ22_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ22_VAR02;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT03_OBJ22_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ22_VAR03;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));  }
}
spritelayout layout_CAT03_OBJ22_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ22_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));   }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ22_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ22_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_YELLOW; }
}
spritelayout layout_CAT03_OBJ22_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ22_VAR02_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_YELLOW; }
}
spritelayout layout_CAT03_OBJ22_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ22_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_YELLOW; }
}
spritelayout layout_CAT03_OBJ22_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ22_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_YELLOW;  }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ22_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ22_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ22_VAR01) {
      1: CAT03_OBJ22_VAR01_1;           // dark blue
      1: CAT03_OBJ22_VAR01_2;           // pale green
      1: CAT03_OBJ22_VAR01_3;           // pink
      1: CAT03_OBJ22_VAR01_4;           // yellow
      1: CAT03_OBJ22_VAR01_5;           // red
      1: CAT03_OBJ22_VAR01_6;           // light blue
      1: CAT03_OBJ22_VAR01_7;           // green
      1: CAT03_OBJ22_VAR01_8;           // dark green
      1: CAT03_OBJ22_VAR01_9;           // blue
      1: CAT03_OBJ22_VAR01_10;          // cream
      1: CAT03_OBJ22_VAR01_11;          // mauve
      1: CAT03_OBJ22_VAR01_12;          // purple
      1: CAT03_OBJ22_VAR01_13;          // orange
      1: CAT03_OBJ22_VAR01_14;          // brown
      1: CAT03_OBJ22_VAR01_15;          // grey
      1: CAT03_OBJ22_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ22_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR02_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ22_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ22_VAR02) {
      1: CAT03_OBJ22_VAR02_1;           // dark blue
      1: CAT03_OBJ22_VAR02_2;           // pale green
      1: CAT03_OBJ22_VAR02_3;           // pink
      1: CAT03_OBJ22_VAR02_4;           // yellow
      1: CAT03_OBJ22_VAR02_5;           // red
      1: CAT03_OBJ22_VAR02_6;           // light blue
      1: CAT03_OBJ22_VAR02_7;           // green
      1: CAT03_OBJ22_VAR02_8;           // dark green
      1: CAT03_OBJ22_VAR02_9;           // blue
      1: CAT03_OBJ22_VAR02_10;          // cream
      1: CAT03_OBJ22_VAR02_11;          // mauve
      1: CAT03_OBJ22_VAR02_12;          // purple
      1: CAT03_OBJ22_VAR02_13;          // orange
      1: CAT03_OBJ22_VAR02_14;          // brown
      1: CAT03_OBJ22_VAR02_15;          // grey
      1: CAT03_OBJ22_VAR02_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ22_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ22_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ22_VAR03) {
      1: CAT03_OBJ22_VAR03_1;           // dark blue
      1: CAT03_OBJ22_VAR03_2;           // pale green
      1: CAT03_OBJ22_VAR03_3;           // pink
      1: CAT03_OBJ22_VAR03_4;           // yellow
      1: CAT03_OBJ22_VAR03_5;           // red
      1: CAT03_OBJ22_VAR03_6;           // light blue
      1: CAT03_OBJ22_VAR03_7;           // green
      1: CAT03_OBJ22_VAR03_8;           // dark green
      1: CAT03_OBJ22_VAR03_9;           // blue
      1: CAT03_OBJ22_VAR03_10;          // cream
      1: CAT03_OBJ22_VAR03_11;          // mauve
      1: CAT03_OBJ22_VAR03_12;          // purple
      1: CAT03_OBJ22_VAR03_13;          // orange
      1: CAT03_OBJ22_VAR03_14;          // brown
      1: CAT03_OBJ22_VAR03_15;          // grey
      1: CAT03_OBJ22_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ22_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ22_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ22_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ22_VAR04) {
      1: CAT03_OBJ22_VAR04_1;           // dark blue
      1: CAT03_OBJ22_VAR04_2;           // pale green
      1: CAT03_OBJ22_VAR04_3;           // pink
      1: CAT03_OBJ22_VAR04_4;           // yellow
      1: CAT03_OBJ22_VAR04_5;           // red
      1: CAT03_OBJ22_VAR04_6;           // light blue
      1: CAT03_OBJ22_VAR04_7;           // green
      1: CAT03_OBJ22_VAR04_8;           // dark green
      1: CAT03_OBJ22_VAR04_9;           // blue
      1: CAT03_OBJ22_VAR04_10;          // cream
      1: CAT03_OBJ22_VAR04_11;          // mauve
      1: CAT03_OBJ22_VAR04_12;          // purple
      1: CAT03_OBJ22_VAR04_13;          // orange
      1: CAT03_OBJ22_VAR04_14;          // brown
      1: CAT03_OBJ22_VAR04_15;          // grey
      1: CAT03_OBJ22_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ22_VAR_view, view) {
    0: colour_CAT03_OBJ22_VAR01;
    1: colour_CAT03_OBJ22_VAR02;
    2: colour_CAT03_OBJ22_VAR03;
    3: colour_CAT03_OBJ22_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ22_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ22_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ22_VAR_menu, view) {
    0:  layout_CAT03_OBJ22_VAR01_menu;
    1:  layout_CAT03_OBJ22_VAR02_menu;
    2:  layout_CAT03_OBJ22_VAR03_menu;
    3:  layout_CAT03_OBJ22_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ22_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    2:  string(STR_CC);
    3:  string(STR_CC);
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ22) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ22);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ22_VAR;
            purchase:               switch_CAT03_OBJ22_VAR_menu;
            additional_text:        switch_CAT03_OBJ22_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ23
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ23_VAR01_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(294,0,0,256) }
spriteset(spriteset_CAT03_OBJ23_VAR02_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(368,0,0,256) }
spriteset(spriteset_CAT03_OBJ23_VAR03_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(294,266,0,256) }
spriteset(spriteset_CAT03_OBJ23_VAR04_menu, "gfx/CAT03_depots.png") { template_1x1_menu_lowest(368,266,0,256) }
spriteset(spriteset_CAT03_OBJ23_VAR01,      "gfx/CAT03_depots.png") { template_68pix(294,0,0,256) }
spriteset(spriteset_CAT03_OBJ23_VAR02,      "gfx/CAT03_depots.png") { template_68pix(368,0,0,256) }
spriteset(spriteset_CAT03_OBJ23_VAR03,      "gfx/CAT03_depots.png") { template_68pix(294,266,0,256) }
spriteset(spriteset_CAT03_OBJ23_VAR04,      "gfx/CAT03_depots.png") { template_68pix(368,266,0,256) }

spritelayout layout_CAT03_OBJ23_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ23_VAR01;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}       
spritelayout layout_CAT03_OBJ23_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ23_VAR02;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT03_OBJ23_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ23_VAR03;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));  }
}
spritelayout layout_CAT03_OBJ23_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ23_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));   }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ23_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ23_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_RED; }
}
spritelayout layout_CAT03_OBJ23_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ23_VAR02_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_RED; }
}
spritelayout layout_CAT03_OBJ23_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ23_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_RED; }
}
spritelayout layout_CAT03_OBJ23_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ23_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_RED;  }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ23_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ23_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ23_VAR01) {
      1: CAT03_OBJ23_VAR01_1;           // dark blue
      1: CAT03_OBJ23_VAR01_2;           // pale green
      1: CAT03_OBJ23_VAR01_3;           // pink
      1: CAT03_OBJ23_VAR01_4;           // yellow
      1: CAT03_OBJ23_VAR01_5;           // red
      1: CAT03_OBJ23_VAR01_6;           // light blue
      1: CAT03_OBJ23_VAR01_7;           // green
      1: CAT03_OBJ23_VAR01_8;           // dark green
      1: CAT03_OBJ23_VAR01_9;           // blue
      1: CAT03_OBJ23_VAR01_10;          // cream
      1: CAT03_OBJ23_VAR01_11;          // mauve
      1: CAT03_OBJ23_VAR01_12;          // purple
      1: CAT03_OBJ23_VAR01_13;          // orange
      1: CAT03_OBJ23_VAR01_14;          // brown
      1: CAT03_OBJ23_VAR01_15;          // grey
      1: CAT03_OBJ23_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ23_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR02_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ23_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ23_VAR02) {
      1: CAT03_OBJ23_VAR02_1;           // dark blue
      1: CAT03_OBJ23_VAR02_2;           // pale green
      1: CAT03_OBJ23_VAR02_3;           // pink
      1: CAT03_OBJ23_VAR02_4;           // yellow
      1: CAT03_OBJ23_VAR02_5;           // red
      1: CAT03_OBJ23_VAR02_6;           // light blue
      1: CAT03_OBJ23_VAR02_7;           // green
      1: CAT03_OBJ23_VAR02_8;           // dark green
      1: CAT03_OBJ23_VAR02_9;           // blue
      1: CAT03_OBJ23_VAR02_10;          // cream
      1: CAT03_OBJ23_VAR02_11;          // mauve
      1: CAT03_OBJ23_VAR02_12;          // purple
      1: CAT03_OBJ23_VAR02_13;          // orange
      1: CAT03_OBJ23_VAR02_14;          // brown
      1: CAT03_OBJ23_VAR02_15;          // grey
      1: CAT03_OBJ23_VAR02_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ23_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ23_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ23_VAR03) {
      1: CAT03_OBJ23_VAR03_1;           // dark blue
      1: CAT03_OBJ23_VAR03_2;           // pale green
      1: CAT03_OBJ23_VAR03_3;           // pink
      1: CAT03_OBJ23_VAR03_4;           // yellow
      1: CAT03_OBJ23_VAR03_5;           // red
      1: CAT03_OBJ23_VAR03_6;           // light blue
      1: CAT03_OBJ23_VAR03_7;           // green
      1: CAT03_OBJ23_VAR03_8;           // dark green
      1: CAT03_OBJ23_VAR03_9;           // blue
      1: CAT03_OBJ23_VAR03_10;          // cream
      1: CAT03_OBJ23_VAR03_11;          // mauve
      1: CAT03_OBJ23_VAR03_12;          // purple
      1: CAT03_OBJ23_VAR03_13;          // orange
      1: CAT03_OBJ23_VAR03_14;          // brown
      1: CAT03_OBJ23_VAR03_15;          // grey
      1: CAT03_OBJ23_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ23_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ23_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ23_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ23_VAR04) {
      1: CAT03_OBJ23_VAR04_1;           // dark blue
      1: CAT03_OBJ23_VAR04_2;           // pale green
      1: CAT03_OBJ23_VAR04_3;           // pink
      1: CAT03_OBJ23_VAR04_4;           // yellow
      1: CAT03_OBJ23_VAR04_5;           // red
      1: CAT03_OBJ23_VAR04_6;           // light blue
      1: CAT03_OBJ23_VAR04_7;           // green
      1: CAT03_OBJ23_VAR04_8;           // dark green
      1: CAT03_OBJ23_VAR04_9;           // blue
      1: CAT03_OBJ23_VAR04_10;          // cream
      1: CAT03_OBJ23_VAR04_11;          // mauve
      1: CAT03_OBJ23_VAR04_12;          // purple
      1: CAT03_OBJ23_VAR04_13;          // orange
      1: CAT03_OBJ23_VAR04_14;          // brown
      1: CAT03_OBJ23_VAR04_15;          // grey
      1: CAT03_OBJ23_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ23_VAR_view, view) {
    0: colour_CAT03_OBJ23_VAR01;
    1: colour_CAT03_OBJ23_VAR02;
    2: colour_CAT03_OBJ23_VAR03;
    3: colour_CAT03_OBJ23_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ23_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ23_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ23_VAR_menu, view) {
    0:  layout_CAT03_OBJ23_VAR01_menu;
    1:  layout_CAT03_OBJ23_VAR02_menu;
    2:  layout_CAT03_OBJ23_VAR03_menu;
    3:  layout_CAT03_OBJ23_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ23_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    2:  string(STR_CC);
    3:  string(STR_CC);
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ23) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ23);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ23_VAR;
            purchase:               switch_CAT03_OBJ23_VAR_menu;
            additional_text:        switch_CAT03_OBJ23_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ24
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ24_VAR01_menu, "gfx/CAT03_stations.png") { template_stations_menu(0,0,0,256) }
spriteset(spriteset_CAT03_OBJ24_VAR02_menu, "gfx/CAT03_stations.png") { template_stations_menu(72,0,4,256) }
spriteset(spriteset_CAT03_OBJ24_VAR03_menu, "gfx/CAT03_stations.png") { template_stations_menu(0,266,4,256) }
spriteset(spriteset_CAT03_OBJ24_VAR04_menu, "gfx/CAT03_stations.png") { template_stations_menu(74,266,0,256) }
spriteset(spriteset_CAT03_OBJ24_VAR01,      "gfx/CAT03_stations.png") { template_1x1(0,0,0,256) }
spriteset(spriteset_CAT03_OBJ24_VAR02,      "gfx/CAT03_stations.png") { template_68pix(72,0,0,256) }
spriteset(spriteset_CAT03_OBJ24_VAR03,      "gfx/CAT03_stations.png") { template_68pix(0,266,0,256) }
spriteset(spriteset_CAT03_OBJ24_VAR04,      "gfx/CAT03_stations.png") { template_1x1(74,266,0,256) }

spritelayout layout_CAT03_OBJ24_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ24_VAR01;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}       
spritelayout layout_CAT03_OBJ24_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ24_VAR02;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT03_OBJ24_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ24_VAR03;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));  }
}
spritelayout layout_CAT03_OBJ24_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ24_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));   }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ24_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ24_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN; }
}
spritelayout layout_CAT03_OBJ24_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ24_VAR02_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN; }
}
spritelayout layout_CAT03_OBJ24_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ24_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN; }
}
spritelayout layout_CAT03_OBJ24_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ24_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN;  }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ24_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ24_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ24_VAR01) {
      1: CAT03_OBJ24_VAR01_1;           // dark blue
      1: CAT03_OBJ24_VAR01_2;           // pale green
      1: CAT03_OBJ24_VAR01_3;           // pink
      1: CAT03_OBJ24_VAR01_4;           // yellow
      1: CAT03_OBJ24_VAR01_5;           // red
      1: CAT03_OBJ24_VAR01_6;           // light blue
      1: CAT03_OBJ24_VAR01_7;           // green
      1: CAT03_OBJ24_VAR01_8;           // dark green
      1: CAT03_OBJ24_VAR01_9;           // blue
      1: CAT03_OBJ24_VAR01_10;          // cream
      1: CAT03_OBJ24_VAR01_11;          // mauve
      1: CAT03_OBJ24_VAR01_12;          // purple
      1: CAT03_OBJ24_VAR01_13;          // orange
      1: CAT03_OBJ24_VAR01_14;          // brown
      1: CAT03_OBJ24_VAR01_15;          // grey
      1: CAT03_OBJ24_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ24_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR02_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ24_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ24_VAR02) {
      1: CAT03_OBJ24_VAR02_1;           // dark blue
      1: CAT03_OBJ24_VAR02_2;           // pale green
      1: CAT03_OBJ24_VAR02_3;           // pink
      1: CAT03_OBJ24_VAR02_4;           // yellow
      1: CAT03_OBJ24_VAR02_5;           // red
      1: CAT03_OBJ24_VAR02_6;           // light blue
      1: CAT03_OBJ24_VAR02_7;           // green
      1: CAT03_OBJ24_VAR02_8;           // dark green
      1: CAT03_OBJ24_VAR02_9;           // blue
      1: CAT03_OBJ24_VAR02_10;          // cream
      1: CAT03_OBJ24_VAR02_11;          // mauve
      1: CAT03_OBJ24_VAR02_12;          // purple
      1: CAT03_OBJ24_VAR02_13;          // orange
      1: CAT03_OBJ24_VAR02_14;          // brown
      1: CAT03_OBJ24_VAR02_15;          // grey
      1: CAT03_OBJ24_VAR02_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ24_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ24_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ24_VAR03) {
      1: CAT03_OBJ24_VAR03_1;           // dark blue
      1: CAT03_OBJ24_VAR03_2;           // pale green
      1: CAT03_OBJ24_VAR03_3;           // pink
      1: CAT03_OBJ24_VAR03_4;           // yellow
      1: CAT03_OBJ24_VAR03_5;           // red
      1: CAT03_OBJ24_VAR03_6;           // light blue
      1: CAT03_OBJ24_VAR03_7;           // green
      1: CAT03_OBJ24_VAR03_8;           // dark green
      1: CAT03_OBJ24_VAR03_9;           // blue
      1: CAT03_OBJ24_VAR03_10;          // cream
      1: CAT03_OBJ24_VAR03_11;          // mauve
      1: CAT03_OBJ24_VAR03_12;          // purple
      1: CAT03_OBJ24_VAR03_13;          // orange
      1: CAT03_OBJ24_VAR03_14;          // brown
      1: CAT03_OBJ24_VAR03_15;          // grey
      1: CAT03_OBJ24_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ24_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ24_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ24_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ24_VAR04) {
      1: CAT03_OBJ24_VAR04_1;           // dark blue
      1: CAT03_OBJ24_VAR04_2;           // pale green
      1: CAT03_OBJ24_VAR04_3;           // pink
      1: CAT03_OBJ24_VAR04_4;           // yellow
      1: CAT03_OBJ24_VAR04_5;           // red
      1: CAT03_OBJ24_VAR04_6;           // light blue
      1: CAT03_OBJ24_VAR04_7;           // green
      1: CAT03_OBJ24_VAR04_8;           // dark green
      1: CAT03_OBJ24_VAR04_9;           // blue
      1: CAT03_OBJ24_VAR04_10;          // cream
      1: CAT03_OBJ24_VAR04_11;          // mauve
      1: CAT03_OBJ24_VAR04_12;          // purple
      1: CAT03_OBJ24_VAR04_13;          // orange
      1: CAT03_OBJ24_VAR04_14;          // brown
      1: CAT03_OBJ24_VAR04_15;          // grey
      1: CAT03_OBJ24_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ24_VAR_view, view) {
    0: colour_CAT03_OBJ24_VAR03;
    1: colour_CAT03_OBJ24_VAR04;
    2: colour_CAT03_OBJ24_VAR02;
    3: colour_CAT03_OBJ24_VAR01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ24_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ24_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ24_VAR_menu, view) {
    0:  layout_CAT03_OBJ24_VAR03_menu;
    1:  layout_CAT03_OBJ24_VAR04_menu;
    2:  layout_CAT03_OBJ24_VAR02_menu;
    3:  layout_CAT03_OBJ24_VAR01_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ24_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    2:  string(STR_CC);
    3:  string(STR_CC);
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ24) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ24);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ24_VAR;
            purchase:               switch_CAT03_OBJ24_VAR_menu;
            additional_text:        switch_CAT03_OBJ24_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ25
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ25_VAR01_menu, "gfx/CAT03_stations.png") { template_stations_menu(148,0,0,256) }
spriteset(spriteset_CAT03_OBJ25_VAR02_menu, "gfx/CAT03_stations.png") { template_stations_menu(217,0,10,256) }
spriteset(spriteset_CAT03_OBJ25_VAR03_menu, "gfx/CAT03_stations.png") { template_stations_menu(143,266,10,256) }
spriteset(spriteset_CAT03_OBJ25_VAR04_menu, "gfx/CAT03_stations.png") { template_stations_menu(219,266,6,258) }
spriteset(spriteset_CAT03_OBJ25_VAR01,      "gfx/CAT03_stations.png") { template_1x1(148,0,0,256) }
spriteset(spriteset_CAT03_OBJ25_VAR02,      "gfx/CAT03_stations.png") { template_74pix(217,0,0,256) }
spriteset(spriteset_CAT03_OBJ25_VAR03,      "gfx/CAT03_stations.png") { template_74pix(143,266,0,256) }
spriteset(spriteset_CAT03_OBJ25_VAR04,      "gfx/CAT03_stations.png") { template_70pix(219,266,0,258) }

spritelayout layout_CAT03_OBJ25_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ25_VAR01;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}       
spritelayout layout_CAT03_OBJ25_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ25_VAR02;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT03_OBJ25_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ25_VAR03;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));  }
}
spritelayout layout_CAT03_OBJ25_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ25_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));   }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ25_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ25_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_CREAM; }
}
spritelayout layout_CAT03_OBJ25_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ25_VAR02_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_CREAM; }
}
spritelayout layout_CAT03_OBJ25_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ25_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_CREAM; }
}
spritelayout layout_CAT03_OBJ25_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ25_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_CREAM;  }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ25_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ25_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ25_VAR01) {
      1: CAT03_OBJ25_VAR01_1;           // dark blue
      1: CAT03_OBJ25_VAR01_2;           // pale green
      1: CAT03_OBJ25_VAR01_3;           // pink
      1: CAT03_OBJ25_VAR01_4;           // yellow
      1: CAT03_OBJ25_VAR01_5;           // red
      1: CAT03_OBJ25_VAR01_6;           // light blue
      1: CAT03_OBJ25_VAR01_7;           // green
      1: CAT03_OBJ25_VAR01_8;           // dark green
      1: CAT03_OBJ25_VAR01_9;           // blue
      1: CAT03_OBJ25_VAR01_10;          // cream
      1: CAT03_OBJ25_VAR01_11;          // mauve
      1: CAT03_OBJ25_VAR01_12;          // purple
      1: CAT03_OBJ25_VAR01_13;          // orange
      1: CAT03_OBJ25_VAR01_14;          // brown
      1: CAT03_OBJ25_VAR01_15;          // grey
      1: CAT03_OBJ25_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ25_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR02_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ25_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ25_VAR02) {
      1: CAT03_OBJ25_VAR02_1;           // dark blue
      1: CAT03_OBJ25_VAR02_2;           // pale green
      1: CAT03_OBJ25_VAR02_3;           // pink
      1: CAT03_OBJ25_VAR02_4;           // yellow
      1: CAT03_OBJ25_VAR02_5;           // red
      1: CAT03_OBJ25_VAR02_6;           // light blue
      1: CAT03_OBJ25_VAR02_7;           // green
      1: CAT03_OBJ25_VAR02_8;           // dark green
      1: CAT03_OBJ25_VAR02_9;           // blue
      1: CAT03_OBJ25_VAR02_10;          // cream
      1: CAT03_OBJ25_VAR02_11;          // mauve
      1: CAT03_OBJ25_VAR02_12;          // purple
      1: CAT03_OBJ25_VAR02_13;          // orange
      1: CAT03_OBJ25_VAR02_14;          // brown
      1: CAT03_OBJ25_VAR02_15;          // grey
      1: CAT03_OBJ25_VAR02_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ25_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ25_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ25_VAR03) {
      1: CAT03_OBJ25_VAR03_1;           // dark blue
      1: CAT03_OBJ25_VAR03_2;           // pale green
      1: CAT03_OBJ25_VAR03_3;           // pink
      1: CAT03_OBJ25_VAR03_4;           // yellow
      1: CAT03_OBJ25_VAR03_5;           // red
      1: CAT03_OBJ25_VAR03_6;           // light blue
      1: CAT03_OBJ25_VAR03_7;           // green
      1: CAT03_OBJ25_VAR03_8;           // dark green
      1: CAT03_OBJ25_VAR03_9;           // blue
      1: CAT03_OBJ25_VAR03_10;          // cream
      1: CAT03_OBJ25_VAR03_11;          // mauve
      1: CAT03_OBJ25_VAR03_12;          // purple
      1: CAT03_OBJ25_VAR03_13;          // orange
      1: CAT03_OBJ25_VAR03_14;          // brown
      1: CAT03_OBJ25_VAR03_15;          // grey
      1: CAT03_OBJ25_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ25_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ25_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ25_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ25_VAR04) {
      1: CAT03_OBJ25_VAR04_1;           // dark blue
      1: CAT03_OBJ25_VAR04_2;           // pale green
      1: CAT03_OBJ25_VAR04_3;           // pink
      1: CAT03_OBJ25_VAR04_4;           // yellow
      1: CAT03_OBJ25_VAR04_5;           // red
      1: CAT03_OBJ25_VAR04_6;           // light blue
      1: CAT03_OBJ25_VAR04_7;           // green
      1: CAT03_OBJ25_VAR04_8;           // dark green
      1: CAT03_OBJ25_VAR04_9;           // blue
      1: CAT03_OBJ25_VAR04_10;          // cream
      1: CAT03_OBJ25_VAR04_11;          // mauve
      1: CAT03_OBJ25_VAR04_12;          // purple
      1: CAT03_OBJ25_VAR04_13;          // orange
      1: CAT03_OBJ25_VAR04_14;          // brown
      1: CAT03_OBJ25_VAR04_15;          // grey
      1: CAT03_OBJ25_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ25_VAR_view, view) {
    0: colour_CAT03_OBJ25_VAR03;
    1: colour_CAT03_OBJ25_VAR04;
    2: colour_CAT03_OBJ25_VAR02;
    3: colour_CAT03_OBJ25_VAR01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ25_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ25_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ25_VAR_menu, view) {
    0:  layout_CAT03_OBJ25_VAR03_menu;
    1:  layout_CAT03_OBJ25_VAR04_menu;
    2:  layout_CAT03_OBJ25_VAR02_menu;
    3:  layout_CAT03_OBJ25_VAR01_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ25_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    2:  string(STR_CC);
    3:  string(STR_CC);
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ25) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ25);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ25_VAR;
            purchase:               switch_CAT03_OBJ25_VAR_menu;
            additional_text:        switch_CAT03_OBJ25_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ26
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ26_VAR01_menu, "gfx/CAT03_stations.png") { template_1x1_menu_lowest(296,0,0,256) }
spriteset(spriteset_CAT03_OBJ26_VAR02_menu, "gfx/CAT03_stations.png") { template_1x1_menu_lowest(370,0,0,256) }
spriteset(spriteset_CAT03_OBJ26_VAR03_menu, "gfx/CAT03_stations.png") { template_1x1_menu_lowest(296,266,0,256) }
spriteset(spriteset_CAT03_OBJ26_VAR04_menu, "gfx/CAT03_stations.png") { template_1x1_menu_lowest(368,266,4,256) }
spriteset(spriteset_CAT03_OBJ26_VAR01,      "gfx/CAT03_stations.png") { template_1x1(296,0,0,256) }
spriteset(spriteset_CAT03_OBJ26_VAR02,      "gfx/CAT03_stations.png") { template_1x1(370,0,0,256) }
spriteset(spriteset_CAT03_OBJ26_VAR03,      "gfx/CAT03_stations.png") { template_1x1(296,266,0,256) }
spriteset(spriteset_CAT03_OBJ26_VAR04,      "gfx/CAT03_stations.png") { template_68pix(368,266,0,256) }

spritelayout layout_CAT03_OBJ26_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ26_VAR01;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}       
spritelayout layout_CAT03_OBJ26_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ26_VAR02;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT03_OBJ26_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ26_VAR03;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));  }
}
spritelayout layout_CAT03_OBJ26_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ26_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));   }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ26_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ26_VAR01_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_ORANGE; }
}
spritelayout layout_CAT03_OBJ26_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ26_VAR02_menu;
                recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_ORANGE; }
}
spritelayout layout_CAT03_OBJ26_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ26_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_ORANGE; }
}
spritelayout layout_CAT03_OBJ26_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ26_VAR04_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_ORANGE;  }
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ26_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR01_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ26_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ26_VAR01) {
      1: CAT03_OBJ26_VAR01_1;           // dark blue
      1: CAT03_OBJ26_VAR01_2;           // pale green
      1: CAT03_OBJ26_VAR01_3;           // pink
      1: CAT03_OBJ26_VAR01_4;           // yellow
      1: CAT03_OBJ26_VAR01_5;           // red
      1: CAT03_OBJ26_VAR01_6;           // light blue
      1: CAT03_OBJ26_VAR01_7;           // green
      1: CAT03_OBJ26_VAR01_8;           // dark green
      1: CAT03_OBJ26_VAR01_9;           // blue
      1: CAT03_OBJ26_VAR01_10;          // cream
      1: CAT03_OBJ26_VAR01_11;          // mauve
      1: CAT03_OBJ26_VAR01_12;          // purple
      1: CAT03_OBJ26_VAR01_13;          // orange
      1: CAT03_OBJ26_VAR01_14;          // brown
      1: CAT03_OBJ26_VAR01_15;          // grey
      1: CAT03_OBJ26_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ26_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR02_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ26_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ26_VAR02) {
      1: CAT03_OBJ26_VAR02_1;           // dark blue
      1: CAT03_OBJ26_VAR02_2;           // pale green
      1: CAT03_OBJ26_VAR02_3;           // pink
      1: CAT03_OBJ26_VAR02_4;           // yellow
      1: CAT03_OBJ26_VAR02_5;           // red
      1: CAT03_OBJ26_VAR02_6;           // light blue
      1: CAT03_OBJ26_VAR02_7;           // green
      1: CAT03_OBJ26_VAR02_8;           // dark green
      1: CAT03_OBJ26_VAR02_9;           // blue
      1: CAT03_OBJ26_VAR02_10;          // cream
      1: CAT03_OBJ26_VAR02_11;          // mauve
      1: CAT03_OBJ26_VAR02_12;          // purple
      1: CAT03_OBJ26_VAR02_13;          // orange
      1: CAT03_OBJ26_VAR02_14;          // brown
      1: CAT03_OBJ26_VAR02_15;          // grey
      1: CAT03_OBJ26_VAR02_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ26_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR03_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ26_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ26_VAR03) {
      1: CAT03_OBJ26_VAR03_1;           // dark blue
      1: CAT03_OBJ26_VAR03_2;           // pale green
      1: CAT03_OBJ26_VAR03_3;           // pink
      1: CAT03_OBJ26_VAR03_4;           // yellow
      1: CAT03_OBJ26_VAR03_5;           // red
      1: CAT03_OBJ26_VAR03_6;           // light blue
      1: CAT03_OBJ26_VAR03_7;           // green
      1: CAT03_OBJ26_VAR03_8;           // dark green
      1: CAT03_OBJ26_VAR03_9;           // blue
      1: CAT03_OBJ26_VAR03_10;          // cream
      1: CAT03_OBJ26_VAR03_11;          // mauve
      1: CAT03_OBJ26_VAR03_12;          // purple
      1: CAT03_OBJ26_VAR03_13;          // orange
      1: CAT03_OBJ26_VAR03_14;          // brown
      1: CAT03_OBJ26_VAR03_15;          // grey
      1: CAT03_OBJ26_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_1, [STORE_TEMP(775, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_2, [STORE_TEMP(776, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_3, [STORE_TEMP(777, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_4, [STORE_TEMP(778, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_5, [STORE_TEMP(779, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_6, [STORE_TEMP(780, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_7, [STORE_TEMP(781, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_8, [STORE_TEMP(782, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_9, [STORE_TEMP(783, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_10,[STORE_TEMP(784, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_11,[STORE_TEMP(785, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_12,[STORE_TEMP(786, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_13,[STORE_TEMP(787, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_14,[STORE_TEMP(788, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_15,[STORE_TEMP(789, 3)]) { layout_CAT03_OBJ26_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ26_VAR04_16,[STORE_TEMP(790, 3)]) { layout_CAT03_OBJ26_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ26_VAR04) {
      1: CAT03_OBJ26_VAR04_1;           // dark blue
      1: CAT03_OBJ26_VAR04_2;           // pale green
      1: CAT03_OBJ26_VAR04_3;           // pink
      1: CAT03_OBJ26_VAR04_4;           // yellow
      1: CAT03_OBJ26_VAR04_5;           // red
      1: CAT03_OBJ26_VAR04_6;           // light blue
      1: CAT03_OBJ26_VAR04_7;           // green
      1: CAT03_OBJ26_VAR04_8;           // dark green
      1: CAT03_OBJ26_VAR04_9;           // blue
      1: CAT03_OBJ26_VAR04_10;          // cream
      1: CAT03_OBJ26_VAR04_11;          // mauve
      1: CAT03_OBJ26_VAR04_12;          // purple
      1: CAT03_OBJ26_VAR04_13;          // orange
      1: CAT03_OBJ26_VAR04_14;          // brown
      1: CAT03_OBJ26_VAR04_15;          // grey
      1: CAT03_OBJ26_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ26_VAR_view, view) {
    0: colour_CAT03_OBJ26_VAR03;
    1: colour_CAT03_OBJ26_VAR04;
    2: colour_CAT03_OBJ26_VAR02;
    3: colour_CAT03_OBJ26_VAR01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ26_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ26_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ26_VAR_menu, view) {
    0:  layout_CAT03_OBJ26_VAR03_menu;
    1:  layout_CAT03_OBJ26_VAR04_menu;
    2:  layout_CAT03_OBJ26_VAR02_menu;
    3:  layout_CAT03_OBJ26_VAR01_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ26_TXT, view) {
    0:  string(STR_CC);
    1:  string(STR_CC);
    2:  string(STR_CC);
    3:  string(STR_CC);
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ26) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ26);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ26_VAR;
            purchase:               switch_CAT03_OBJ26_VAR_menu;
            additional_text:        switch_CAT03_OBJ26_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ27
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ27_VAR01_menu, "gfx/CAT03_overlap.png") { [0,     0, 96, 256, -35, -225] }
spriteset(spriteset_CAT03_OBJ27_VAR02_menu, "gfx/CAT03_overlap.png") { [212,   0, 96, 256, -63, -225] }
spriteset(spriteset_CAT03_OBJ27_VAR03_menu, "gfx/CAT03_overlap.png") { template_1x2_menu_lowest(0,266,0,256) }
spriteset(spriteset_CAT03_OBJ27_VAR04_menu, "gfx/CAT03_overlap.png") { template_2x1_menu_lowest(212,266,4,256) }
spriteset(spriteset_CAT03_OBJ27_VAR01,      "gfx/CAT03_overlap.png") { [106,   0, 96, 256, -31, -209] }
spriteset(spriteset_CAT03_OBJ27_VAR02,      "gfx/CAT03_overlap.png") { [318,   0, 96, 256, -63, -209] }
spriteset(spriteset_CAT03_OBJ27_VAR03,      "gfx/CAT03_overlap.png") { [106, 266, 96, 256, -63, -225] }
spriteset(spriteset_CAT03_OBJ27_VAR04,      "gfx/CAT03_overlap.png") { [318, 266, 96, 256, -31, -225] }

spritelayout layout_CAT03_OBJ27_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ27_VAR01; }
}       
spritelayout layout_CAT03_OBJ27_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ27_VAR02; }
}
spritelayout layout_CAT03_OBJ27_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ27_VAR03; }
}
spritelayout layout_CAT03_OBJ27_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ27_VAR04;   }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ27_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ27_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ27_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ27_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ27_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ27_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ27_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ27_VAR04_menu;  }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ27_VAR_view, view) {
    0: layout_CAT03_OBJ27_VAR01;
    1: layout_CAT03_OBJ27_VAR02;
    2: layout_CAT03_OBJ27_VAR03;
    3: layout_CAT03_OBJ27_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ27_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ27_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ27_VAR_menu, view) {
    0:  layout_CAT03_OBJ27_VAR01_menu;
    1:  layout_CAT03_OBJ27_VAR02_menu;
    2:  layout_CAT03_OBJ27_VAR03_menu;
    3:  layout_CAT03_OBJ27_VAR04_menu;
}

if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ27) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ27);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ27_VAR;
            purchase:               switch_CAT03_OBJ27_VAR_menu;
            // additional_text:        switch_CAT03_OBJ27_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ28
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ28_VAR01,      "gfx/CAT03_OBJ28.png") { template_1x1(0,0,0,256) }

spritelayout layout_CAT03_OBJ28_VAR01 {
    ground   { sprite: spriteset_CAT03_OBJ28_VAR01; }
}       
spritelayout layout_CAT03_OBJ28_VAR02 {
    ground   { sprite: GROUNDSPRITE_CONCRETE; }
}
spritelayout layout_CAT03_OBJ28_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT03_OBJ28_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ28_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ28_VAR01; }
}
spritelayout layout_CAT03_OBJ28_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: GROUNDSPRITE_CONCRETE; }
}
spritelayout layout_CAT03_OBJ28_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: GROUNDSPRITE_CLEARED; }
}
spritelayout layout_CAT03_OBJ28_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: GROUNDSPRITE_NORMAL; }
}


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ28_VAR_view, view) {
    0: layout_CAT03_OBJ28_VAR01;
    1: layout_CAT03_OBJ28_VAR02;
    2: layout_CAT03_OBJ28_VAR03;
    3: layout_CAT03_OBJ28_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ28_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ28_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ28_VAR_menu, view) {
    0:  layout_CAT03_OBJ28_VAR01_menu;
    1:  layout_CAT03_OBJ28_VAR02_menu;
    2:  layout_CAT03_OBJ28_VAR03_menu;
    3:  layout_CAT03_OBJ28_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ28_TXT, view) {
    0:  string(STR_CAT03_OBJ28_VAR01);
    1:  string(STR_CAT03_OBJ28_VAR02);
    2:  string(STR_CAT03_OBJ28_VAR03);
    3:  string(STR_CAT03_OBJ28_VAR04);
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ28) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ28);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ28_VAR;
            purchase:               switch_CAT03_OBJ28_VAR_menu;
            additional_text:        switch_CAT03_OBJ28_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ29
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ29_VAR01,      "gfx/CAT03_fences.png") { template_1x1(0,  0,   0, 256) }
spriteset(spriteset_CAT03_OBJ29_VAR02,      "gfx/CAT03_fences.png") { template_1x1(74, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ29_VAR03,      "gfx/CAT03_fences.png") { template_1x1(0,  266, 0, 256) }
spriteset(spriteset_CAT03_OBJ29_VAR04,      "gfx/CAT03_fences.png") { template_1x1(74, 266, 0, 256) }

spritelayout layout_CAT03_OBJ29_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ29_VAR01; }
}       
spritelayout layout_CAT03_OBJ29_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ29_VAR02; }
}
spritelayout layout_CAT03_OBJ29_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ29_VAR03; }
}
spritelayout layout_CAT03_OBJ29_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ29_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ29_VAR01_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT03_OBJ29_VAR01; }
}
spritelayout layout_CAT03_OBJ29_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT03_OBJ29_VAR02; }
}
spritelayout layout_CAT03_OBJ29_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT03_OBJ29_VAR03; }
}
spritelayout layout_CAT03_OBJ29_VAR04_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT03_OBJ29_VAR04; }
}


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ29_VAR_view, view) {
    0: layout_CAT03_OBJ29_VAR01;
    1: layout_CAT03_OBJ29_VAR02;
    2: layout_CAT03_OBJ29_VAR03;
    3: layout_CAT03_OBJ29_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ29_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ29_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ29_VAR_menu, view) {
    0:  layout_CAT03_OBJ29_VAR01_menu;
    1:  layout_CAT03_OBJ29_VAR02_menu;
    2:  layout_CAT03_OBJ29_VAR03_menu;
    3:  layout_CAT03_OBJ29_VAR04_menu;
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ29) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ29);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ29_VAR;
            purchase:               switch_CAT03_OBJ29_VAR_menu;
            // additional_text:        switch_CAT03_OBJ29_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ31
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ31_VAR01_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(158, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ31_VAR02_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(232, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ31_VAR03_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(158, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ31_VAR04_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(232, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ31_VAR01,      "gfx/CAT03_fences.png") { template_1x1(158, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ31_VAR02,      "gfx/CAT03_fences.png") { template_1x1(232, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ31_VAR03,      "gfx/CAT03_fences.png") { template_1x1(158, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ31_VAR04,      "gfx/CAT03_fences.png") { template_1x1(232, 266, 0, 256) }

spritelayout layout_CAT03_OBJ31_VAR01 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ31_VAR01; }
}       
spritelayout layout_CAT03_OBJ31_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ31_VAR02; }
}
spritelayout layout_CAT03_OBJ31_VAR03 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ31_VAR03; }
}
spritelayout layout_CAT03_OBJ31_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ31_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ31_VAR01_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT03_OBJ31_VAR01; }
}
spritelayout layout_CAT03_OBJ31_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT03_OBJ31_VAR02; }
}
spritelayout layout_CAT03_OBJ31_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT03_OBJ31_VAR03; }
}
spritelayout layout_CAT03_OBJ31_VAR04_menu {
    ground   { sprite: GROUNDSPRITE_NORMAL; }
    building { sprite: spriteset_CAT03_OBJ31_VAR04; }
}


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ31_VAR_view, view) {
    0: layout_CAT03_OBJ31_VAR03;
    1: layout_CAT03_OBJ31_VAR04;
    2: layout_CAT03_OBJ31_VAR02;
    3: layout_CAT03_OBJ31_VAR01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ31_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ31_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ31_VAR_menu, view) {
    0:  layout_CAT03_OBJ31_VAR03_menu;
    1:  layout_CAT03_OBJ31_VAR04_menu;
    2:  layout_CAT03_OBJ31_VAR02_menu;
    3:  layout_CAT03_OBJ31_VAR01_menu;
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ31) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ31);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ31_VAR;
            purchase:               switch_CAT03_OBJ31_VAR_menu;
            // additional_text:        switch_CAT03_OBJ31_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ30
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ30_VAR01_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(0,  0,   0, 256) }
spriteset(spriteset_CAT03_OBJ30_VAR02_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(74, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ30_VAR03_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(0,  266, 0, 256) }
spriteset(spriteset_CAT03_OBJ30_VAR04_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(74, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ30_VAR01,      "gfx/CAT03_fences.png") { template_1x1(0,  0,   0, 256) }
spriteset(spriteset_CAT03_OBJ30_VAR02,      "gfx/CAT03_fences.png") { template_1x1(74, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ30_VAR03,      "gfx/CAT03_fences.png") { template_1x1(0,  266, 0, 256) }
spriteset(spriteset_CAT03_OBJ30_VAR04,      "gfx/CAT03_fences.png") { template_1x1(74, 266, 0, 256) }

spritelayout layout_CAT03_OBJ30_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ30_VAR01; }
}       
spritelayout layout_CAT03_OBJ30_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ30_VAR02; }
}
spritelayout layout_CAT03_OBJ30_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ30_VAR03; }
}
spritelayout layout_CAT03_OBJ30_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ30_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ30_VAR01_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ30_VAR01; }
}
spritelayout layout_CAT03_OBJ30_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ30_VAR02; }
}
spritelayout layout_CAT03_OBJ30_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ30_VAR03; }
}
spritelayout layout_CAT03_OBJ30_VAR04_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ30_VAR04; }
}


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ30_VAR_view, view) {
    0: layout_CAT03_OBJ30_VAR01;
    1: layout_CAT03_OBJ30_VAR02;
    2: layout_CAT03_OBJ30_VAR03;
    3: layout_CAT03_OBJ30_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ30_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ30_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ30_VAR_menu, view) {
    0:  layout_CAT03_OBJ30_VAR01_menu;
    1:  layout_CAT03_OBJ30_VAR02_menu;
    2:  layout_CAT03_OBJ30_VAR03_menu;
    3:  layout_CAT03_OBJ30_VAR04_menu;
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ30) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ30);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ30_VAR;
            purchase:               switch_CAT03_OBJ30_VAR_menu;
            // additional_text:        switch_CAT03_OBJ30_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ32
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ32_VAR01_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(158, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ32_VAR02_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(232, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ32_VAR03_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(158, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ32_VAR04_menu, "gfx/CAT03_fences.png") { template_1x1_menu_lowest(232, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ32_VAR01,      "gfx/CAT03_fences.png") { template_1x1(158, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ32_VAR02,      "gfx/CAT03_fences.png") { template_1x1(232, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ32_VAR03,      "gfx/CAT03_fences.png") { template_1x1(158, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ32_VAR04,      "gfx/CAT03_fences.png") { template_1x1(232, 266, 0, 256) }

spritelayout layout_CAT03_OBJ32_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ32_VAR01; }
}       
spritelayout layout_CAT03_OBJ32_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ32_VAR02; }
}
spritelayout layout_CAT03_OBJ32_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ32_VAR03; }
}
spritelayout layout_CAT03_OBJ32_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ32_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ32_VAR01_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ32_VAR01; }
}
spritelayout layout_CAT03_OBJ32_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ32_VAR02; }
}
spritelayout layout_CAT03_OBJ32_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ32_VAR03; }
}
spritelayout layout_CAT03_OBJ32_VAR04_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ32_VAR04; }
}


// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ32_VAR_view, view) {
    0: layout_CAT03_OBJ32_VAR03;
    1: layout_CAT03_OBJ32_VAR04;
    2: layout_CAT03_OBJ32_VAR02;
    3: layout_CAT03_OBJ32_VAR01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ32_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ32_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ32_VAR_menu, view) {
    0:  layout_CAT03_OBJ32_VAR03_menu;
    1:  layout_CAT03_OBJ32_VAR04_menu;
    2:  layout_CAT03_OBJ32_VAR02_menu;
    3:  layout_CAT03_OBJ32_VAR01_menu;
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ32) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ32);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ32_VAR;
            purchase:               switch_CAT03_OBJ32_VAR_menu;
            // additional_text:        switch_CAT03_OBJ32_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ33
/////////////////////////////////////////////////////////////////////
                                                                                
spriteset(spriteset_CAT03_OBJ33_VAR01_menu, "gfx/CAT03_cranes.png") { [0,   0,   96, 256, -37, 0-132] }
spriteset(spriteset_CAT03_OBJ33_VAR02_menu, "gfx/CAT03_cranes.png") { [212, 0,   96, 256, -57, 0-134] }
spriteset(spriteset_CAT03_OBJ33_VAR03_menu, "gfx/CAT03_cranes.png") { [0,   266, 96, 256, -33, 0-116] }
spriteset(spriteset_CAT03_OBJ33_VAR04_menu, "gfx/CAT03_cranes.png") { [212, 266, 96, 256, -63, 0-168] }
spriteset(spriteset_CAT03_OBJ33_VAR01a,     "gfx/CAT03_cranes.png") { template_96pix(0,   0,   0, 256) }
spriteset(spriteset_CAT03_OBJ33_VAR01b,     "gfx/CAT03_cranes.png") { template_96pix(106, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ33_VAR02,      "gfx/CAT03_cranes.png") { template_96pix(212, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ33_VAR03a,     "gfx/CAT03_cranes.png") { template_96pix(0,   266, 0, 256) }
spriteset(spriteset_CAT03_OBJ33_VAR03b,     "gfx/CAT03_cranes.png") { template_96pix(106, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ33_VAR04,      "gfx/CAT03_cranes.png") { template_96pix(212, 266, 0, 256) }

spritelayout layout_CAT03_OBJ33_VAR01a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ33_VAR01a; }
}
spritelayout layout_CAT03_OBJ33_VAR01b {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ33_VAR01b; }
}
spritelayout layout_CAT03_OBJ33_VAR02 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ33_VAR02; }
}
spritelayout layout_CAT03_OBJ33_VAR03a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ33_VAR03a; }
}
spritelayout layout_CAT03_OBJ33_VAR03b {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ33_VAR03b; }
}
spritelayout layout_CAT03_OBJ33_VAR04 {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ33_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ33_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ33_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ33_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ33_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ33_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ33_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ33_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ33_VAR04_menu; }
}

random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ33_VAR01) {
      1: layout_CAT03_OBJ33_VAR01a;
      1: layout_CAT03_OBJ33_VAR01b;  }

random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ33_VAR03) {
      1: layout_CAT03_OBJ33_VAR03a;
      1: layout_CAT03_OBJ33_VAR03b;  }

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ33_VAR_view, view) {
    0: switch_CAT03_OBJ33_VAR01;
    1: layout_CAT03_OBJ33_VAR02;
    2: switch_CAT03_OBJ33_VAR03;
    3: layout_CAT03_OBJ33_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ33_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ33_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ33_VAR_menu, view) {
    0:  layout_CAT03_OBJ33_VAR01_menu;
    1:  layout_CAT03_OBJ33_VAR02_menu;
    2:  layout_CAT03_OBJ33_VAR03_menu;
    3:  layout_CAT03_OBJ33_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ33_TXT, view) {
    0:  string(STR_CAT03_OBJ31_VAR01);
    // 1:  string(STR_CAT03_OBJ33_VAR01);
    2:  string(STR_CAT03_OBJ31_VAR01);
    // 3:  string(STR_CC);
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ33) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ33);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ33_VAR;
            purchase:               switch_CAT03_OBJ33_VAR_menu;
            additional_text:        switch_CAT03_OBJ33_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ34
/////////////////////////////////////////////////////////////////////
                                                                                
spriteset(spriteset_CAT03_OBJ34_VAR01_menu, "gfx/CAT03_cranes.png") { [106, 0,   96, 256, -37, 0-132] }
spriteset(spriteset_CAT03_OBJ34_VAR02_menu, "gfx/CAT03_cranes.png") { [212, 0,   96, 256, -57, 0-134] }
spriteset(spriteset_CAT03_OBJ34_VAR03_menu, "gfx/CAT03_cranes.png") { [106, 266, 96, 256, -33, 0-116] }
spriteset(spriteset_CAT03_OBJ34_VAR04_menu, "gfx/CAT03_cranes.png") { [212, 266, 96, 256, -63, 0-168] }
spriteset(spriteset_CAT03_OBJ34_VAR01a,     "gfx/CAT03_cranes.png") { template_96pix(0,   0,   0, 256) }
spriteset(spriteset_CAT03_OBJ34_VAR01b,     "gfx/CAT03_cranes.png") { template_96pix(106, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ34_VAR02,      "gfx/CAT03_cranes.png") { template_96pix(212, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ34_VAR03a,     "gfx/CAT03_cranes.png") { template_96pix(0,   266, 0, 256) }
spriteset(spriteset_CAT03_OBJ34_VAR03b,     "gfx/CAT03_cranes.png") { template_96pix(106, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ34_VAR04,      "gfx/CAT03_cranes.png") { template_96pix(212, 266, 0, 256) }

spritelayout layout_CAT03_OBJ34_VAR01a {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ34_VAR01a; }
}
spritelayout layout_CAT03_OBJ34_VAR01b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ34_VAR01b; }
}
spritelayout layout_CAT03_OBJ34_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ34_VAR02; }
}
spritelayout layout_CAT03_OBJ34_VAR03a {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ34_VAR03a; }
}
spritelayout layout_CAT03_OBJ34_VAR03b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ34_VAR03b; }
}
spritelayout layout_CAT03_OBJ34_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ34_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ34_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ34_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ34_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ34_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ34_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ34_VAR03_menu; }
}
spritelayout layout_CAT03_OBJ34_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ34_VAR04_menu; }
}

random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ34_VAR01) {
      1: layout_CAT03_OBJ34_VAR01a;
      1: layout_CAT03_OBJ34_VAR01b;  }

random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ34_VAR03) {
      1: layout_CAT03_OBJ34_VAR03a;
      1: layout_CAT03_OBJ34_VAR03b;  }

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ34_VAR_view, view) {
    0: switch_CAT03_OBJ34_VAR01;
    1: layout_CAT03_OBJ34_VAR02;
    2: switch_CAT03_OBJ34_VAR03;
    3: layout_CAT03_OBJ34_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ34_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ34_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ34_VAR_menu, view) {
    0:  layout_CAT03_OBJ34_VAR01_menu;
    1:  layout_CAT03_OBJ34_VAR02_menu;
    2:  layout_CAT03_OBJ34_VAR03_menu;
    3:  layout_CAT03_OBJ34_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ34_TXT, view) {
    0:  string(STR_CAT03_OBJ31_VAR01);
    // 1:  string(STR_CAT03_OBJ34_VAR01);
    2:  string(STR_CAT03_OBJ31_VAR01);
    // 3:  string(STR_CC);
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ34) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ34);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ34_VAR;
            purchase:               switch_CAT03_OBJ34_VAR_menu;
            additional_text:        switch_CAT03_OBJ34_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ35
/////////////////////////////////////////////////////////////////////
                                                                                
spriteset(spriteset_CAT03_OBJ35_VAR01_menu, "gfx/CAT03_construction.png") { [0,   0,   96, 256, -47, 0-172] }
spriteset(spriteset_CAT03_OBJ35_VAR02_menu, "gfx/CAT03_construction.png") { [212, 0,   96, 256, -47, 0-192] }
spriteset(spriteset_CAT03_OBJ35_VAR03_menu, "gfx/CAT03_construction.png") { [0,   266, 96, 256, -47, 0-128] }
spriteset(spriteset_CAT03_OBJ35_VAR04_menu, "gfx/CAT03_construction.png") { [212, 266, 96, 256, -47, 0-135] }
spriteset(spriteset_CAT03_OBJ35_VAR01a,     "gfx/CAT03_construction.png") { template_96pix(0,     0, 0, 256) }
spriteset(spriteset_CAT03_OBJ35_VAR01b,     "gfx/CAT03_construction.png") { template_96pix(106,   0, 0, 256) }
spriteset(spriteset_CAT03_OBJ35_VAR02,      "gfx/CAT03_construction.png") { template_96pix(212,   0, 0, 256) }
spriteset(spriteset_CAT03_OBJ35_VAR03a,     "gfx/CAT03_construction.png") { template_96pix(0,   266, 0, 256) }
spriteset(spriteset_CAT03_OBJ35_VAR03b,     "gfx/CAT03_construction.png") { template_96pix(106, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ35_VAR04,      "gfx/CAT03_construction.png") { template_96pix(212, 266, 0, 256) }

spritelayout layout_CAT03_OBJ35_VAR01a {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ35_VAR01a;
               recolour_mode:RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_BROWN; }
}
spritelayout layout_CAT03_OBJ35_VAR01b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ35_VAR01b;
               recolour_mode:RECOLOUR_REMAP;
               palette: PALETTE_CC_PALE_GREEN; }
}
spritelayout layout_CAT03_OBJ35_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ35_VAR02;
               recolour_mode:RECOLOUR_REMAP;
               palette: PALETTE_CC_RED; }
}
spritelayout layout_CAT03_OBJ35_VAR03a {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ35_VAR03a;
               recolour_mode:RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_CONCRETE;  }
}
spritelayout layout_CAT03_OBJ35_VAR03b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ35_VAR03b;
               recolour_mode:RECOLOUR_REMAP;
               palette: PALETTE_CC_LIGHT_BLUE;  }
}
spritelayout layout_CAT03_OBJ35_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ35_VAR04;
               recolour_mode:RECOLOUR_REMAP;
               palette: PALETTE_CC_PINK; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ35_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ35_VAR01_menu;
               recolour_mode:RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_BROWN; }
}
spritelayout layout_CAT03_OBJ35_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ35_VAR02_menu;
               recolour_mode:RECOLOUR_REMAP;
               palette: PALETTE_CC_RED; }
}
spritelayout layout_CAT03_OBJ35_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ35_VAR03_menu;
               recolour_mode:RECOLOUR_REMAP;
               palette: PALETTE_STRUCT_CONCRETE; }
}
spritelayout layout_CAT03_OBJ35_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ35_VAR04_menu;
               recolour_mode:RECOLOUR_REMAP;
               palette: PALETTE_CC_PINK; }
}

random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ35_VAR01) {
      1: layout_CAT03_OBJ35_VAR01a;
      1: layout_CAT03_OBJ35_VAR01b;  }

random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ35_VAR03) {
      1: layout_CAT03_OBJ35_VAR03a;
      1: layout_CAT03_OBJ35_VAR03b;  }

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ35_VAR_view, view) {
    0: switch_CAT03_OBJ35_VAR01;
    1: layout_CAT03_OBJ35_VAR02;
    2: switch_CAT03_OBJ35_VAR03;
    3: layout_CAT03_OBJ35_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ35_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ35_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ35_VAR_menu, view) {
    0:  layout_CAT03_OBJ35_VAR01_menu;
    1:  layout_CAT03_OBJ35_VAR02_menu;
    2:  layout_CAT03_OBJ35_VAR03_menu;
    3:  layout_CAT03_OBJ35_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ35_TXT, view) {
    0:  string(STR_CAT03_OBJ31_VAR01);
    // 1:  string(STR_CAT03_OBJ35_VAR01);
    2:  string(STR_CAT03_OBJ31_VAR01);
    // 3:  string(STR_CC);
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ35) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ35);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ35_VAR;
            purchase:               switch_CAT03_OBJ35_VAR_menu;
            additional_text:        switch_CAT03_OBJ35_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ36
/////////////////////////////////////////////////////////////////////
                                                                                
spriteset(spriteset_CAT03_OBJ36_VAR01_menu, "gfx/CAT03_construction.png") { [328, 0,   96, 256, -47, 0-192] }
spriteset(spriteset_CAT03_OBJ36_VAR02_menu, "gfx/CAT03_construction.png") { [434, 0,   96, 256, -47, 0-225] }
spriteset(spriteset_CAT03_OBJ36_VAR03_menu, "gfx/CAT03_construction.png") { [328, 266, 96, 256, -47, 0-210] }
spriteset(spriteset_CAT03_OBJ36_VAR04_menu, "gfx/CAT03_construction.png") { [434, 266, 96, 256, -47, 0-225] }
spriteset(spriteset_CAT03_OBJ36_VAR01,      "gfx/CAT03_construction.png") { template_96pix(328, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ36_VAR02,      "gfx/CAT03_construction.png") { template_96pix(434, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ36_VAR03,      "gfx/CAT03_construction.png") { template_96pix(328, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ36_VAR04,      "gfx/CAT03_construction.png") { template_96pix(434, 266, 0, 256) }

spritelayout layout_CAT03_OBJ36_VAR01 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ36_VAR01; }
}
spritelayout layout_CAT03_OBJ36_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ36_VAR02; }
}
spritelayout layout_CAT03_OBJ36_VAR03 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ36_VAR03;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN;   }
}
spritelayout layout_CAT03_OBJ36_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ36_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ36_VAR01_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ36_VAR01_menu; }
}
spritelayout layout_CAT03_OBJ36_VAR02_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ36_VAR02_menu; }
}
spritelayout layout_CAT03_OBJ36_VAR03_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ36_VAR03_menu;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_GREEN; }
}
spritelayout layout_CAT03_OBJ36_VAR04_menu {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ36_VAR04_menu; }
}

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ36_VAR_view, view) {
    0: layout_CAT03_OBJ36_VAR01;
    1: layout_CAT03_OBJ36_VAR02;
    2: layout_CAT03_OBJ36_VAR03;
    3: layout_CAT03_OBJ36_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ36_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ36_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ36_VAR_menu, view) {
    0:  layout_CAT03_OBJ36_VAR01_menu;
    1:  layout_CAT03_OBJ36_VAR02_menu;
    2:  layout_CAT03_OBJ36_VAR03_menu;
    3:  layout_CAT03_OBJ36_VAR04_menu;
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ36) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ36);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ36_VAR;
            purchase:               switch_CAT03_OBJ36_VAR_menu;
            // additional_text:        switch_CAT03_OBJ36_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ37
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ37_VAR01a,     "gfx/CAT03_construction.png") { template_1x1(550, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ37_VAR01b,     "gfx/CAT03_construction.png") { template_1x1(624, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ37_VAR02,      "gfx/CAT03_construction.png") { template_1x1(698, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ37_VAR03a,     "gfx/CAT03_construction.png") { template_1x1(550, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ37_VAR03b,     "gfx/CAT03_construction.png"){template_74pix(619, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ37_VAR04,      "gfx/CAT03_construction.png") { template_1x1(698, 266, 0, 256) }

spritelayout layout_CAT03_OBJ37_VAR01a {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ37_VAR01a; }
}
spritelayout layout_CAT03_OBJ37_VAR01b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ37_VAR01b; }
}  
spritelayout layout_CAT03_OBJ37_VAR02 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ37_VAR02; }
}
spritelayout layout_CAT03_OBJ37_VAR03a {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ37_VAR03a; }
}
spritelayout layout_CAT03_OBJ37_VAR03b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ37_VAR03b; }
}
spritelayout layout_CAT03_OBJ37_VAR04 {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ37_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ37_VAR01_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ37_VAR01a; }
}
spritelayout layout_CAT03_OBJ37_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ37_VAR02; }
}
spritelayout layout_CAT03_OBJ37_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ37_VAR03a; }
}
spritelayout layout_CAT03_OBJ37_VAR04_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ37_VAR04; }
}

random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ37_VAR01) {
      1: layout_CAT03_OBJ37_VAR01a;
      1: layout_CAT03_OBJ37_VAR01b;  }

random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ37_VAR03) {
      1: layout_CAT03_OBJ37_VAR03a;
      1: layout_CAT03_OBJ37_VAR03b;  }

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ37_VAR_view, view) {
    0: switch_CAT03_OBJ37_VAR01;
    1: layout_CAT03_OBJ37_VAR02;
    2: switch_CAT03_OBJ37_VAR03;
    3: layout_CAT03_OBJ37_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ37_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ37_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ37_VAR_menu, view) {
    0:  layout_CAT03_OBJ37_VAR01_menu;
    1:  layout_CAT03_OBJ37_VAR02_menu;
    2:  layout_CAT03_OBJ37_VAR03_menu;
    3:  layout_CAT03_OBJ37_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ37_TXT, view) {
    0:  string(STR_CAT03_OBJ31_VAR01);
    // 1:  string(STR_CAT03_OBJ34_VAR01);
    2:  string(STR_CAT03_OBJ31_VAR01);
    // 3:  string(STR_CC);
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ37) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ37);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ37_VAR;
            purchase:               switch_CAT03_OBJ37_VAR_menu;
            additional_text:        switch_CAT03_OBJ37_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ38
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ38_VAR01, "gfx/CAT03_vehicles.png") { template_1x1(0, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ38_VAR02, "gfx/CAT03_vehicles.png") { template_1x1(74, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ38_VAR03, "gfx/CAT03_vehicles.png") { template_1x1(0, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ38_VAR04, "gfx/CAT03_vehicles.png") { template_1x1(74, 266, 0, 256) }

spritelayout layout_CAT03_OBJ38_VAR01a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ38_VAR01; }
}
spritelayout layout_CAT03_OBJ38_VAR01b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ38_VAR01; }
}
/////////////////////////////////////////////////
spritelayout layout_CAT03_OBJ38_VAR02a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ38_VAR02; }
}
spritelayout layout_CAT03_OBJ38_VAR02b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ38_VAR02; }
}
/////////////////////////////////////////////////
spritelayout layout_CAT03_OBJ38_VAR03a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ38_VAR03; }
}
spritelayout layout_CAT03_OBJ38_VAR03b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ38_VAR03; }
}
/////////////////////////////////////////////////
spritelayout layout_CAT03_OBJ38_VAR04a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ38_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));  }
}
spritelayout layout_CAT03_OBJ38_VAR04b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ38_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));  }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ38_VAR01_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ38_VAR01; }
}
spritelayout layout_CAT03_OBJ38_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ38_VAR02; }
}
spritelayout layout_CAT03_OBJ38_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ38_VAR03; }
}
spritelayout layout_CAT03_OBJ38_VAR04_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ38_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_LIGHT_BLUE;  }
}

random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ38_VAR01) {
    1: layout_CAT03_OBJ38_VAR01a;
    3: layout_CAT03_OBJ38_VAR01b;
}
random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ38_VAR02) {
    1: layout_CAT03_OBJ38_VAR02a;
    3: layout_CAT03_OBJ38_VAR02b;
}
random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ38_VAR03) {
    1: layout_CAT03_OBJ38_VAR03a;
    3: layout_CAT03_OBJ38_VAR03b;
}
random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ38_VAR04) {
    1: layout_CAT03_OBJ38_VAR04a;
    3: layout_CAT03_OBJ38_VAR04b;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_1, [STORE_TEMP(775, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_2, [STORE_TEMP(776, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_3, [STORE_TEMP(777, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_4, [STORE_TEMP(778, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_5, [STORE_TEMP(779, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_6, [STORE_TEMP(780, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_7, [STORE_TEMP(781, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_8, [STORE_TEMP(782, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_9, [STORE_TEMP(783, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_10,[STORE_TEMP(784, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_11,[STORE_TEMP(785, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_12,[STORE_TEMP(786, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_13,[STORE_TEMP(787, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_14,[STORE_TEMP(788, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_15,[STORE_TEMP(789, 3)]) { switch_CAT03_OBJ38_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ38_VAR04_16,[STORE_TEMP(790, 3)]) { switch_CAT03_OBJ38_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ38_VAR04) {
      1: CAT03_OBJ38_VAR04_1;           // dark blue
      1: CAT03_OBJ38_VAR04_2;           // pale green
      1: CAT03_OBJ38_VAR04_3;           // pink
      1: CAT03_OBJ38_VAR04_4;           // yellow
      1: CAT03_OBJ38_VAR04_5;           // red
      1: CAT03_OBJ38_VAR04_6;           // light blue
      1: CAT03_OBJ38_VAR04_7;           // green
      1: CAT03_OBJ38_VAR04_8;           // dark green
      1: CAT03_OBJ38_VAR04_9;           // blue
      1: CAT03_OBJ38_VAR04_10;          // cream
      1: CAT03_OBJ38_VAR04_11;          // mauve
      1: CAT03_OBJ38_VAR04_12;          // purple
      1: CAT03_OBJ38_VAR04_13;          // orange
      1: CAT03_OBJ38_VAR04_14;          // brown
      1: CAT03_OBJ38_VAR04_15;          // grey
      1: CAT03_OBJ38_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ38_VAR_view, view) {
    0: switch_CAT03_OBJ38_VAR01;
    1: switch_CAT03_OBJ38_VAR02;
    2: switch_CAT03_OBJ38_VAR03;
    3: colour_CAT03_OBJ38_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ38_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ38_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ38_VAR_menu, view) {
    0:  layout_CAT03_OBJ38_VAR01_menu;
    1:  layout_CAT03_OBJ38_VAR02_menu;
    2:  layout_CAT03_OBJ38_VAR03_menu;
    3:  layout_CAT03_OBJ38_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ38_TXT, view) {
    0:  string(STR_CAT03_OBJ38_VAR01);
    1:  string(STR_CAT03_OBJ38_VAR01);
    2:  string(STR_CAT03_OBJ38_VAR01);
    3:  string(STR_CAT03_OBJ38_VAR01);
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ38) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ38);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ38_VAR;
            purchase:               switch_CAT03_OBJ38_VAR_menu;
            additional_text:        switch_CAT03_OBJ38_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ39
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ39_VAR01, "gfx/CAT03_vehicles.png") { template_1x1(158, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ39_VAR02, "gfx/CAT03_vehicles.png") { template_1x1(232, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ39_VAR03, "gfx/CAT03_vehicles.png") { template_1x1(158, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ39_VAR04, "gfx/CAT03_vehicles.png") { template_1x1(232, 266, 0, 256) }

spritelayout layout_CAT03_OBJ39_VAR01a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ39_VAR01;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT03_OBJ39_VAR01b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ39_VAR01;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
/////////////////////////////////////////
spritelayout layout_CAT03_OBJ39_VAR02a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ39_VAR02;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT03_OBJ39_VAR02b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ39_VAR02;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
/////////////////////////////////////////////
spritelayout layout_CAT03_OBJ39_VAR03a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ39_VAR03; }
}
spritelayout layout_CAT03_OBJ39_VAR03b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ39_VAR03; }
}
/////////////////////////////////////////////
spritelayout layout_CAT03_OBJ39_VAR04a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ39_VAR04;  }
}
spritelayout layout_CAT03_OBJ39_VAR04b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ39_VAR04; }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ39_VAR01_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ39_VAR01;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_PINK; }
}
spritelayout layout_CAT03_OBJ39_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ39_VAR02;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_PALE_GREEN; }
}
spritelayout layout_CAT03_OBJ39_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ39_VAR03; }
}
spritelayout layout_CAT03_OBJ39_VAR04_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ39_VAR04;  }
}

random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ39_VAR01) {
    1: layout_CAT03_OBJ39_VAR01a;
    3: layout_CAT03_OBJ39_VAR01b;
}
random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ39_VAR02) {
    1: layout_CAT03_OBJ39_VAR02a;
    3: layout_CAT03_OBJ39_VAR02b;
}
random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ39_VAR03) {
    1: layout_CAT03_OBJ39_VAR03a;
    3: layout_CAT03_OBJ39_VAR03b;
}
random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ39_VAR04) {
    1: layout_CAT03_OBJ39_VAR04a;
    3: layout_CAT03_OBJ39_VAR04b;
}


// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_1, [STORE_TEMP(775, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_2, [STORE_TEMP(776, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_3, [STORE_TEMP(777, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_4, [STORE_TEMP(778, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_5, [STORE_TEMP(779, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_6, [STORE_TEMP(780, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_7, [STORE_TEMP(781, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_8, [STORE_TEMP(782, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_9, [STORE_TEMP(783, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_10,[STORE_TEMP(784, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_11,[STORE_TEMP(785, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_12,[STORE_TEMP(786, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_13,[STORE_TEMP(787, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_14,[STORE_TEMP(788, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_15,[STORE_TEMP(789, 3)]) { switch_CAT03_OBJ39_VAR01; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR01_16,[STORE_TEMP(790, 3)]) { switch_CAT03_OBJ39_VAR01; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ39_VAR01) {
      1: CAT03_OBJ39_VAR01_1;           // dark blue
      1: CAT03_OBJ39_VAR01_2;           // pale green
      1: CAT03_OBJ39_VAR01_3;           // pink
      1: CAT03_OBJ39_VAR01_4;           // yellow
      1: CAT03_OBJ39_VAR01_5;           // red
      1: CAT03_OBJ39_VAR01_6;           // light blue
      1: CAT03_OBJ39_VAR01_7;           // green
      1: CAT03_OBJ39_VAR01_8;           // dark green
      1: CAT03_OBJ39_VAR01_9;           // blue
      1: CAT03_OBJ39_VAR01_10;          // cream
      1: CAT03_OBJ39_VAR01_11;          // mauve
      1: CAT03_OBJ39_VAR01_12;          // purple
      1: CAT03_OBJ39_VAR01_13;          // orange
      1: CAT03_OBJ39_VAR01_14;          // brown
      1: CAT03_OBJ39_VAR01_15;          // grey
      1: CAT03_OBJ39_VAR01_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_1, [STORE_TEMP(775, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_2, [STORE_TEMP(776, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_3, [STORE_TEMP(777, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_4, [STORE_TEMP(778, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_5, [STORE_TEMP(779, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_6, [STORE_TEMP(780, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_7, [STORE_TEMP(781, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_8, [STORE_TEMP(782, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_9, [STORE_TEMP(783, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_10,[STORE_TEMP(784, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_11,[STORE_TEMP(785, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_12,[STORE_TEMP(786, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_13,[STORE_TEMP(787, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_14,[STORE_TEMP(788, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_15,[STORE_TEMP(789, 3)]) { switch_CAT03_OBJ39_VAR02; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ39_VAR02_16,[STORE_TEMP(790, 3)]) { switch_CAT03_OBJ39_VAR02; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ39_VAR02) {
      1: CAT03_OBJ39_VAR02_1;           // dark blue
      1: CAT03_OBJ39_VAR02_2;           // pale green
      1: CAT03_OBJ39_VAR02_3;           // pink
      1: CAT03_OBJ39_VAR02_4;           // yellow
      1: CAT03_OBJ39_VAR02_5;           // red
      1: CAT03_OBJ39_VAR02_6;           // light blue
      1: CAT03_OBJ39_VAR02_7;           // green
      1: CAT03_OBJ39_VAR02_8;           // dark green
      1: CAT03_OBJ39_VAR02_9;           // blue
      1: CAT03_OBJ39_VAR02_10;          // cream
      1: CAT03_OBJ39_VAR02_11;          // mauve
      1: CAT03_OBJ39_VAR02_12;          // purple
      1: CAT03_OBJ39_VAR02_13;          // orange
      1: CAT03_OBJ39_VAR02_14;          // brown
      1: CAT03_OBJ39_VAR02_15;          // grey
      1: CAT03_OBJ39_VAR02_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ39_VAR_view, view) {
    0: colour_CAT03_OBJ39_VAR01;
    1: colour_CAT03_OBJ39_VAR02;
    2: switch_CAT03_OBJ39_VAR03;
    3: switch_CAT03_OBJ39_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ39_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ39_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ39_VAR_menu, view) {
    0:  layout_CAT03_OBJ39_VAR01_menu;
    1:  layout_CAT03_OBJ39_VAR02_menu;
    2:  layout_CAT03_OBJ39_VAR03_menu;
    3:  layout_CAT03_OBJ39_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ39_TXT, view) {
    0:  string(STR_CAT03_OBJ38_VAR01);
    1:  string(STR_CAT03_OBJ38_VAR01);
    2:  string(STR_CAT03_OBJ38_VAR01);
    3:  string(STR_CAT03_OBJ38_VAR01);
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ39) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ39);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ39_VAR;
            purchase:               switch_CAT03_OBJ39_VAR_menu;
            additional_text:        switch_CAT03_OBJ39_TXT;
        }
    }
}










/////////////////////////////////////////////////////////////////////
// CAT03_OBJ40
/////////////////////////////////////////////////////////////////////

spriteset(spriteset_CAT03_OBJ40_VAR01, "gfx/CAT03_vehicles.png") { template_1x1(316, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ40_VAR02, "gfx/CAT03_vehicles.png") { template_1x1(390, 0,   0, 256) }
spriteset(spriteset_CAT03_OBJ40_VAR03, "gfx/CAT03_vehicles.png") { template_1x1(316, 266, 0, 256) }
spriteset(spriteset_CAT03_OBJ40_VAR04, "gfx/CAT03_vehicles.png") { template_1x1(390, 266, 0, 256) }

spritelayout layout_CAT03_OBJ40_VAR01a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ40_VAR01; }
}
spritelayout layout_CAT03_OBJ40_VAR01b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ40_VAR01; }
}
////////////////////////////////////////////
spritelayout layout_CAT03_OBJ40_VAR02a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ40_VAR02; }
}
spritelayout layout_CAT03_OBJ40_VAR02b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ40_VAR02; }
}
////////////////////////////////////////////
spritelayout layout_CAT03_OBJ40_VAR03a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ40_VAR03;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
spritelayout layout_CAT03_OBJ40_VAR03b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ40_VAR03;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3)); }
}
////////////////////////////////////////////
spritelayout layout_CAT03_OBJ40_VAR04a {
    ground   { sprite: LOAD_TEMP(0) + LOAD_TEMP(1); }
    building { sprite: spriteset_CAT03_OBJ40_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));  }
}
spritelayout layout_CAT03_OBJ40_VAR04b {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ40_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: (param_only_cc_recolour == 1 ? PALETTE_USE_DEFAULT : LOAD_TEMP(3));  }
}


// spritelayouts for the purchase menu
spritelayout layout_CAT03_OBJ40_VAR01_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ40_VAR01; }
}
spritelayout layout_CAT03_OBJ40_VAR02_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ40_VAR02; }
}
spritelayout layout_CAT03_OBJ40_VAR03_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ40_VAR03;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_LIGHT_BLUE; }
}
spritelayout layout_CAT03_OBJ40_VAR04_menu {
    ground   { sprite: GROUNDSPRITE_CLEARED; }
    building { sprite: spriteset_CAT03_OBJ40_VAR04;
               recolour_mode: RECOLOUR_REMAP;
               palette: PALETTE_CC_WHITE;  }
}

random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ40_VAR01) {
    1: layout_CAT03_OBJ40_VAR01a;
    3: layout_CAT03_OBJ40_VAR01b;
}
random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ40_VAR02) {
    1: layout_CAT03_OBJ40_VAR02a;
    3: layout_CAT03_OBJ40_VAR02b;
}
random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ40_VAR03) {
    1: layout_CAT03_OBJ40_VAR03a;
    3: layout_CAT03_OBJ40_VAR03b;
}
random_switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ40_VAR04) {
    1: layout_CAT03_OBJ40_VAR04a;
    3: layout_CAT03_OBJ40_VAR04b;
}

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_1, [STORE_TEMP(775, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_2, [STORE_TEMP(776, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_3, [STORE_TEMP(777, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_4, [STORE_TEMP(778, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_5, [STORE_TEMP(779, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_6, [STORE_TEMP(780, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_7, [STORE_TEMP(781, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_8, [STORE_TEMP(782, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_9, [STORE_TEMP(783, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_10,[STORE_TEMP(784, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_11,[STORE_TEMP(785, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_12,[STORE_TEMP(786, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_13,[STORE_TEMP(787, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_14,[STORE_TEMP(788, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_15,[STORE_TEMP(789, 3)]) { switch_CAT03_OBJ40_VAR03; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR03_16,[STORE_TEMP(790, 3)]) { switch_CAT03_OBJ40_VAR03; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ40_VAR03) {
      1: CAT03_OBJ40_VAR03_1;           // dark blue
      1: CAT03_OBJ40_VAR03_2;           // pale green
      1: CAT03_OBJ40_VAR03_3;           // pink
      1: CAT03_OBJ40_VAR03_4;           // yellow
      1: CAT03_OBJ40_VAR03_5;           // red
      1: CAT03_OBJ40_VAR03_6;           // light blue
      1: CAT03_OBJ40_VAR03_7;           // green
      1: CAT03_OBJ40_VAR03_8;           // dark green
      1: CAT03_OBJ40_VAR03_9;           // blue
      1: CAT03_OBJ40_VAR03_10;          // cream
      1: CAT03_OBJ40_VAR03_11;          // mauve
      1: CAT03_OBJ40_VAR03_12;          // purple
      1: CAT03_OBJ40_VAR03_13;          // orange
      1: CAT03_OBJ40_VAR03_14;          // brown
      1: CAT03_OBJ40_VAR03_15;          // grey
      1: CAT03_OBJ40_VAR03_16;  }           // white

// store recolour palette number to memory 3
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_1, [STORE_TEMP(775, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_2, [STORE_TEMP(776, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_3, [STORE_TEMP(777, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_4, [STORE_TEMP(778, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_5, [STORE_TEMP(779, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_6, [STORE_TEMP(780, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_7, [STORE_TEMP(781, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_8, [STORE_TEMP(782, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_9, [STORE_TEMP(783, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_10,[STORE_TEMP(784, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_11,[STORE_TEMP(785, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_12,[STORE_TEMP(786, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_13,[STORE_TEMP(787, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_14,[STORE_TEMP(788, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_15,[STORE_TEMP(789, 3)]) { switch_CAT03_OBJ40_VAR04; }
switch (FEAT_OBJECTS,SELF, CAT03_OBJ40_VAR04_16,[STORE_TEMP(790, 3)]) { switch_CAT03_OBJ40_VAR04; }

// randomize colours by calling switches that use STORE_TEMP
random_switch (FEAT_OBJECTS, SELF, colour_CAT03_OBJ40_VAR04) {
      1: CAT03_OBJ40_VAR04_1;           // dark blue
      1: CAT03_OBJ40_VAR04_2;           // pale green
      1: CAT03_OBJ40_VAR04_3;           // pink
      1: CAT03_OBJ40_VAR04_4;           // yellow
      1: CAT03_OBJ40_VAR04_5;           // red
      1: CAT03_OBJ40_VAR04_6;           // light blue
      1: CAT03_OBJ40_VAR04_7;           // green
      1: CAT03_OBJ40_VAR04_8;           // dark green
      1: CAT03_OBJ40_VAR04_9;           // blue
      1: CAT03_OBJ40_VAR04_10;          // cream
      1: CAT03_OBJ40_VAR04_11;          // mauve
      1: CAT03_OBJ40_VAR04_12;          // purple
      1: CAT03_OBJ40_VAR04_13;          // orange
      1: CAT03_OBJ40_VAR04_14;          // brown
      1: CAT03_OBJ40_VAR04_15;          // grey
      1: CAT03_OBJ40_VAR04_16;  }           // white

// decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ40_VAR_view, view) {
    0: switch_CAT03_OBJ40_VAR01;
    1: switch_CAT03_OBJ40_VAR02;
    2: colour_CAT03_OBJ40_VAR03;
    3: colour_CAT03_OBJ40_VAR04;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ40_VAR, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_CAT03_OBJ40_VAR_view;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ40_VAR_menu, view) {
    0:  layout_CAT03_OBJ40_VAR01_menu;
    1:  layout_CAT03_OBJ40_VAR02_menu;
    2:  layout_CAT03_OBJ40_VAR03_menu;
    3:  layout_CAT03_OBJ40_VAR04_menu;
}

switch (FEAT_OBJECTS, SELF, switch_CAT03_OBJ40_TXT, view) {
    0:  string(STR_CAT03_OBJ38_VAR01);
    1:  string(STR_CAT03_OBJ38_VAR01);
    2:  string(STR_CAT03_OBJ38_VAR01);
    3:  string(STR_CAT03_OBJ38_VAR01);
}


if (param_no_infrastructure == 0) {
    item (FEAT_OBJECTS, CAT03_OBJ40) {
        property {
            class:                  "TTRI";
            classname:              string(STR_CAT03);
            name:                   string(STR_CAT03_OBJ40);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  1;
            remove_cost_multiplier: 1;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           (param_scenario_editor==1 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                    ( (param_scenario_editor==1 && param_irremovable==0) ? bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ONLY_SE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) :
                                        ((param_scenario_editor==0 && param_irremovable==1) ? bitmask(OBJ_FLAG_IRREMOVABLE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER) : bitmask(OBJ_FLAG_ANYTHING_REMOVE,OBJ_FLAG_ON_WATER,OBJ_FLAG_DRAW_WATER)));
            height:                 8;
            num_views:              4;
        }
        graphics {
            default:                switch_CAT03_OBJ40_VAR;
            purchase:               switch_CAT03_OBJ40_VAR_menu;
            additional_text:        switch_CAT03_OBJ40_TXT;
        }
    }
}